{% import '@bolt-components-link/_link-macros.twig' as macros %}

{% set schema = bolt.data.components['@bolt-components-link'].schema %}

{% if enable_json_schema_validation %}
  {{ validate_data_schema(schema, _self) | raw }}
{% endif %}

{# DEPRECATED.  Use the property `url` instead of `href`. #}
{% if href %}
  {% set url = href %}
{% endif %}

{# DEPRECATED.  Use the property `is_headline` instead of `isHeadline`. #}
{% if isHeadline %}
  {% set is_headline = isHeadline %}
{% endif %}

{# DEPRECATED.  Use the property `on_click` instead of `onClick`. #}
{% if onClick %}
  {% set on_click = onClick %}
{% endif %}

{# DEPRECATED.  Use the property `on_click_target` instead of `onClickTarget`. #}
{% if onClickTarget %}
  {% set on_click_target = onClickTarget %}
{% endif %}

{# Variables #}
{% set this = init(schema) %}
{% set inner_attributes = create_attribute({}) %}
{% set icon_positions = schema.properties.icon.properties.position.enum %}

{% if this.data.url.value or this.props.url.value %}
  {% set _tag = 'a' %}
  {% if this.data.disabled.value %}
    {% set inner_attributes = inner_attributes.setAttribute('aria-disabled', 'true') %}
  {% else %}
    {% set inner_attributes = inner_attributes.setAttribute('href', url) %}
  {% endif %}
  {% if this.data.target.value %}
    {% set inner_attributes = inner_attributes.setAttribute('target', this.data.target.value) %}
  {% endif %}
{% else %}
  {% set _tag = 'button' %}
  {% set inner_attributes = inner_attributes.setAttribute('type', this.data.type.value ) %}
{% endif %}

{% set classes = [
  'c-bolt-link',
  this.data.is_headline.value ? 'c-bolt-link--headline' : '',
  this.data.display.value ? 'c-bolt-link--display-' ~ this.data.display.value : '',
  this.data.valign.value ? 'c-bolt-link--valign-' ~ this.data.valign.value : '',
] %}

{% if this.data.disabled.value and _tag == 'button' %}
  {% set inner_attributes = inner_attributes.setAttribute('disabled', true) %}
{% endif %}

{% if icon %}
  {% set icon_position = icon.position in icon_positions ? icon.position : schema.properties.icon.properties.position.default %}
{% endif %}

{#
Sort classes passed in via attributes into two groups:
1. Those that should be applied to the inner tag (namely, 'is-' and 'has-' classes)
2. Those that should be applied to the outer custom element (everything else EXCEPT c-bolt-* classes, which should never be passed in via atttributes)
#}
{% set outer_classes = [] %}
{% set inner_classes = classes %}

{% for class in this.props['class'] %}
  {% if class starts with 'is-' or class starts with 'has-' %}
    {% set inner_classes = inner_classes|merge([class]) %}
  {% elseif class starts with 'c-bolt-' == false %}
    {% set outer_classes = outer_classes|merge([class]) %}
  {% endif %}
{% endfor %}

{# link component's custom element wrapper #}
{% spaceless %}<bolt-link
  {{ this.props|without('href')|without('class') }}
  {% if outer_classes %} class="{{ outer_classes|join(' ') }}" {% endif %}
>
  {# For accessibility, use <a> tag if `url` provided. Otherwise use `<button type="button">`. #}
  <{{ _tag }} {{ inner_attributes.addClass(inner_classes) }}>
    {{ macros.slotted_icon(icon, icon_position, 'before') }}
    <ssr-keep for="bolt-link" class="c-bolt-link__text">
      {{- text|default(label)|default('Learn More') -}}
    </ssr-keep>
    {{ macros.slotted_icon(icon, icon_position, 'after') }}
  </{{ _tag }}>
</bolt-link>{% endspaceless %}
