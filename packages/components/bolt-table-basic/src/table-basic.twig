{% set schema = bolt.data.components["@bolt-components-table-basic"].schema %}

{% if enable_json_schema_validation %}
  {{ validate_data_schema(schema, _self) | raw }}
{% endif %}

{# Variables #}
{% set base_class = 'c-bolt-table-basic' %}
{% set attributes = create_attribute(attributes|default({})) %}

{# Set up checks to validate that the component's prop values are allowed, based on the component's schema #}
{% set format_options = schema.properties.format.enum %}

{# Check that the component's current prop values are valid. if not, default to the schema default #}
{% set format = format in format_options ? format : schema.properties.format.default %}
{% set borderless = borderless is same as(true) or borderless is same as(false) ? borderless : schema.properties.borderless.default %}
{% set first_col_fixed_width = first_col_fixed_width is same as(true) or first_col_fixed_width is same as(false) ? first_col_fixed_width : schema.properties.first_col_fixed_width.default %}

{% set top_headers = headers.top %}
{% set side_headers = headers.side %}

{# Array of classes based on the defined + default props #}
{% set classes = [
  'js-bolt-table-basic',
  'c-bolt-table-basic',
  format != 'regular' ? 'c-bolt-table-basic--numeric',
  borderless ? 'c-bolt-table-basic--borderless',
  fixed_width_table ? 'c-bolt-table-basic--fixed-width-table' : fixed_width_columns ? 'c-bolt-table-basic--fixed-width-columns--' ~ fixed_width_columns,
  side_headers ? 'c-bolt-table-basic--side-headers',
] %}

<table {{ attributes.addClass(classes) }}>
  {% if caption %}
    <caption>{{ caption }}</caption>
  {% endif %}
  {% if top_headers %}
    <thead>
      <tr>
        {% if side_headers %}
          <td></td>
        {% endif %}
        {% for cell in top_headers.cells %}
          {% set cell_attributes = create_attribute(cell.attributes|default({})) %}
          <th {{ cell_attributes }} scope="col">
            {% if cell.content %}
              {{ cell.content }}
            {% else %}
              {{ cell }}
            {% endif %}
          </th>
        {% endfor %}
      </tr>
    </thead>
  {% endif %}
  {% if rows %}
    <tbody>
      {% for row in rows %}
        <tr>
          {% if side_headers.cells %}
            {% set index = loop.index0 %}
            {% set cell = side_headers.cells[index] %}
            {% set cell_attributes = create_attribute(cell.attributes|default({})) %}
            {% if cell is not empty %}
              <th {{ cell_attributes }} scope="row">
                {% if cell.content %}
                  {{ cell.content }}
                {% else %}
                  {{ cell }}
                {% endif %}
              </th>
            {% endif %}
          {% endif %}
          {% for cell in row.cells %}
            {% set cell_attributes = create_attribute(cell.attributes|default({})) %}
            <td {{ cell_attributes }}>
              {% if cell is iterable %}
                {{ cell.content }}
              {% else %}
                {{ cell }}
              {% endif %}
            </td>
          {% endfor %}
        </tr>
      {% endfor %}
    </tbody>
  {% endif %}
  {% if footer %}
    <tfoot>
      <tr>
        {% if side_headers.cells %}
          {% for cell in side_headers.cells %}
            {% if loop.last %}
              <th>
                {% if cell.content %}
                  {{ cell.content }}
                {% else %}
                  {{ cell }}
                {% endif %}
              </th>
            {% endif %}
          {% endfor %}
        {% endif %}
        {% for cell in footer.cells %}
          {% set cell_attributes = create_attribute(cell.attributes|default({})) %}
          <td {{ cell_attributes }}>
            {% if cell.content %}
              {{ cell.content }}
            {% else %}
              {{ cell }}
            {% endif %}
          </td>
        {% endfor %}
      </tr>
    </tfoot>
  {% endif %}
</table>
