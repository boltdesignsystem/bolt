/* ------------------------------------ *\
   Button settings and tools
\* ------------------------------------ */

/**
 * Settings
 */

$bolt-button-border-width: $bolt-border-width;
$bolt-button-border-style: $bolt-border-style;

/**
 * Tools
 */

@mixin bolt-button-raised-effect {
  &:hover {
    transform: translate3d(0, -2px, 0);

    &:after {
      opacity: 0.4;
      box-shadow: 0 0.4em 1.5em var(--m-bolt-primary);
    }
  }
}

@mixin bolt-button {
  @include bolt-button-reset;

  display: flex;
  align-items: center;
  position: relative;
  transform: translate3d(0, 0, 0);
  font-weight: var(--bolt-type-font-weight-semibold);
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  border-radius: bolt-border-radius(small);
  border-width: $bolt-button-border-width;
  border-style: $bolt-button-border-style;
  border-color: transparent;
  outline: none;
  transition: background-color var(--bolt-transition),
    color var(--bolt-transition), transform var(--bolt-transition);

  &:before,
  &:after {
    content: '';
    display: block;
    position: absolute;
    top: -1px;
    right: -1px;
    bottom: -1px;
    left: -1px;
    z-index: 0;
    pointer-events: none;
    border-radius: inherit;
    transition: opacity var(--bolt-transition),
      box-shadow var(--bolt-transition), background-color var(--bolt-transition);
  }

  &:before {
    opacity: 0.8;
    box-shadow: 0 0.2em 0.75em var(--m-bolt-neutral);
  }

  &:after {
    opacity: 0;
  }

  &:focus,
  &.is-focus,
  &:active:not(:disabled) {
    transform: translate3d(0, 0, 0);
    outline: var(--bolt-focus-ring);
    outline-offset: 2px;
  }
}

// Button Colors / Types
@mixin bolt-button-style--primary() {
  @include bolt-button-raised-effect;

  color: var(--m-bolt-text-on-primary);
  background-color: var(--m-bolt-primary);
}

@mixin bolt-button-style--secondary() {
  @include bolt-button-raised-effect;

  color: var(--m-bolt-text-on-secondary);
  background-color: var(--m-bolt-secondary);

  &:before {
    opacity: 0.4;
  }
}

@mixin bolt-button-style--tertiary() {
  color: var(--m-bolt-text-on-tertiary);
  background-color: var(--m-bolt-tertiary);
  backdrop-filter: blur(0.1em);

  &:before {
    opacity: 0;
  }

  &:hover {
    transform: translate3d(0, 0, 0);

    &:after {
      opacity: 0.2;
      box-shadow: none;
      background-color: var(--bolt-color-gray);
    }
  }
}

@mixin bolt-button-style--text() {
  opacity: bolt-opacity(100);
  color: var(--m-bolt-link);

  &:before,
  &:after {
    display: none;
  }

  &:hover {
    transform: translate3d(0, 0, 0);
    color: var(--m-bolt-headline);

    &:after {
      opacity: 0.2;
      box-shadow: none;
      background-color: var(--bolt-color-gray);
    }
  }
}

@mixin bolt-button-style--disabled() {
  opacity: 1;
  transform: none;
  color: var(--m-bolt-text-on-disabled);
  cursor: not-allowed;

  * {
    pointer-events: none;
  }

  &:not(.c-bolt-button--text) {
    background-color: var(--m-bolt-disabled);
  }

  &:before,
  &:after {
    display: none;
  }

  &:hover {
    text-decoration: none;
  }
}

@mixin bolt-button-style($style) {
  @if ($style == 'primary') {
    @include bolt-button-style--primary;
  } @else if ($style == 'secondary') {
    @include bolt-button-style--secondary;
  } @else if ($style == 'text') {
    @include bolt-button-style--text;
  } @else if ($style == 'disabled') {
    @include bolt-button-style--disabled;
  } @else if ($style == 'tertiary') {
    @include bolt-button-style--tertiary;
  }
}
