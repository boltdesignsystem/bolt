//------------------------------------
//    #BOLT TYPEAHEAD COMPONENT
//------------------------------------

@import '@bolt/core-v3.x';

$bolt-clear-button-size: 1.7rem;
$bolt-clear-button-size-at-med: 1.4rem;
$bolt-typeahead-button-width: calc(var(--bolt-spacing-x-medium) + 0.75rem);
$bolt-typeahead-border-width: $bolt-border-width;
$bolt-typeahead-border-style: $bolt-border-style;
$bolt-typeahead-border-radius: 6px;
$bolt-typeahead-placeholder-color: var(--bolt-color-gray);
$bolt-typeahead-result-highlight-color: var(--bolt-color-gray-xlight);

/**
 * 1. relative z-index so doesn't need to use bolt z-index mixin
 */

bolt-typeahead {
  display: flex;
  align-self: stretch;
  position: relative;
  text-align: start;
}

:host {
  position: relative;
}

bolt-autosuggest {
  width: 100%;
}

.c-bolt-typeahead {
  display: flex;
  flex-direction: column;
  position: relative;
  width: 100%;
  border-radius: $bolt-typeahead-border-radius;
}

.c-bolt-typeahead__label {
  position: relative;
}

.c-bolt-typeahead__input {
  box-sizing: border-box; // needed when rendered to the Shadow DOM
  -webkit-appearance: none; // removes default styling (ex. heavy box shadow) in Safari
  width: 100%;
  max-width: 100%;
  padding: calc(var(--bolt-spacing-y-medium) / 2) $bolt-typeahead-button-width;
  font-size: 16px; // prevent zooming in on mobile
  color: var(--bolt-color-black);
  border-radius: $bolt-typeahead-border-radius;
  border-width: $bolt-typeahead-border-width;
  border-style: $bolt-typeahead-border-style;
  border-color: var(--bolt-color-navy-xlight);
  background-color: var(--bolt-color-white);
  transition: all 0.1s ease;
  text-overflow: ellipsis;
  outline-offset: -3px;
  outline-width: 2px;

  @media all and (min-width: bolt-bp(medium)) {
    padding-right: $bolt-clear-button-size-at-med;
  }

  @include bolt-mq(medium) {
    font-size: inherit;
  }

  &:focus {
    border-color: var(--bolt-color-navy-light);
    box-shadow: 0 0 0 2px var(--bolt-color-navy-xlight),
      inset 0 0 0 1px var(--bolt-color-navy-light);
    outline: 0;
  }

  &--open {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }

  &:disabled {
    color: var(--bolt-color-gray);
    cursor: not-allowed;
    background-color: var(--bolt-color-gray-light);
  }

  // Remove the native <input> clear button in IE 11 in lieu of JS-controlled clear button
  &::-ms-clear {
    display: none;
  }

  &::-webkit-input-placeholder,
  &::-moz-input-placeholder {
    transition: all 0.1s ease;
  }

  &::-webkit-input-placeholder {
    /* Chrome/Opera/Safari */
    color: $bolt-typeahead-placeholder-color;
  }

  &::-moz-placeholder {
    /* Firefox 19+ */
    color: $bolt-typeahead-placeholder-color;
  }

  &:-ms-input-placeholder {
    /* IE 10+ */
    color: $bolt-typeahead-placeholder-color;
  }

  &:-moz-placeholder {
    /* Firefox 18- */
    color: $bolt-typeahead-placeholder-color;
  }
}

.c-bolt-typeahead__menu {
  display: block;
  opacity: 0;
  position: absolute;
  top: calc(100% + 2px);
  right: 0;
  z-index: 10; /* [1] */
  width: 100%;
  min-width: 100%;
  max-height: 0;
  overflow: hidden;
  color: var(--bolt-color-black);
  text-transform: capitalize;
  border-bottom-right-radius: $bolt-typeahead-border-radius;
  border-bottom-left-radius: $bolt-typeahead-border-radius;
  box-shadow: var(--bolt-color-gray-light) 0px 15px 46px -10px;
  background-color: var(--bolt-color-white);
  transition: max-height 0.3s cubic-bezier(0.645, 0.045, 0.355, 1),
    opacity 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);

  &.is-open {
    opacity: 1;
    overflow-y: auto;
    max-height: calc(100vh - #{$bolt-typeahead-button-width});
    max-height: calc(100vh - var(--typeahead-height));
  }
}

.c-bolt-typeahead__results {
  overflow: hidden;
  margin: 0;
  padding: var(--bolt-spacing-y-xsmall) 0;
  list-style: none;
  border-bottom-right-radius: $bolt-typeahead-border-radius;
  border-bottom-left-radius: $bolt-typeahead-border-radius;

  &:empty {
    max-height: 0;
    border-width: 0;
  }
}

.c-bolt-typeahead__result {
  overflow: hidden;
  color: inherit;
  transition: background-color 0.1s ease;

  &.has-cursor {
    background-color: $bolt-typeahead-result-highlight-color;
  }

  &:active,
  &:focus {
    background-color: var(--bolt-color-navy-xlight);
  }
}

.c-bolt-typeahead__result-highlight {
  font-weight: var(--bolt-type-font-weight-bold);
}

.c-bolt-typeahead__result-text {
  display: block;
  padding: calc(var(--bolt-spacing-y-medium) / 2) var(--bolt-spacing-x-medium);
  padding-left: $bolt-typeahead-button-width;
  font-family: var(--bolt-type-font-family-body);
  font-size: var(--bolt-type-font-size-xsmall);
  color: inherit;
  line-height: var(--bolt-type-line-height-xsmall);
  text-transform: initial; // fix for weird capitalization
  cursor: pointer;
}

.c-bolt-typeahead__wrapper {
  width: 100%;
}

.c-bolt-typeahead__input-wrapper {
  flex-shrink: 0;
  position: relative; // used for positioning search clear button in relation to the <input>
}

.c-bolt-typeahead__button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 1; /* [1] */
  cursor: pointer;
  border: 0;
  transition: opacity 0.1s ease;

  // overwrite .e-bolt-button--transparent hover and active transform
  &:hover,
  &:focus,
  &:active:not(:disabled) {
    transform: translateY(-50%);
  }
}

.c-bolt-typeahead__button--clear {
  visibility: hidden;
  opacity: 0;
  right: 0;
}

.c-bolt-typeahead__button--submit {
  left: 0;
}

.c-bolt-typeahead__icon {
  font-size: 1.5rem;
  color: var(--bolt-color-navy-light);
  line-height: 1;
}

.c-bolt-typeahead__icon--clear {
  fill: currentColor;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 0);
  z-index: 1; /* [1] */
  width: 1rem; // needed for icon SSR rendering
  font-size: 1rem; // needed for icon SSR rendering
}

.c-bolt-typeahead__input[required]:valid ~ .c-bolt-typeahead__button--clear,
.c-bolt-typeahead__button--clear.is-visible {
  visibility: visible;
  opacity: 1;
}

.c-bolt-typeahead__input--with-clear-button
  ~ .c-bolt-typeahead__button--submit {
  opacity: 1;
}
