{% set schema = bolt.data.components["@bolt-components-accordion"].schema %}

{% if enable_json_schema_validation %}
  {{ validate_data_schema(schema, _self) | raw }}
{% endif %}

{# Variables #}
{% set base_class = "c-bolt-accordion-item" %}
{% set this = init(schema.properties.items.items) %}
{% set inner_attributes = create_attribute({}) %}
{% set label_attributes = create_attribute({}) %}
{% set content_attributes = create_attribute({}) %}

{# @todo: `uuid` will be deprecated, made for internal use only #}
{% set _uuid = this.data.uuid.value|default(bolt.data.config.env == "test" ? "12345" : random()) %}
{% set primary_uuid = base_class ~ "-#{_uuid}" %}
{% set secondary_uuid = base_class ~ "-inner-#{_uuid}" %}

{% set inactive = this.data.inactive.value %}
{% set trigger_spacing_class = "c-bolt-accordion-spacing--" ~ trigger_spacing|default(spacing) %}
{% set content_spacing_class = "c-bolt-accordion-spacing--" ~ content_spacing|default(spacing) %}

{% set trigger_tag = inactive ? "div" : "label" %}

{# init() will not return "trigger" because "trigger" can be an object or array #}
{% set trigger = trigger|default(schema.properties.items.items.trigger.default) %}

{# Array of classes based on the defined + default props #}
{% set classes = [
  base_class,
  box_shadow ? base_class ~ "--box-shadow" : "",
  no_separator ? "" : base_class ~ "--separator",
  icon_valign and icon_valign != "center" ? base_class ~ "--icon-valign-" ~ icon_valign : "",
  first ? base_class ~ "--first-item" : "",
  last ? base_class ~ "--last-item" : ""
] %}

{% set label_classes = [
  "c-bolt-accordion-item__trigger-label",
  "c-bolt-accordion-item__trigger-label--offset",
  inactive ? "c-bolt-accordion-item__trigger-label--inactive" : "",
  trigger_spacing_class
] %}

{% set content_classes = [
  "c-bolt-accordion-item__content-inner",
  trigger_spacing or content_spacing ? "" : "c-bolt-accordion-item__content-inner--offset",
  content_spacing_class
] %}

{% if not inactive %}
  {% set label_attributes = label_attributes.setAttribute("for", primary_uuid) %}
{% endif %}

{#
  Sort classes passed in via attributes into two groups:
  1. Those that should be applied to the inner tag (namely, "is-" and "has-" classes)
  2. Those that should be applied to the outer custom element (everything else EXCEPT c-bolt-* classes, which should never be passed in via attributes)
#}
{% set outer_classes = [] %}
{% set inner_classes = classes %}

{% for class in this.props['class'] %}
  {% if class starts with "is-" or class starts with "has-" %}
    {% set inner_classes = inner_classes|merge([class]) %}
  {% elseif class starts with "c-bolt-" == false %}
    {% set outer_classes = outer_classes|merge([class]) %}
  {% endif %}
{% endfor %}

<bolt-accordion-item
  {% if outer_classes %} class="{{ outer_classes|join(' ') }}" {% endif %}
  {{ this.props|without("content")|without("class") }}
  >
  {% if not inactive %}
    <input class="c-bolt-accordion-item__state" type="checkbox" id="{{ primary_uuid }}" {% if open %} checked{% endif %}>
  {% endif %}

  <div
    {{ inner_attributes.addClass(inner_classes) }}
    id="{{ secondary_uuid }}">

    <div class="c-bolt-accordion-item__trigger">
      <{{ trigger_tag }} {{ label_attributes.addClass(label_classes) }}>
        <ssr-keep for="bolt-accordion-item" class="c-bolt-accordion-item__trigger-content">
          <div slot="trigger">{{ trigger }}</div>
        </ssr-keep>
      </{{ trigger_tag }}>

      <a href="#{{ primary_uuid }}" class="c-bolt-accordion-item__trigger-link c-bolt-accordion-item__trigger-link--open {{ trigger_spacing_class }}">
        <span class="c-bolt-accordion-item__toggle-text">{{ this.data.open_label.value }}</span>
      </a>

      <a href="#{{ secondary_uuid }}" class="c-bolt-accordion-item__trigger-link c-bolt-accordion-item__trigger-link--close {{ trigger_spacing_class }}">
        <span class="c-bolt-accordion-item__toggle-text">{{ this.data.close_label.value }}</span>
      </a>
    </div>

    <div class="c-bolt-accordion-item__content">
      <ssr-keep for="bolt-accordion-item" {{ content_attributes.addClass(content_classes) }}>
        {{ content }}
      </ssr-keep>
    </div>
  </div>
</bolt-accordion-item>
