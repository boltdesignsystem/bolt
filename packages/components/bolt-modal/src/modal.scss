@import '@bolt/core-v3.x';
@import '@bolt/global/styles/06-themes/_themes.all.scss'; // @todo: remove this once bolt-theme() function is completely deprecated and removed.
@import '@bolt/global/styles/00-vars/_vars-mode.scss';

/* ------------------------------------ *\
   Modal
   ---
   Based originally off of
   https://github.com/edenspiekermann/a11y-dialog
   before heavy modifications
   and customizations
\* ------------------------------------ */

// Dev Notes
// 1. Fixes iOS-specific bug where browser navigation bar covers up modal footer, @see https://css-tricks.com/css-fix-for-100vh-in-mobile-webkit/

$bolt-modal-overlay-bg-color-dark: var(--bolt-color-navy-xdark);
$bolt-modal-overlay-bg-color-light: var(--bolt-color-white);
$bolt-modal-border-width: $bolt-border-width;
$bolt-modal-border-style: $bolt-border-style;
$bolt-modal-border-color: var(--m-bolt-border);
$bolt-modal-border-radius: bolt-border-radius(small);
$bolt-modal-max-height: 80vh;
$bolt-modal-transition: $bolt-transition;
$bolt-modal-breakpoint: 'small';
$bolt-modal-animation-scale: 0.95;

// Hide all the non-trigger (button / link, etc) content inside the <bolt-modal> container before the JS kicks in
bolt-modal:not([ready]) {
  display: none;
}

.c-bolt-modal {
  @include bolt-z-index(modal);

  display: block;
  opacity: bolt-opacity(0);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%; // Use % instead of vh or modal scrollbar is hidden behind bold scrollbar in IE11
  height: 100vh;
  height: -webkit-fill-available; // [1]
  // [Mai] reset font styles here so it doesn't inherit from parent container.
  font-family: var(--bolt-type-font-family-body);
  font-size: var(--bolt-type-font-size-medium);
  font-weight: var(--bolt-type-font-weight-regular);
  line-height: var(--bolt-type-line-height-medium);
  pointer-events: none;
  transition: opacity $bolt-modal-transition;
  overflow-x: hidden;
  overflow-y: hidden;

  &.is-open {
    opacity: bolt-opacity(100);
    cursor: pointer;
    pointer-events: auto;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;

    &.is-persistent {
      cursor: default;
    }
  }

  @include bolt-mq($until: $bolt-modal-breakpoint) {
    visibility: hidden;
    opacity: bolt-opacity(0);
    transition: opacity $bolt-modal-transition;

    [class*='t-bolt-'] {
      color: var(--bolt-color-black);
      background-color: var(--bolt-color-white);
    }

    .c-bolt-modal__overlay {
      display: none;
    }

    .c-bolt-modal__content {
      width: 100%;
      height: 100vh;
      height: -webkit-fill-available; // [1]
    }

    .c-bolt-modal__container {
      display: flex;
      flex-direction: column;
      height: 100vh;
      height: -webkit-fill-available; // [1]
      color: var(--bolt-color-black);
      background-color: var(--bolt-color-white);
    }

    .c-bolt-modal__container-header {
      flex-shrink: 0; // If header text is missing, this will partially collapse without setting flex-shrink
      padding: var(--bolt-spacing-y-small) var(--bolt-spacing-x-large)
        var(--bolt-spacing-y-small) var(--bolt-spacing-x-small);
    }

    .c-bolt-modal__container-header--hidden {
      height: calc(
        var(--bolt-spacing-y-medium) + var(--bolt-spacing-y-small) * 2
      ); // Match close button icon size and margin.
      padding: 0;
    }

    .c-bolt-modal__container-body {
      flex: auto;
      margin-top: auto;
      margin-bottom: auto;

      overflow-y: auto;
      -webkit-overflow-scrolling: touch;

      // This only works in Light DOM, which is fine because we're targeting IE11
      > .is-first-child {
        @include bolt-ie11-only {
          align-items: flex-start;
        }
      }
    }

    .c-bolt-modal__container-footer {
      padding: var(--bolt-spacing-y-small) var(--bolt-spacing-x-small);
    }

    [class*='c-bolt-modal__container--spacing-'] {
      .c-bolt-modal__container-body {
        padding: var(--bolt-spacing-y-small) var(--bolt-spacing-x-small);
      }
    }

    &.is-open {
      visibility: visible;
      opacity: bolt-opacity(100);
    }
  }
}

// Overlay color options
.c-bolt-modal:before {
  content: '';
  opacity: 0.8;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 0;
}

.c-bolt-modal:before,
.c-bolt-modal--overlay-dark:before {
  @include bolt-mq($bolt-modal-breakpoint) {
    background-color: $bolt-modal-overlay-bg-color-dark;
  }
}

.c-bolt-modal--overlay-light:before {
  @include bolt-mq($bolt-modal-breakpoint) {
    background-color: $bolt-modal-overlay-bg-color-light;
  }
}

// Content box
.c-bolt-modal__content {
  display: block;
  margin: 0;
  padding: 0;
  border: 0;
  background: transparent;

  @include bolt-mq($bolt-modal-breakpoint) {
    visibility: hidden;
    position: fixed;
    top: 0;
    left: 0;
    min-width: 200px; // Prevents content without defined width (such as image and video) from falling below 200px.
    max-width: calc(100% - var(--bolt-spacing-x-medium) * 2);
    max-height: $bolt-modal-max-height;
    transition: visibility $bolt-transition-timing $bolt-transition-ease
      $bolt-transition-timing;
  }

  @at-root .c-bolt-modal.is-open #{&} {
    cursor: auto;

    @include bolt-mq($bolt-modal-breakpoint) {
      visibility: visible;
      transition: visibility 0s $bolt-transition-ease 0s;
    }
  }
}

// Scroll options
@include bolt-mq($bolt-modal-breakpoint) {
  .c-bolt-modal--scroll-overall {
    .c-bolt-modal__content {
      position: relative;
      top: 50vh;
      transform: translateX(0) translateY(-50%);
      margin: 0 auto;
    }

    &.is-open {
      overflow-y: auto;
      -webkit-overflow-scrolling: touch;
      pointer-events: auto;

      .c-bolt-modal__content {
        transform: translateX(0) translateY(-50%) translateZ(0) perspective(1px); // The perspective hack here is to prevent the content from getting too blurry, a common CSS bug that happens to element with transform. Please note that this sub-pixel issue still persists at random breakpoints.
        @supports (-ms-ime-align: auto) {
          & {
            transform: translateX(0) translateY(-50%) translateZ(0); // Remove perspective hack for ie-edge only, causes modal content to shift by 1px when modal contains video and user hovers over player
          }
        }
      }
    }
  }

  .c-bolt-modal--scroll-container {
    .c-bolt-modal__content {
      top: 50%;
      left: 50%;
      transform: translateX(-50%) translateY(-50%);
    }

    &.is-open {
      .c-bolt-modal__content {
        transform: translateX(-50%) translateY(-50%) translateZ(0)
          perspective(1px); // The perspective hack here is to prevent the content from getting too blurry, a common CSS bug that happens to element with transform. Please note that this sub-pixel issue still persists at random breakpoints.
        @supports (-ms-ime-align: auto) {
          & {
            transform: translateX(-50%) translateY(-50%) translateZ(0); // Remove perspective hack for ie-edge only, causes modal content to shift by 1px when modal contains video and user hovers over player
          }
        }
      }
    }

    .c-bolt-modal__container-body {
      max-height: calc(#{$bolt-modal-max-height} - 6rem);
      overflow-y: auto;
      -webkit-overflow-scrolling: touch;
    }
  }
}

// Content width options
@include bolt-mq($bolt-modal-breakpoint) {
  .c-bolt-modal__content--width-regular {
    width: 100% / 12 * 10;
  }

  .c-bolt-modal__content--width-optimal {
    width: 75ch;
  }

  .c-bolt-modal__content--width-full {
    width: calc(100% - var(--bolt-spacing-x-medium) * 2);
  }
}

/**
  * Modal Container
  * 1. translate3d(0, 0, 0) is needed to fix http://vjira2:8080/browse/BDS-1672?filter=-1
**/
.c-bolt-modal__container {
  display: block;
  opacity: bolt-opacity(0);
  transform: translate3d(0, 0, 0) scale($bolt-modal-animation-scale); /* [1] */
  transition: opacity $bolt-modal-transition, transform $bolt-modal-transition;

  @at-root .c-bolt-modal.is-open #{&} {
    opacity: bolt-opacity(100);
    transform: translate3d(0, 0, 0) scale(1); /* [1] */
  }

  @include bolt-mq($bolt-modal-breakpoint) {
    border-radius: $bolt-modal-border-radius;
  }
}

.c-bolt-modal__container-header,
.c-bolt-modal__container-footer,
.c-bolt-modal__container-body {
  display: block;

  // @todo [Mai] Normally, block level spacing gets cancelled out if it's the last child, but that does not work with slots. This is an interim solution for it.
  ::slotted(*:last-child),
  ::slotted(*.is-last-child) {
    margin-bottom: 0 !important;
  }
}

.c-bolt-modal__container-header,
.c-bolt-modal__container-footer {
  position: relative;
}

.c-bolt-modal__container-header {
  &:after {
    content: '';
    display: block;
    position: absolute;
    right: 0;
    bottom: 0;
    left: 0;
    transform: translateY(100%);
    height: var(--bolt-spacing-y-xxsmall);
    pointer-events: none;
    background-image: linear-gradient(
      var(--bolt-color-gray-light),
      rgba(255, 255, 255, 0)
    );
  }
}

.c-bolt-modal__container-header--hidden {
  @include bolt-mq($bolt-modal-breakpoint) {
    @include bolt-visuallyhidden;
  }
}

.c-bolt-modal__container-footer {
  &:before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    transform: translateY(-100%);
    height: var(--bolt-spacing-y-xxsmall);
    pointer-events: none;
    background-image: linear-gradient(
      rgba(255, 255, 255, 0),
      var(--bolt-color-gray-light)
    );
  }
}

// Container spacing options
@each $size in $bolt-spacing-multiplier-system {
  $size-name: nth($size, 1);

  @include bolt-mq($bolt-modal-breakpoint) {
    .c-bolt-modal__container--spacing-#{$size-name} {
      .c-bolt-modal__container-body {
        padding: var(--bolt-spacing-y-#{$size-name})
          var(--bolt-spacing-x-#{$size-name});
      }

      .c-bolt-modal__container-header,
      .c-bolt-modal__container-footer {
        padding: calc(var(--bolt-spacing-y-#{$size-name}) / 2)
          var(--bolt-spacing-x-#{$size-name});
      }
    }
  }
}

// Controls
.c-bolt-modal__close-button {
  @include bolt-z-index(modal);

  position: absolute;
  top: 0;
  right: 0;
  background-color: transparent;
  transition: background-color $bolt-modal-transition;

  @include bolt-mq($bolt-modal-breakpoint) {
    @include bolt-border-radius(full);

    transform: translate3d(100%, -100%, 0);

    &:hover,
    &:focus-within {
      background-color: var(--m-bolt-tertiary);
    }
  }
}

.c-bolt-modal__close-button--hidden {
  @include bolt-mq($bolt-modal-breakpoint) {
    @include bolt-visuallyhidden;
  }
}

.c-bolt-modal__close-button__text {
  @include bolt-visuallyhidden;
}

.c-bolt-modal__close-button__icon {
  display: block;
  position: relative;
  width: var(--bolt-spacing-x-medium);
  height: var(--bolt-spacing-x-medium);
  margin: var(--bolt-spacing-y-small) var(--bolt-spacing-x-small);

  @include bolt-mq($bolt-modal-breakpoint) {
    width: calc(var(--bolt-spacing-x-medium) - 2px);
    height: calc(var(--bolt-spacing-x-medium) - 2px);
    margin: 0;
  }

  &:before,
  &:after {
    content: '';
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    width: var(--bolt-spacing-x-small);
    height: 2px;
    border-radius: $bolt-modal-border-radius;
    background-color: var(--bolt-color-navy-light);
    transform-origin: 50% 50%;

    @include bolt-mq($bolt-modal-breakpoint) {
      background-color: var(--bolt-color-white);
    }
  }

  &:before {
    transform: translate3d(-50%, -50%, 0) rotate(45deg);
  }

  &:after {
    transform: translate3d(-50%, -50%, 0) rotate(-45deg);
  }
}

.c-bolt-modal__close-button--dark {
  @include bolt-mq($bolt-modal-breakpoint) {
    &:hover,
    &:focus-within {
      background-color: var(--bolt-color-gray-light);
    }
  }

  .c-bolt-modal__close-button__icon {
    &:before,
    &:after {
      @include bolt-mq($bolt-modal-breakpoint) {
        background-color: var(--bolt-color-navy-light);
      }
    }
  }
}

.c-bolt-modal__close-button--light {
  @include bolt-mq($bolt-modal-breakpoint) {
    &:hover,
    &:focus-within {
      background-color: var(--bolt-color-navy);
    }
  }

  .c-bolt-modal__close-button__icon {
    &:before,
    &:after {
      @include bolt-mq($bolt-modal-breakpoint) {
        background-color: var(--bolt-color-white);
      }
    }
  }
}

.c-bolt-modal__dialog-title {
  @include bolt-visuallyhidden;
}
