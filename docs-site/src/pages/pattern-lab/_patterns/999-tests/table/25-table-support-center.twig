{% set main_content %}
  <bolt-stack>
    <bolt-text headline tag="h4" font-size="small">Support Center Support Documents Tables</bolt-text>
    <style>
      .cc-post { word-break: break-word; }
      .cc-1017-test-style {
        word-break: break-word;
      }
      .cc-1017-test-style tr th:nth-child(3), .cc-1017-test-style tr td:nth-child(3) {
        width:20%;
      }
    </style>

    {% set table %}
      <div class="cc-post">
        <table class="cc-1017-test-style e-bolt-table e-bolt-table--fixed-width-columns--first-two e-bolt-table--sticky-top-headers">
          <thead>
            <tr>
              <th>
                <span><strong><span><a id="E338" name="E338">SR #</a></span></strong></span>
              </th>
              <th>
                <span><strong><span>Issue #</span></strong></span>
              </th>
              <th>
                <span><strong><span>Title</span></strong></span>
              </th>
              <th>
                <span><strong><span>Description</span></strong></span>
              </th>
              <th>
                <span><strong><span>Product Area</span></strong></span>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                <span>D39264</span>
              </td>
              <td>
                <span>518839</span>
              </td>
              <td>
                <span>Multiple files uploaded using "select file" will be handled asynchronously</span>
              </td>
              <td>
                <span>In order to resolve an intermittent error when uploading multiple files using the "select file" button, each file will be uploaded asynchronously to avoid overloading the browser threshold.</span>
              </td>
              <td>
                <span>Case Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D47018</span>
              </td>
              <td>
                <span>517031</span>
              </td>
              <td>
                <span>Corrected parameter being encrypted during change portal configuration</span>
              </td>
              <td>
                <span>After configuring a changePortalLayout control using .pyDescription as property, trying to switch the portal was throwing a error page. The same configuration worked in earlier platform versions. This was traced to recent updates where the activity parameter ended up being encrypted along with the activity name, and has been resolved by removing the parameter from encryption input and adding it to encryption output.</span>
              </td>
              <td>
                <span>Case Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D47146</span>
              </td>
              <td>
                <span>515646</span>
              </td>
              <td>
                <span>Pick Values modal updated for deprecated list view handling</span>
              </td>
              <td>
                <span>Pick values were not displaying in the menus below Case Management-&gt; Tools -&gt; My Work, including "Work entered by me", "Work by workbasket", and "Work resolved by me recently". This was due to the use of deprecated list views: the pick values modal was failing to show and hide the busy indicator because the indicator now uses jQuery, but list view does not include jQuery. In order to resolve this, the equivalent Report Definition pyEnteredByMe has now been added under the navigation rule : pzProcessAndCaseRulesMainMenu.</span>
              </td>
              <td>
                <span>Case Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D51535</span>
              </td>
              <td>
                <span>519474</span>
              </td>
              <td>
                <span>Enhanced discrimination for tasks in MyPega spaces</span>
              </td>
              <td>
                <span>When using My Pega for spaces and tasks, using drag and drop to move many cases around quickly resulted in tasks intermittently ending up in a state where they could not be updated further and became unusable. Analysis showed that because the milliseconds part of the update time was rounded, the logic of comparing for value between 0 and 1000 failed when the comparison returned -ve value. To resolve this, the comparison has been modified to !=0 and the 'when' rule pyContinueTaskProcessing has been added as an extension along with the appropriate usage guide to restrict processing. By default, the system will consider task name, description, due date, assignee, and rank properties; if more properties are needed to evaluate, this when rule can help.</span>
              </td>
              <td>
                <span>Case Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D54200</span>
              </td>
              <td>
                <span>516775</span>
              </td>
              <td>
                <span>Custom attachment category parameter passed to dropdown</span>
              </td>
              <td>
                <span>Attempting to use the out-of-the-box “Attachments control” which was configured at design time to use a custom category where both the custom category and the section class were in the same work class resulted in the attachment category dropdown defaulting to “File” instead of the custom category. Investigation showed that the custom attachment category name configured on the control was missing in one of the pre-processing activities sequence. To resolve this, the activity Work-.pzInitAttachContent and the initAttachmentPage activity have been updated to pass the custom attachment category parameter.</span>
              </td>
              <td>
                <span>Case Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D59504</span>
              </td>
              <td>
                <span>524640</span>
              </td>
              <td>
                <span>Attachment drag drop searches only current Ajax context</span>
              </td>
              <td>
                <span>When the Interaction for customer service was open and more than 1 task from the sidebar was open, the drag and drop zone was missing on any subsequent Task/Cases past the first.&nbsp; In an Ajax container scenario, getElementByID js was searching in all the containers because they were present in DOM, and it was losing context. To resolve this, the code has been updated to only search in the current context when using an Ajax container.</span>
              </td>
              <td>
                <span>Case Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D63976</span>
              </td>
              <td>
                <span>524220</span>
              </td>
              <td>
                <span>Double decompression of Attachment BLOBs corrected</span>
              </td>
              <td>
                <span>Attachment streams were being double-decompressed on download. This was traced to the GetAttachmentReference activity in which the file was opened then performing a show-html of DisplayAttachment HTML. This internally called the DisplayAttachFile activity which attempted to open the file again, resulting in a double de-compression of the attachment BLOB. This has been corrected.</span>
              </td>
              <td>
                <span>Case Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D64506</span>
              </td>
              <td>
                <span>529333</span>
              </td>
              <td>
                <span>Improved accessibility around page landmarks</span>
              </td>
              <td>
                <span>Accessibility testing revealed an issue with pages where the main landmark was contained in another landmark. This has been resolved by removing the main role in the FlowActionHTML rule.&nbsp;</span>
              </td>
              <td>
                <span>Case Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D65513</span>
              </td>
              <td>
                <span>530181</span>
              </td>
              <td>
                <span>URL encryption modified for ShowAllOperators</span>
              </td>
              <td>
                <span>In the control ShowAllOperators the call to pzEncryptURLActionString was introduced to encrypt URLs to avoid hijacking. The content of the URL relied on the pxRequestor.pxWorkGroup property which was resolved using pega:reference tags. This approach worked in versions below 8.x, but in higher versions the tags were not resolved at runtime and results were not displayed. To resolve this,&nbsp; the requestorWorkGroup will be treated as string and passed as parameter instead of using pega:reference tags.</span>
              </td>
              <td>
                <span>Case Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D67323</span>
              </td>
              <td>
                <span>529946</span>
              </td>
              <td>
                <span>Cross-site scripting filtering added for CreateMergedWordDoc</span>
              </td>
              <td>
                <span>Cross-site scripting filtering has been added for the TemplateName parameter value in the CreateMergedWordDoc section.</span>
              </td>
              <td>
                <span>Case Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D79113</span>
              </td>
              <td>
                <span>543721</span>
              </td>
              <td>
                <span>Updated DisplayAttachment to handle SIngleClick download from Case Worker portal</span>
              </td>
              <td>
                <span>On using the script "pega.ui.HarnessActions.doAttachmentSingleClick" in the Worker portal to download attachments displayed within a screen flow, the entire application was hanging and no action was invoked even on clicking the Continue or Finish buttons of the screen flow. Whenever an attachment is downloaded using the script function pega.ui.HarnessActions.doAttachmentSingleClick() , an iframe is used and changetracker is called to communicate data between different iframes. However, the case worker portal is a single thread model while the manager and admin portals are multi threaded, which resulted in changetracker freezing on the worker portal. To resolve this, the DisplayAttachment HTML rule has been updated to build the necessary changeTrackerMap for the worker portal.</span>
              </td>
              <td>
                <span>Case Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D80120</span>
              </td>
              <td>
                <span>544213</span>
              </td>
              <td>
                <span>Custom attachment category parameter passed to dropdown</span>
              </td>
              <td>
                <span>Attempting to use the out-of-the-box “Attachments control” which was configured at design time to use a custom category where both the custom category and the section class were in the same work class resulted in the attachment category dropdown defaulting to “File” instead of the custom category. Investigation showed that the custom attachment category name configured on the control was missing in one of the pre-processing activities sequence. To resolve this, the activity Work-.pzInitAttachContent and the initAttachmentPage activity have been updated to pass the custom attachment category parameter.</span>
              </td>
              <td>
                <span>Case Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D47795</span>
              </td>
              <td>
                <span>524674</span>
              </td>
              <td>
                <span>Fallback to Pulse notification added for empty incoming account in CallEmailAutomation&nbsp;</span>
              </td>
              <td>
                <span>After upgrade, issues were seen with the sender receiving email notifications for sent messages when alias addresses were used for incoming emails. To resolve this, a fallback mechanism to use a Pulse notification has been added in cases where an incoming email account is not found in the pyCallEmailAutomation activity.</span>
              </td>
              <td>
                <span>Conversational Channels</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D48246</span>
              </td>
              <td>
                <span>518689</span>
              </td>
              <td>
                <span>TextAnalyzerClass will be populated during upgrade if not present</span>
              </td>
              <td>
                <span>After upgrading, the email channels were failing to process the emails and the error "Unable to load data page D_pyEntityClassMapping. Required parameters : ClassName cannot be blank" was seen in the tracer log. Analysis showed the email channels were failing to process the emails due to the pzUpgradeVersion property in Data-Channel-Email instances being inconsistent post-upgrade. To resolve this, the system has been updated so if the TextAnalyzerClass or name property is not present in old email channels (created in 7.4), it will populate that property in the upgrade activity with the default classname.</span>
              </td>
              <td>
                <span>Conversational Channels</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D49782</span>
              </td>
              <td>
                <span>518047</span>
              </td>
              <td>
                <span>Extension point added for ClearInteraction to support custom interactions</span>
              </td>
              <td>
                <span>In order to support clearing a custom interaction page after clicking the "Reset" button on preview console, an extension point has been added to pyClearInteraction.</span>
              </td>
              <td>
                <span>Conversational Channels</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D54120</span>
              </td>
              <td>
                <span>541351</span>
              </td>
              <td>
                <span>Improved handling for attachments not using UTF-8 encoding</span>
              </td>
              <td>
                <span>When an email was received that used a charset encoding other than UTF-8, special characters in the HTML body were not displayed and instead the replacement character was shown. To resolve this, the system will read the encoding from the email rather than use the meta tag, and will add the attachment's HTML encoding information in Data-WorkAttach-File so that the same can be used to process and display the original HTML properly.</span>
              </td>
              <td>
                <span>Conversational Channels</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D57865</span>
              </td>
              <td>
                <span>520962</span>
              </td>
              <td>
                <span>Added property check for outbound templated email reply</span>
              </td>
              <td>
                <span>When a template was used for the first time for outbound correspondence, email was generated correctly. If the same template was used as the content for reply, the generated email skipped all styles. This was traced to a missing property check, and has been resolved.</span>
              </td>
              <td>
                <span>Conversational Channels</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D29034</span>
              </td>
              <td>
                <span>500680</span>
              </td>
              <td>
                <span>Added support for JSON mapping of deep nested pagelist objects</span>
              </td>
              <td>
                <span>An exception occurred when using a JSON data transform in the service activity to map the clipboard data to JSON on the third level of a structure formed as Pagelist--&gt;page--&gt;pagelist. To resolve this, support has been added for nested pagelist mapping with deep nesting of objects (configured for one sided actions) and arrays.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D32381</span>
              </td>
              <td>
                <span>519464</span>
              </td>
              <td>
                <span>Transient property passivation handling improved</span>
              </td>
              <td>
                <span>Frequent "com.pega.pegarules.pub.PRRuntimeException" errors were seen in the production log file while working on the WO. This was traced to corruption in the blob caused by transient properties during passivation. To resolve this, corrections have been made to the handling for the transient property entries in the blob.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D33003</span>
              </td>
              <td>
                <span>511229</span>
              </td>
              <td>
                <span>Queue Batch activity correctly passes chlld process access group</span>
              </td>
              <td>
                <span>Attempting to create an index using the schema tools landing page was throwing an error in the table history stating "Create index failed". Investigation showed that this happened when a user was authenticated without the PegeRULES:DatabaseAdministrator role and then switched to an Access Group with the PegeRULES:DatabaseAdministrator role. The issue was traced to the activity that launched the batch requestor missing the parameter pzUseCurrentAccessGroupForChild due to the Queue Batch activity only passing the default access group authorization. This has been resolved by adding code to pass the additional authorization which will allow users to create an index in this scenario.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D37779</span>
              </td>
              <td>
                <span>514410</span>
              </td>
              <td>
                <span>DSS setting added to Invalidation query to tune performance</span>
              </td>
              <td>
                <span>Running a RuleInvalidation query on an SQLServer database with a large amount of data was causing performance issues. To improve performance, a force order hint has been added which can be enabled with the DSS setting racache/useForceOrderHintForInvalidationQuery.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D41228</span>
              </td>
              <td>
                <span>512106</span>
              </td>
              <td>
                <span>DSS added to Request Only Connect SOAP for Robust</span>
              </td>
              <td>
                <span>After upgrade, creating a new SOAP integration set to "Request only" in the Service tab and then running the activity showed requests coming with no response, then failure after three tries. This was traced to previous changes made to support Robust behavior and log failed asynchronous calls, and has been resolved by modifying the Robust support and moving it to a DSS. If “EnableRequestOnlyFaultMapping” is set to “true”, then the ANON_ROBUST_OUT_ONLY_OP option will be used; otherwise, the default behavior will be ANON_OUT_ONLY_OP.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D41229</span>
              </td>
              <td>
                <span>513588</span>
              </td>
              <td>
                <span>Enhancements added for using AWS file repositories</span>
              </td>
              <td>
                <span>Enhancements have been added to improve the use of AWS file storage:<br><br> Logging for AWS SDK connection metrics can be activated on a per-repository basis, either through the ruleform or through the DSS storage/class/:/enableMetrics.<br> INFO logging can be enabled on PegaAWSSDKMetricReporter to periodically output averages of recorded metrics for all registered S3 repositories with metric collection enabled, or INFO logging can be enabled on PegaAWSRequestMetricCollector to output recorded metrics on every client call for all registered S3 repositories with metric collection enabled.<br> The interval at which PegaAWSSDKMetricReporter logs metrics at can be configured with the DASS storage/AWSSDK/metricReportingInterval. This DASS is a system-wide setting, and not a per-repository setting. The default reporting interval is 90 seconds, and metric collection is disabled on all repositories by default.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D41580</span>
              </td>
              <td>
                <span>512482</span>
              </td>
              <td>
                <span>Check added for match of tenant ID class and thread</span>
              </td>
              <td>
                <span>Many bad class exceptions were logged on a multi-tenant system when accessing a worklist or refreshing the browser. This was traced to classDefinitonImpl.getDescendantIter() returning all classes (tenant + shared) because the classDefinition.getTable() API failed to resolve the table for a specific tenant. To resolve this, a condition has been added that will check that the tenant ID of the class matches the tenant ID of the current thread and skip the unmatched classes.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D42241</span>
              </td>
              <td>
                <span>518638</span>
              </td>
              <td>
                <span>CyberArk support has been added for this release</span>
              </td>
              <td>
                <span>CyberArk support has been added for this release.&nbsp;</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D47752</span>
              </td>
              <td>
                <span>513750</span>
              </td>
              <td>
                <span>Resolved Assembly time error for findPage signatures with two arguments</span>
              </td>
              <td>
                <span>Due to the introduction of IL assembly, an Assembly time error was generated after upgrade when saving a 'when' rule that had a page with the same name defined in both Parameters and Pages &amp; Classes. To resolve this, if the system is generating PegaAPI#findPage or PegaAPI#findPageWithException and passing a null as the second argument, then it will be cast as a String. This will ensure the compiler will not become confused as to the type of null when there are multiple findPage signatures with two arguments.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D48369</span>
              </td>
              <td>
                <span>514304</span>
              </td>
              <td>
                <span>Reinitializing Full Text Search will shut down Elastic Search regardless of search initialization status</span>
              </td>
              <td>
                <span>Pega search was only sporadically working after converting from standard sandbox-marketing to largesandbox-marketing. This was traced to the Full-Text Search initialization having failed on the app-tier node during re-initialization. As part of re-initialization, the existing node is shut down and the Elastic Search node is started. The shutdown process relied on a boolean flag which indicated if the current status of full-text search initialization was successful. In this case, ES was trying to validate all the cluster level settings, for every save of one of the cluster level settings, but could not due to topology changes in the Util Tier node. The boolean flag indicated initialization had failed so the shutdown process was not invoked, yet the system was attempting to start the second instance of an ES node on the same machine. To resolve this, the shutdown FTS code has been modified to shutdown ES regardless of the search initialization status.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D48392</span>
              </td>
              <td>
                <span>525130</span>
              </td>
              <td>
                <span>Conditions added for RuleSet names in private edits</span>
              </td>
              <td>
                <span>When a data type data page was referenced by a rule in a different RuleSet to that of data type itself, the data page disappeared from the list of data pages displayed in the data type. A private checkout of report definition Rule-Declare-Pages.pzGetDataPagesForExplorer and the removal of the filter criteria 'IRR.The_version_of_the_RuleSet_of_the_referencing_rule' Less Than or Equal To ' RS.pzRulesetVersion' allowed the data page to reappear. The root cause was traced to the Index-Reference sub report join in the report definition Rule-Declare-Pages.pzGetDataPagesForExplorer incorrectly matching the Index-Reference for the section and thus failing the selection criteria when the referencing rule was in a private edit. To resolve this, an other condition has been added for situations when the RuleSet name of the referencing rule contains "@" (which means the referencing rule is in private edit) to the two RDs. The other change is not to show private edits in the referencing rules, which is done by adding the condition .pxReferencingRuleSetName does not contain "@" in the RD pzGetReferencesInfo. This will not show the number of references and the referencing rules until it is checked in.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D48960</span>
              </td>
              <td>
                <span>517878</span>
              </td>
              <td>
                <span>Exception stack trace will be included as comments in generated assembly code</span>
              </td>
              <td>
                <span>When there is an exception during assembly time, that original exception message is assembled in the generated code. To improve the process of finding the the root cause by examining the original exception stack, the system has been updated to insert the original exception stack trace into the generated code as comments.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D50016</span>
              </td>
              <td>
                <span>515902</span>
              </td>
              <td>
                <span>Exception stack trace will be included as comments in generated assembly code</span>
              </td>
              <td>
                <span>When there is an exception during assembly time, that original exception message is assembled in the generated code. To improve the process of finding the the root cause by examining the original exception stack, the system has been updated to insert the original exception stack trace into the generated code as comments.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D51725</span>
              </td>
              <td>
                <span>516466</span>
              </td>
              <td>
                <span>DSS added to rpevent logging of sensitive data used as input during async batch task processing</span>
              </td>
              <td>
                <span>When running Async Batch Task Processing, the whole set of inputs was logged when an error occurred during ADP load. Because this might result in sensitive data such as SSN, DOB, IDs, etc, being included in the debugging output, a DSS has now been added which when set will avoid printing any sensitive information in the log.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D53253</span>
              </td>
              <td>
                <span>515307</span>
              </td>
              <td>
                <span>Versioning information removed from Universal SMA</span>
              </td>
              <td>
                <span>To clarify that Universal SMA is compatible with Pega 7.4 and all below versions, the repository name has been changed to remove the versioning number so it is listed as only "Universal SMA".</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D53674</span>
              </td>
              <td>
                <span>515624</span>
              </td>
              <td>
                <span>Stack traces will be logged if debug is enabled</span>
              </td>
              <td>
                <span>The error logging in com.pega.pegarules.exec.internal.declare.DeclareChangesHelperImpl#onSave was causing an issue with upgrades in MT environments due to excessive logs being thrown from the onSave method in DeclareChangesHelperImpl. These errors are logged when there is a database exception during System declare changes generation during onSave, and in a multiple tenant environment it resulted in Out of Memory exceptions because of logging stack traces. To resolve this, the system has been updated so that stack traces will only be logged when debug logs are enabled.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D54314</span>
              </td>
              <td>
                <span>517289</span>
              </td>
              <td>
                <span>Enhancements added for using AWS file repositories</span>
              </td>
              <td>
                <span>Enhancements have been added to improve the use of AWS file storage:<br><br> Logging for AWS SDK connection metrics can be activated on a per-repository basis, either through the ruleform or through the DSS storage/class/:/enableMetrics.<br> INFO logging can be enabled on PegaAWSSDKMetricReporter to periodically output averages of recorded metrics for all registered S3 repositories with metric collection enabled, or INFO logging can be enabled on PegaAWSRequestMetricCollector to output recorded metrics on every client call for all registered S3 repositories with metric collection enabled.<br> The interval at which PegaAWSSDKMetricReporter logs metrics at can be configured with the DASS storage/AWSSDK/metricReportingInterval. This DASS is a system-wide setting, and not a per-repository setting. The default reporting interval is 90 seconds, and metric collection is disabled on all repositories by default.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D55161</span>
              </td>
              <td>
                <span>527650</span>
              </td>
              <td>
                <span>getStoreDataTable updated to resolve thread lock issues</span>
              </td>
              <td>
                <span>An IlegalMonitorStateException in TableInformationMapImpl.getDataStoreTableInfo caused a read lock to not be released, preventing other threads from acquiring a ReentrantReadWriteLock.WriteLock on the same ReentrantReadWriteLock. This eventually lead to a Deadlock scenario forcing other threads into an irrecoverable WAITING state. The issue could be cleared by restarting the nodes, but the implementation of the getDataStoreTableInfo method has been updated to resolve this issue.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D56293</span>
              </td>
              <td>
                <span>536775</span>
              </td>
              <td>
                <span>Resolved timeout errors related to getIndexInfo</span>
              </td>
              <td>
                <span>When attempting to import large files (around 300MB) via Designer Studio a time out error was seen, but the same upload worked as expected from the command line. Investigation showed that the "approximate" argument in getIndexInfo caused wasteful analytic operations to be run on the database, hampering performance. To resolve this, areas where the results of the analysis are not needed have been modified to have aApproximate set to be true so it will not be run.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D56347</span>
              </td>
              <td>
                <span>523274</span>
              </td>
              <td>
                <span>Pega unit for case type records user inputs</span>
              </td>
              <td>
                <span>When creating a Pega unit for the case type by selecting Actions -&gt; Record test case for Case, the user inputs were not recorded for embedded page properties.&nbsp; This has been corrected.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D56452</span>
              </td>
              <td>
                <span>521769</span>
              </td>
              <td>
                <span>Auto populate properties will fetch data from descendant classes</span>
              </td>
              <td>
                <span>A page list property set to be populated by the "Copy data from a data page" or "Refer to a data page" option had a blank property value. The warning "Copy from declare page of incompatible class: Code-Pega-List" appeared. Investigation showed that the failure was caused by the embedded class of the auto-populate being different from the data page's dynamic class. This was due to the data in the data page being sourced from Report Definition; that fetches data from its descendant classes, causing the class of the data page to be dependent on the report definition configuration. To resolve this, the system has been updated so that Auto Populate properties will allow fetching data from descendant classes.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D57855</span>
              </td>
              <td>
                <span>521124</span>
              </td>
              <td>
                <span>Context retained during nested automation</span>
              </td>
              <td>
                <span>Issues were seen with context being passed correctly with automation. When a Data Page that was used to abstract the call to a REST API used a Data Transform which in turn used a Data Page which also used a call to a REST API to retrieve an OAuth Token, an error appeared. The same worked when a URL was provided on the Connect REST. When a service case was launched but a Flow Action wasn't submitted, then another service case was added and submitted, the post-processing robotic automation activity used the run robotic automation activity from the previous service case instead of the current service case targeted for completion. This has been resolved by updating the webwb • pzpega_ui_doc_submit.js file to pass the correct MDIContext based on the event target of FA submission while invoking RDA automation.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D58964</span>
              </td>
              <td>
                <span>520128</span>
              </td>
              <td>
                <span>Enhancements added for using AWS file repositories</span>
              </td>
              <td>
                <span>Enhancements have been added to improve the use of AWS file storage:<br><br> Logging for AWS SDK connection metrics can be activated on a per-repository basis, either through the ruleform or through the DSS storage/class/:/enableMetrics.<br> INFO logging can be enabled on PegaAWSSDKMetricReporter to periodically output averages of recorded metrics for all registered S3 repositories with metric collection enabled, or INFO logging can be enabled on PegaAWSRequestMetricCollector to output recorded metrics on every client call for all registered S3 repositories with metric collection enabled.<br> The interval at which PegaAWSSDKMetricReporter logs metrics at can be configured with the DASS storage/AWSSDK/metricReportingInterval. This DASS is a system-wide setting, and not a per-repository setting. The default reporting interval is 90 seconds, and metric collection is disabled on all repositories by default.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D59106</span>
              </td>
              <td>
                <span>526917</span>
              </td>
              <td>
                <span>File Listener null-pointer exception resolved with context check</span>
              </td>
              <td>
                <span>A service file rule associated with a file listener was encountering a Null Pointer Exception. Investigation showed that the system successfully processed the first record in the service file, then it encountered the null-pointer exception indicating that the listener state was null. This was traced to functionality introduced in an earlier version to ensure File Listeners are succinctly shut down when a Cloud Node is moved to queiscing.&nbsp; As part of that work, the Rule-Service-File was linked to ListenerStateManager and did not work in a scenario where the rule could be executed outside of that context. This has been resolved by adding a check for context before directing the activity.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D59158</span>
              </td>
              <td>
                <span>534819</span>
              </td>
              <td>
                <span>CMIS Update Request corrected for single Value List property</span>
              </td>
              <td>
                <span>After upgrade, following the process of searching Documents by connecting to CMIS and getting the results, then selecting the document, editing it, and resubmitting the document to the CMIS repository by clicking on the update button worked when passing a multi row of&nbsp; values to the Value list property but failed when passing a single row of value to the Value List property. An error was generated with the message "pega.pegarules.pub.services.InboundMappingException: Failed to process CMIS service 'updateProperties' ". In 7.2, updateProperties CMIS functionality uses the Apache API opencmis.commons.spi.ObjectService#updateProperties() whereas in 8.3 it is refactored to use the API opencmis.client.api.CmisObject#updateProperties() and this API allows multi-valued property to be updated with multiple values only. To resolve this, the CMIS connector has been modified to update the properties implementation such that it will pass-on the property update value to Apache OpenCMIS API as either List or Scalar based on the property definition (whether Property is configured as multi-valued or not).</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D60206</span>
              </td>
              <td>
                <span>529325</span>
              </td>
              <td>
                <span>Resolved null pointer on Reference Helper startup</span>
              </td>
              <td>
                <span>An issue with the system failing to start and generating a NullPointerException on RUFReferenceHelper.java has been resolved by modifying some Rule-Utility-Function code to better handle threads that are not completely initiaized yet but still running rules.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D60318</span>
              </td>
              <td>
                <span>526870</span>
              </td>
              <td>
                <span>Data table validation message placement updated</span>
              </td>
              <td>
                <span>An issue with validation errors unexpectedly appearing on primary key columns instead of on an added decimal data type column was traced to the system using a temporary page to update the record: if there was an error, all of the messages were copied to the temporary page and put on the first key of the data type. To resolve this, the system will populate the messages on individual properties on the main page and the rest of the messages will be put on the first key of the data type.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D60375</span>
              </td>
              <td>
                <span>527754</span>
              </td>
              <td>
                <span>Resolved upgrade SqlSyntaxErrorException</span>
              </td>
              <td>
                <span>When trying to perform an in-place update, the error "SqlSyntaxErrorException" appeared. Investigation showed that DDL statements for Adding 'pzInsKey' as PrimaryKey for Tables pc_work and pr_sys_locks were generated during the upgrade while pzInsKey was already the PrimaryKey in corresponding tables. This has been corrected.&nbsp;</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D60442</span>
              </td>
              <td>
                <span>522061</span>
              </td>
              <td>
                <span>Enhanced logging and error messages for JSONMappingUtils failing to map a number value</span>
              </td>
              <td>
                <span>Some integer properties were not mapped from JSON, such as itemID. Investigation showed that because the maximum range of a signed integer is 2,147,483,647, only those itemIDs less than or equal to that were processed during the initial mapping of the incoming JSON data. Others were bypassed to allow for the remaining properties to map to the clipboard. As this mapping incident is rare, no code changes will be made to address it. Instead, if this condition is seen Pega recommends changing the property mode manually to text to prevent arithmetic being done on itemIDs or other integers.&nbsp; In order to better support administrators and developers, updates have been made to the warn/error log messages in the event of JSONMappingUtils failing to map a number value so that missing data mapping will be clearly indicated.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D61199</span>
              </td>
              <td>
                <span>533477</span>
              </td>
              <td>
                <span>Support expanded for postgres versions and logging improved</span>
              </td>
              <td>
                <span>While trying to import data into the Data Type Tables using a CSV file and selecting the 'Add or Update' option, an error appeared and the import failed.&nbsp; Using 'Add or Delete' worked as expected.&nbsp; This was traced to the import of data failing for postgres version 10.x because UseMerge for postgres did not use merge if the version of Postgres was not 9. Support has now been added for versions of Postgres higher than 9 in SQLGeneratorPostgres.useMerge(), and logging has been enhanced to improve triaging issues such as this.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D61253</span>
              </td>
              <td>
                <span>527653</span>
              </td>
              <td>
                <span>Exception stack trace will be included as comments in generated assembly code</span>
              </td>
              <td>
                <span>When there is an exception during assembly time, that original exception message is assembled in the generated code. To improve the process of finding the the root cause by examining the original exception stack, the system has been updated to insert the original exception stack trace into the generated code as comments.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D61601</span>
              </td>
              <td>
                <span>524367</span>
              </td>
              <td>
                <span>Corrected ISO format datetime handling for API case creation</span>
              </td>
              <td>
                <span>When providing a date time field in ISO format for case creation through an API request, the date times were not validated or converted to acceptable values for Pega to handle them. To resolve this, ISO Date Time conversion will be done after a page-change-class to the right class, a null pointer error has been resolved, and "validate embedded page" has been unchecked in pyFlowParameters.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D61706</span>
              </td>
              <td>
                <span>524955</span>
              </td>
              <td>
                <span>PropertySet will iterate over chageList map copy to resolve CME</span>
              </td>
              <td>
                <span>An empty menu was seen intermittently when handling incoming email, and a ConcurrentModificationException error was logged. Investigation showed that a step scope changeList map used in the handleChaining method was sometimes modified by another process while the first one was iterating over it. To resolve this, PropertySet will receive copies of the change list map from clipboard pages instead of the original map.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D61971</span>
              </td>
              <td>
                <span>529606</span>
              </td>
              <td>
                <span>Search Landing Page handling added for email addresses containing hyphens</span>
              </td>
              <td>
                <span>When an e-mail addresse containing a hyphen was entered for the Automated Search Alert functionality, the validation error "Please Enter Valid Email Address(s)" appeared. For example,&nbsp; <a href="mailto:user@comp-name.com">user@comp-name.com</a> was not accepted. To resolve this, the regexp function used for the email validator has been updated.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D62355</span>
              </td>
              <td>
                <span>529677</span>
              </td>
              <td>
                <span>ClassName retrieved from rule definition when root record comes from primary page</span>
              </td>
              <td>
                <span>A When rule with single condition .DateProp &gt;= .DateTimeProp was returning true when DateProp was set to a certain date &amp; DateTimeProp was set to a date after DateProp. This was expected to return false. Investigation showed this was a missed use-case for property expressions where the root record came from the Primary Page, and was traced to an issue with the values being converted to String and the class not being set properly when the IL Assembler was used to resolve the Primary.IntegerProp's type. This has been resolved by returning the pyClassName retrieved from the rule definition page.&nbsp;</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D62755</span>
              </td>
              <td>
                <span>523431</span>
              </td>
              <td>
                <span>Enhanced diagnostic logging for Email Listener failures</span>
              </td>
              <td>
                <span>In order to better diagnose issues where the email listener entered a disabled state as soon as it was started, a catch block has been added to enhance logging the reason of failure.&nbsp;&nbsp;</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D62840</span>
              </td>
              <td>
                <span>534123</span>
              </td>
              <td>
                <span>Updated HashMap logic for better concurrent thread handling</span>
              </td>
              <td>
                <span>The Pega execution engine was getting stuck at com.pega.eclipse.util.collections.HashtableOfIntValues.get for many thread within thread dumps. Investigation showed that when the key was not present in keytable, a thread would be stuck in an endless 'while' loop related to mapping.&nbsp; To resolve this, the data structure that is used for ruleset mapping from HashtableOfIntValues to Concurrent HashMap has been modified to better handle concurrent threads, and the handling for get and put has been updated.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D63234</span>
              </td>
              <td>
                <span>529098</span>
              </td>
              <td>
                <span>Blobless class handling updated in BIX extract</span>
              </td>
              <td>
                <span>When performing a BIX extract to database, null values were seen for some columns when there were values present in the clipboard and the report definition. Analysis showed that an Extract Rule defined on a Blobless class with a property having a length greater than 30 would return a null value even when the source table's corresponding columns do not have null values. This was due to BIX using an internal Report Definition which would truncate the column alias if the length of the column was greater than 30: when the extract then tried to find the actual property name in the result page, it did not find it and returned a null value. To resolve this, if the class is Blobless, the system will iterate over the property and check whether it is truncated or not. If it it truncated, the truncated name will be used when looking for the property in the result page instead of using the unmatching actual property name. This will ensure the correct value populated in the result page will be used.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D63255</span>
              </td>
              <td>
                <span>531382</span>
              </td>
              <td>
                <span>Updated sender email address validation to handle long domains</span>
              </td>
              <td>
                <span>In some cases, attempting to create a case via an email was failing and the cases were being routed to the broken queue.&nbsp; The error "IndeterminateConditionalException: Unable to load data page D_TrackAutoResponse. Required parameters : SenderEmailAddress. cannot be blank" appeared.&nbsp; This was traced to regex having a validation on the length of a domain name which caused a lengthy 'from' address to be trimmed. To resolve this, the regex has been modified to validate the email address as per RFC5322.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D63579</span>
              </td>
              <td>
                <span>527998</span>
              </td>
              <td>
                <span>Enhancements added for using AWS file repositories</span>
              </td>
              <td>
                <span>Enhancements have been added to improve the use of AWS file storage:<br><br> Logging for AWS SDK connection metrics can be activated on a per-repository basis, either through the ruleform or through the DSS storage/class/:/enableMetrics.<br> INFO logging can be enabled on PegaAWSSDKMetricReporter to periodically output averages of recorded metrics for all registered S3 repositories with metric collection enabled, or INFO logging can be enabled on PegaAWSRequestMetricCollector to output recorded metrics on every client call for all registered S3 repositories with metric collection enabled.<br> The interval at which PegaAWSSDKMetricReporter logs metrics at can be configured with the DASS storage/AWSSDK/metricReportingInterval. This DASS is a system-wide setting, and not a per-repository setting. The default reporting interval is 90 seconds, and metric collection is disabled on all repositories by default.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D63677</span>
              </td>
              <td>
                <span>529266</span>
              </td>
              <td>
                <span>Null check added for ObjClass filter value</span>
              </td>
              <td>
                <span>When a report definition was run with "Starts with" as a filter condition and "Use null if empty" was not checked, the message "An error occurred during resolving the report definition - null java.lang.StringIndexOutOfBoundsException" was logged. This did not appear if the filter condition was "is equal" and "Use null if empty" was checked. To resolve this, the system will check for a null or empty value on pxObjClass filter values before processing it for class descendants.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D63774</span>
              </td>
              <td>
                <span>540505</span>
              </td>
              <td>
                <span>Resolved .PDF extension preview issue</span>
              </td>
              <td>
                <span>Previewing a PDF that had the extension capitalized as ".PDF" did not load, but one with the extension ".pdf" worked. This has been corrected by modifying pxUploadFile and pzUploadFileToADocument to convert the filetype extension to lowercase to prevent possible preview problems.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D63912</span>
              </td>
              <td>
                <span>531203</span>
              </td>
              <td>
                <span>Context retained during nested automation</span>
              </td>
              <td>
                <span>Issues were seen with context being passed correctly with automation. When a Data Page that was used to abstract the call to a REST API used a Data Transform which in turn used a Data Page which also used a call to a REST API to retrieve an OAuth Token, an error appeared. The same worked when a URL was provided on the Connect REST. When a service case was launched but a Flow Action wasn't submitted, then another service case was added and submitted, the post-processing robotic automation activity used the run robotic automation activity from the previous service case instead of the current service case targeted for completion. This has been resolved by updating the webwb • pzpega_ui_doc_submit.js file to pass the correct MDIContext based on the event target of FA submission while invoking RDA automation.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D63993</span>
              </td>
              <td>
                <span>524302</span>
              </td>
              <td>
                <span>Resolved auto-addition of UpdateDateTime filter to BIX history extract</span>
              </td>
              <td>
                <span>When creating a BIX extract rule on history classes, trying to save the rule resulted in the invalid filter error "pxBIXReportPage—Cannot use a unexposed property".&nbsp; Analysis showed the pxUpdateDateTime column, which is the default filter on creating a new extract, was added automatically even though history classes do not have a pxUpdateDatetime column. While there was a workaround of manually removing the pxUpdateDateTime column filter when creating the extract rule for the first time, this has been resolved.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D64083</span>
              </td>
              <td>
                <span>542885</span>
              </td>
              <td>
                <span>Compilation logic error corrected</span>
              </td>
              <td>
                <span>A compilation failure on upgraded systems using the JDK 11 compilation of libraries that include Pega 7 functions that have INCLUDE statements that are not supported in JDK 11 was traced to a logic error added when enhancing debug logging. This has been corrected.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D64197</span>
              </td>
              <td>
                <span>536588</span>
              </td>
              <td>
                <span>Handling added for passivated file upload and attach</span>
              </td>
              <td>
                <span>When storage type repository was configured and any file type other than image was uploaded while pyIsStreamBasedUpload was set as true, uploading a file and keeping it idle for 15 minutes before clicking on attach caused pyattachInputStream to become null on the DragDropFileUpload pagelist. This caused an activityterminateException in tracer and the assignment was not submitted. This exception was due to a check in attachFile activity that calls terminateactivity when streambasedupload is true and attachinputstream is null. To resolve this, a validation rule has been added to check if the page exists, streambasedupload is true, and pyattachinputstream is null or has a value. If it is NULL, a message will be displayed about reattaching the file(s).</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D64558</span>
              </td>
              <td>
                <span>527675</span>
              </td>
              <td>
                <span>AttachmentContent supports S3 storage</span>
              </td>
              <td>
                <span>Using a D_AttachmentContent data page to display the contents of an attachment by way of the pyGetAttachmentContent activity worked when using the Pega database for storage, but generated an error stating CMIS access was disabled after switching to S3 storage. This was traced to restrictions on Link-Attachment pages in Step 2, Line 64 of pyGetAttachmentContent to enable attachment stream retrieval from web storage and repositories by D_AttachmentContent, which has now been removed. In addition, pyGetAttachmentContent has been updated to behave the same whether a Link-Attachment page or Data-WorkAttach page is provided when populateAttachStream is set to false, and the rule documentation (description/usage) has been updated accordingly.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D64729</span>
              </td>
              <td>
                <span>524986</span>
              </td>
              <td>
                <span>DSS added to circumvent corrupted BLOB during deserialization</span>
              </td>
              <td>
                <span>A corrupted BLOB was preventing work items from opening. To assist in this scenario, a DSS has been added to allow the conditional bypassing of BLOB properties. Pega-Engine propertiesToIgnoreDuringBlobDeserialization will accept a space-separated list of properties for which to errors will be ignored during BLOB deserialization.&nbsp; Pega-Engine dumpBlobOnDeserializationException should be set to “true”/”false” based on whether or not to print the entire BLOB to the console if there is an exception. Note: This may output sensitive data to the logs.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D65112</span>
              </td>
              <td>
                <span>541146</span>
              </td>
              <td>
                <span>Added support for imported rules to populate bixreportpage</span>
              </td>
              <td>
                <span>Extract rules were not holding the filter criteria after upgrade while performing save-as (for the first time) of the imported rules from the previous version. Criteria were held when the filters were created in the new version. This was caused by BIX extracts created in earlier releases (7.x) not having bixreportpage included. When an environment was upgraded to 8.x versions, opening an extract required the bixreportpage to be populated with Report Definition metadata including the filters defined in the actual extract. Although the filters from the original extract were converted to filters that are acceptable by ReportDefinition, they were not being added to bixreportpage on opening the extract. To resolve this, the system has been updated to copy the filters back to bixreportpage on opening the extract in the upgraded environment.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D65362</span>
              </td>
              <td>
                <span>526931</span>
              </td>
              <td>
                <span>Enhancements added for using AWS file repositories</span>
              </td>
              <td>
                <span>Enhancements have been added to improve the use of AWS file storage:<br><br> Logging for AWS SDK connection metrics can be activated on a per-repository basis, either through the ruleform or through the DSS storage/class/:/enableMetrics.<br> INFO logging can be enabled on PegaAWSSDKMetricReporter to periodically output averages of recorded metrics for all registered S3 repositories with metric collection enabled, or INFO logging can be enabled on PegaAWSRequestMetricCollector to output recorded metrics on every client call for all registered S3 repositories with metric collection enabled.<br> The interval at which PegaAWSSDKMetricReporter logs metrics at can be configured with the DASS storage/AWSSDK/metricReportingInterval. This DASS is a system-wide setting, and not a per-repository setting. The default reporting interval is 90 seconds, and metric collection is disabled on all repositories by default.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D66615</span>
              </td>
              <td>
                <span>536240</span>
              </td>
              <td>
                <span>API added to minimize calls to set parameters in datapage</span>
              </td>
              <td>
                <span>Differences were seen after upgrade when using a datapage associated with a property which was application-specific and that had Data Access for the property defined as “Copy data from a data page" with parameters whose value was set by an activity from the associated property of type single page. Prior to upgrade, only one call was seen to set the values for the parameters in datapage, but post-upgrade multiple calls were used to set the values to these parameters. This was traced to logic used for extraction and invoking the perform, and has been resolved by adding the new API 'DeclarativeAction.shouldExtractWatchedProperties'. It will return true or false, depending whether the extraction of watch properties is needed or not.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D66674</span>
              </td>
              <td>
                <span>538971</span>
              </td>
              <td>
                <span>DSS added for fall back to legacy decision table format</span>
              </td>
              <td>
                <span>After upgrade and switch to IL, non-working decision tables created in one class had pyWorkPage mapped to another class. In the column, the properties were mentioned as "pyWorkPage.xxxxx", but at runtime when the non-working decision tables ran as standalone, the system did not ask for values to be entered to evaluate the result. Tracer showed the error as "Goal seek requires missing input property pyWorkPage.All_Offln_Trans_In on page pyWorkPage; details: (unknown)". Investigation showed that the Legacy assembly for the decision table used the lazy evaluation pattern to resolve the expression in the column header in the generated Java code. This resulted in the property for the column header only being read when it was used. However, for IL-based decision tables all properties are read immediately before any rows are evaluated, which requires the property already be present on the page. This missing property from the lazy assembly then resulted in the exception. To resolve this, Executable.generateOrCompileSource&nbsp; and&nbsp; Virtual tableassemblyHandler.useIL() have been modified to fall back to legacy decision table format if the DSS InternalLanguage/disableIlBasedDecisionTable is enabled.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D66986</span>
              </td>
              <td>
                <span>539411</span>
              </td>
              <td>
                <span>BIX command line support improved</span>
              </td>
              <td>
                <span>Post-upgrade, it was seen that changes to the engine which validate that Data-Admin-DB-Name is not defined multiple times caused the BIX command line extracts to no longer work the same way.&nbsp; In order to improve backwards compatibility, updates have been made to loosen the validation in JdbcConfigurationFactory to always prefer prconfig settings if there are multiple definitions.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D67028</span>
              </td>
              <td>
                <span>533271</span>
              </td>
              <td>
                <span>Encoded and unencoded tenant URLs validate as expected</span>
              </td>
              <td>
                <span>Tenants created in Pega 8.3.1 were unable to process REST service requests, and an exception was seen in the logs. Investigation showed that while validating the incoming REST request, the system was relying on pathinfo instead of requestURI but pathInfo was always in un-encoded form. To resolve this, the design time URL will be constructed with an un-encoded tenant part, and both encoded and un-encoded request URLs will be validated.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D67211</span>
              </td>
              <td>
                <span>534060</span>
              </td>
              <td>
                <span>Context retained during nested automation</span>
              </td>
              <td>
                <span>Issues were seen with context being passed correctly with automation. When a Data Page that was used to abstract the call to a REST API used a Data Transform which in turn used a Data Page which also used a call to a REST API to retrieve an OAuth Token, an error appeared. The same worked when a URL was provided on the Connect REST. When a service case was launched but a Flow Action wasn't submitted, then another service case was added and submitted, the post-processing robotic automation activity used the run robotic automation activity from the previous service case instead of the current service case targeted for completion. This has been resolved by updating the webwb • pzpega_ui_doc_submit.js file to pass the correct MDIContext based on the event target of FA submission while invoking RDA automation.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D67225</span>
              </td>
              <td>
                <span>528630</span>
              </td>
              <td>
                <span>Performance improvement for Interaction History</span>
              </td>
              <td>
                <span>Interaction history was causing a performance issue due to pySubjectID being hard coded in the query while the clause values disabled query caching. To resolve this, a bind variable will be passed when using a single subject ID select call to the FACT table in the Inbound queries.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D67232</span>
              </td>
              <td>
                <span>530007</span>
              </td>
              <td>
                <span>Email listener updated to handle encoded MIME attachment</span>
              </td>
              <td>
                <span>When processing an email with an attachment that was itself an encoded MIME part, the email listener generated a NullPointerException around an extraction error. Analysis showed that a content-type misled the system into thinking an attachment was another message part. To resolve this, EmailMessageParser.java has been modified to avoid attempting to process an attachment as a MessagePart if it cannot get the content of the part as a Message.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D68204</span>
              </td>
              <td>
                <span>530033</span>
              </td>
              <td>
                <span>Connect-FTP now s3 repository aware</span>
              </td>
              <td>
                <span>In order to support using the Connect-FTP feature with the s3 repository as the source path, the system has been updated to check the local path provided for a filespec and attempt to retrieve the file for the Connect FTP call from there. This uses the "local file" field , using the format of "file://&lt;storageDestinationAlias&gt;/targetfolder" .</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D69836</span>
              </td>
              <td>
                <span>529727</span>
              </td>
              <td>
                <span>Context retained during nested automation</span>
              </td>
              <td>
                <span>Issues were seen with context being passed correctly with automation. When a Data Page that was used to abstract the call to a REST API used a Data Transform which in turn used a Data Page which also used a call to a REST API to retrieve an OAuth Token, an error appeared. The same worked when a URL was provided on the Connect REST. When a service case was launched but a Flow Action wasn't submitted, then another service case was added and submitted, the post-processing robotic automation activity used the run robotic automation activity from the previous service case instead of the current service case targeted for completion. This has been resolved by updating the webwb • pzpega_ui_doc_submit.js file to pass the correct MDIContext based on the event target of FA submission while invoking RDA automation.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D69927</span>
              </td>
              <td>
                <span>537478</span>
              </td>
              <td>
                <span>Cleanup added for staging directory</span>
              </td>
              <td>
                <span>Temporary files from imports and exports (from DevOps) were filling up the staging area disk space because there was no automatic process for cleaning up these local files.&nbsp; This has been resolved by adding an enhancement that will clear the directory on Engine Startup and any time ParUtils.setStagingDirectory gets called to initialize the staging directory.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D70674</span>
              </td>
              <td>
                <span>535482</span>
              </td>
              <td>
                <span>Handling added for mobile upload of filename containing dots</span>
              </td>
              <td>
                <span>An issue with uploading a file name containing dots (such as 2019.12.12) while using the mobile browser has been resolved by updating the AttachFile activity in the propertyExist function.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71041</span>
              </td>
              <td>
                <span>537894</span>
              </td>
              <td>
                <span>Default compiler pool size increased</span>
              </td>
              <td>
                <span>An issue was seen where the nodes were continuously terminating and Stream service was not started. Error messages indicated a "WARN - Long running request detected for requestor", and that tasks were waiting for the generic object pool. Analysis showed that it was possible for a deadlock to form during the startup of the system or during the first few rule executions and compilations when there were more than five rules trying to compile. Once the variable LibraryMetadata.TypeEnvironment.resolver (ClassLoader) is initialized, the problem would resolve. To prevent the deadlock, the default compiler pool size has been increased from 5 to 10.&nbsp;</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71145</span>
              </td>
              <td>
                <span>536111</span>
              </td>
              <td>
                <span>Enhancements added for using AWS file repositories</span>
              </td>
              <td>
                <span>Enhancements have been added to improve the use of AWS file storage:<br><br> Logging for AWS SDK connection metrics can be activated on a per-repository basis, either through the ruleform or through the DSS storage/class/:/enableMetrics.<br> INFO logging can be enabled on PegaAWSSDKMetricReporter to periodically output averages of recorded metrics for all registered S3 repositories with metric collection enabled, or INFO logging can be enabled on PegaAWSRequestMetricCollector to output recorded metrics on every client call for all registered S3 repositories with metric collection enabled.<br> The interval at which PegaAWSSDKMetricReporter logs metrics at can be configured with the DASS storage/AWSSDK/metricReportingInterval. This DASS is a system-wide setting, and not a per-repository setting. The default reporting interval is 90 seconds, and metric collection is disabled on all repositories by default.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71145</span>
              </td>
              <td>
                <span>536111</span>
              </td>
              <td>
                <span>Enhancements added for using AWS file repositories</span>
              </td>
              <td>
                <span>Enhancements have been added to improve the use of AWS file storage:<br><br> Logging for AWS SDK connection metrics can be activated on a per-repository basis, either through the ruleform or through the DSS storage/class/:/enableMetrics.<br> INFO logging can be enabled on PegaAWSSDKMetricReporter to periodically output averages of recorded metrics for all registered S3 repositories with metric collection enabled, or INFO logging can be enabled on PegaAWSRequestMetricCollector to output recorded metrics on every client call for all registered S3 repositories with metric collection enabled.<br> The interval at which PegaAWSSDKMetricReporter logs metrics at can be configured with the DASS storage/AWSSDK/metricReportingInterval. This DASS is a system-wide setting, and not a per-repository setting. The default reporting interval is 90 seconds, and metric collection is disabled on all repositories by default.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71145</span>
              </td>
              <td>
                <span>536574</span>
              </td>
              <td>
                <span>Enhancements added for using AWS file repositories</span>
              </td>
              <td>
                <span>Enhancements have been added to improve the use of AWS file storage:<br><br> Logging for AWS SDK connection metrics can be activated on a per-repository basis, either through the ruleform or through the DSS storage/class/:/enableMetrics.<br> INFO logging can be enabled on PegaAWSSDKMetricReporter to periodically output averages of recorded metrics for all registered S3 repositories with metric collection enabled, or INFO logging can be enabled on PegaAWSRequestMetricCollector to output recorded metrics on every client call for all registered S3 repositories with metric collection enabled.<br> The interval at which PegaAWSSDKMetricReporter logs metrics at can be configured with the DASS storage/AWSSDK/metricReportingInterval. This DASS is a system-wide setting, and not a per-repository setting. The default reporting interval is 90 seconds, and metric collection is disabled on all repositories by default.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71977</span>
              </td>
              <td>
                <span>535599</span>
              </td>
              <td>
                <span>Obj-Browse will retrieve more than 50 records</span>
              </td>
              <td>
                <span>After performing multiple skims, a newly added property was not retrieved when an Obj-Browse was performed. In Obj-Browse action, when a class is mapped to an external table and does not contain BLOB column pzpvstream, in a specific case where pxObjClass value is a reference to a parameter, a list of properties mapped to the class explicitly by querying pr4_rule_property table using NativeSQL is fetched. This call by default returns only 50 records: in cases where there are more than 50 properties for an external class, some of the properties from the obj-browse response mapping are therefore missed. To resolve this, the limit of 50 records has been removed from this NativeSQL call.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D72368</span>
              </td>
              <td>
                <span>534329</span>
              </td>
              <td>
                <span>Enhancements added for using AWS file repositories</span>
              </td>
              <td>
                <span>Enhancements have been added to improve the use of AWS file storage:<br><br> Logging for AWS SDK connection metrics can be activated on a per-repository basis, either through the ruleform or through the DSS storage/class/:/enableMetrics.<br> INFO logging can be enabled on PegaAWSSDKMetricReporter to periodically output averages of recorded metrics for all registered S3 repositories with metric collection enabled, or INFO logging can be enabled on PegaAWSRequestMetricCollector to output recorded metrics on every client call for all registered S3 repositories with metric collection enabled.<br> The interval at which PegaAWSSDKMetricReporter logs metrics at can be configured with the DASS storage/AWSSDK/metricReportingInterval. This DASS is a system-wide setting, and not a per-repository setting. The default reporting interval is 90 seconds, and metric collection is disabled on all repositories by default.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D72886</span>
              </td>
              <td>
                <span>543753</span>
              </td>
              <td>
                <span>Check added for Repositories before saving attachment</span>
              </td>
              <td>
                <span>When creating or updating a case through email listener, the Link-Attachment defaulted the pxStorageType to 'WebStorage'. This caused an issue when using PegaS3, which needs pxStorageType 'Repository'. To resolve this, a check has been added to see if Repositories are enabled, and if they are the storageType will be set accordingly.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D75003</span>
              </td>
              <td>
                <span>538338</span>
              </td>
              <td>
                <span>File Listener null-pointer exception resolved with context check</span>
              </td>
              <td>
                <span>A service file rule associated with a file listener was encountering a Null Pointer Exception. Investigation showed that the system successfully processed the first record in the service file, then it encountered the null-pointer exception indicating that the listener state was null. This was traced to functionality introduced in an earlier version to ensure File Listeners are succinctly shut down when a Cloud Node is moved to queiscing.&nbsp; As part of that work, the Rule-Service-File was linked to ListenerStateManager and did not work in a scenario where the rule could be executed outside of that context. This has been resolved by adding a check for context before directing the activity.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D75945</span>
              </td>
              <td>
                <span>541082</span>
              </td>
              <td>
                <span>Data transform updated to remove @java references</span>
              </td>
              <td>
                <span>The usage of @java expressions in data transform rules has been deprecated. The pyProcessDocumentCompletedEvent data transform was given as an extensible data transform intended to be overridden by customers to have their own processing logic of document completion event, however this caused confusion and when used in the out-of-the-box form it resulted in an error when saved at design time. To resolve this, the shipped data transform has been updated to call to a Rule-Utility-Function to return the file's base name, and the @java references have been removed.&nbsp;&nbsp;</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D76150</span>
              </td>
              <td>
                <span>539452</span>
              </td>
              <td>
                <span>Logging updated for EmailListener and Data-Agent queue items</span>
              </td>
              <td>
                <span>In order to avoid the pr_sys_queue_ftsindexer table being overwhelmed with Data-Admin-Connect-EmailListener and Data-Agent-Queue instances for queued items, the Data-Admin-Connect-EmailListener and Data-Agent-Queue class definitions have been modified to filter queue items to incremental indexing if updates are from system and instance type is data- .</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D76291</span>
              </td>
              <td>
                <span>541012</span>
              </td>
              <td>
                <span>Check added for Repositories before saving attachment</span>
              </td>
              <td>
                <span>When creating or updating a case through email listener, the Link-Attachment defaulted the pxStorageType to 'WebStorage'. This caused an issue when using PegaS3, which needs pxStorageType 'Repository'. To resolve this, a check has been added to see if Repositories are enabled, and if they are the storageType will be set accordingly.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D76756</span>
              </td>
              <td>
                <span>538221</span>
              </td>
              <td>
                <span>Support expanded for postgres versions and logging improved</span>
              </td>
              <td>
                <span>While trying to import data into the Data Type Tables using a CSV file and selecting the 'Add or Update' option, an error appeared and the import failed.&nbsp; Using 'Add or Delete' worked as expected.&nbsp; This was traced to the import of data failing for postgres version 10.x because UseMerge for postgres did not use merge if the version of Postgres was not 9. Support has now been added for versions of Postgres higher than 9 in SQLGeneratorPostgres.useMerge(), and logging has been enhanced to improve triaging issues such as this.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D78531</span>
              </td>
              <td>
                <span>541999</span>
              </td>
              <td>
                <span>Encoding added for special characters in JFROG filenames</span>
              </td>
              <td>
                <span>A blank screen or the error "Unable to get the file from Repository" appeared when attempting to attach a file from JFROG Repository if the file name contained special characters. This has been resolved by modifying the artificatory URL generation to properly encode special characters during file download.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D80668</span>
              </td>
              <td>
                <span>543866</span>
              </td>
              <td>
                <span>Performance improvement for queries on Kafka partitions</span>
              </td>
              <td>
                <span>Even though there were multiple dataflow nodes available in the cluster, all requests were going to single node and causing system slowness. Investigation showed there was a queue processor rule that included the pxPartitionKey attribute which forced all records to be sent to a single partition by Kafka producers. This attribute has been removed.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D81532</span>
              </td>
              <td>
                <span>544429</span>
              </td>
              <td>
                <span>Corrected case-mismatch when using Top Ranked in a subreport</span>
              </td>
              <td>
                <span>Incorrect SQL Generation was seen when using the combination of Union ALL (more than 1 distinct tables) and Rank in Sub report. The sub-report had a ranking logic to pull records with greatest “pxUpdateDateTime”, but when executing the main report definition rule, Oracle responded with the error "There was a problem getting a list." Investigation showed that the query generated was not able to match the columns because they were given as pxUpdateDateTimeR1 in one and PXUPDATEDATETIMER1 in another. This only happened when display Top Ranked was selected in the subreport, and was due to Oracle being case-sensitive. This has been resolved by updating the system to get the correct column alias for rank in a subreport.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D89304</span>
              </td>
              <td>
                <span>519827</span>
              </td>
              <td>
                <span>ClusterAndDBCleaner repaired</span>
              </td>
              <td>
                <span>An error in the logic order of events caused a compilation error for pyClusterAndDBCleaner, leading to old records created by the system/node utilities to not be automatically removed as expected. This has been corrected.</span>
              </td>
              <td>
                <span>Data integration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D39972</span>
              </td>
              <td>
                <span>513459</span>
              </td>
              <td>
                <span>UpgradeOnOpen updated to use property set&nbsp;</span>
              </td>
              <td>
                <span>After upgrade, using the revalidate &amp; save wizard on MapValue rules (Rule-Obj-MapValue) generated null pointer exceptions in the tracer file and rules failed with bad status. This was traced to changes made in the Java step of UpgradeOnOpen that used the getReference() method, and has been resolved by updating the UpgradeOnOpen activity in the Rule-obj-Mapvalue class to use property set.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D41207</span>
              </td>
              <td>
                <span>512086</span>
              </td>
              <td>
                <span>Fallover stategy added to chat routing to keep event processor running</span>
              </td>
              <td>
                <span>Chats were becoming stuck in the queue and end users were not able to connect with the customer service representative. An excessive number of queued items were observed in a Queue Processor named "EventProcessor". This was traced to the setting "Browse from the offset" having been removed because of a retention policy. This resulted in "Browse from the end of the stream" being used instead even though browse should start from the earliest known offset. To resolve this, Stream Producer will be cached based on topic, and Stream consumer will fall over to an earliest strategy in case the requested offset isn't found so the event queue will be handled in a timely manner.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D42451</span>
              </td>
              <td>
                <span>518066</span>
              </td>
              <td>
                <span>ExecuteRDB call updated to use NativeSQL for blob</span>
              </td>
              <td>
                <span>After creating a test activity to clear data set records that used the DataSet-Execute method and passed the data set name and truncate operation, only 51 records were deleted in a single run when the data set had more than 51 records. Investigation showed that for blob tables, the database truncate operation was using executeRDB with an empty results page, i.e. it didn't specify pyMaxRecords, which on some databases might have limited the number affected records.&nbsp; To resolve this, the executeRDB call in the database truncate operation has been modified to use NativeSQL for blob tables.&nbsp;</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D43912</span>
              </td>
              <td>
                <span>509736</span>
              </td>
              <td>
                <span>Fallover stategy added to chat routing to keep event processor running</span>
              </td>
              <td>
                <span>Chats were becoming stuck in the queue and end users were not able to connect with the customer service representative. An excessive number of queued items were observed in a Queue Processor named "EventProcessor". This was traced to the setting "Browse from the offset" having been removed because of a retention policy. This resulted in "Browse from the end of the stream" being used instead even though browse should start from the earliest known offset. To resolve this, Stream Producer will be cached based on topic, and Stream consumer will fall over to an earliest strategy in case the requested offset isn't found so the event queue will be handled in a timely manner.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D45608</span>
              </td>
              <td>
                <span>519900</span>
              </td>
              <td>
                <span>Correct service instance name passed for data flow in DSMStatus</span>
              </td>
              <td>
                <span>When using the Connect-HTTP service "DSMStatus" to provide the node and status information as seen on the various tabs of the Designer Studio &gt; Decisioning &gt; Infrastructure &gt; Services landing page, using DataFlow as the service parameter for the HTTP service method resulted in an empty response when the expectation was to get the information regarding the cluster details of Dataflow node type. This was traced to the service instance name not being parsed correctly when used for Data Flow services, and has been resolved by ensuring the correct service instance name is passed for this use.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D47618</span>
              </td>
              <td>
                <span>512601</span>
              </td>
              <td>
                <span>Statistic rounding error in ADMSnapshot Agent with Oracle corrected</span>
              </td>
              <td>
                <span>While running the ADMSnapshot Agent, the exception "internal.mgmt.Executable) ERROR com.pega.decision.adm.client.ADMException: Failed to complete ADM Data Mart snapshot" was seen. This was traced to an issue with the rounding of performance statistics when using Oracle, and has been resolved.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D48010</span>
              </td>
              <td>
                <span>514982</span>
              </td>
              <td>
                <span>Unit testing validation relaxed for external input strategy</span>
              </td>
              <td>
                <span>When trying to test a strategy, the testing transform had to exist in the same ruleset/version as the strategy or it would not resolve. Investigation showed that because the artifacts were in a different ruleset and version build on top of the application that the testing strategy belongs to, validation failed because it was using the platform based ruleset validation. This was a missed use case, and has been resolved by relaxing the validation for external input strategy so it does not take into account the ruleset and version of it. This same change has been applied for referenced data transforms.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D51017</span>
              </td>
              <td>
                <span>517180</span>
              </td>
              <td>
                <span>Expanded date format handling</span>
              </td>
              <td>
                <span>The xx in the xx:yy time format was incorrectly detected as a year. To correct this, support has been added for the use case of the date followed by time.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D51353</span>
              </td>
              <td>
                <span>516912</span>
              </td>
              <td>
                <span>Unit testing validation relaxed for external input strategy</span>
              </td>
              <td>
                <span>When trying to test a strategy, the testing transform had to exist in the same ruleset/version as the strategy or it would not resolve. Investigation showed that because the artifacts were in a different ruleset and version build on top of the application that the testing strategy belongs to, validation failed because it was using the platform based ruleset validation. This was a missed use case, and has been resolved by relaxing the validation for external input strategy so it does not take into account the ruleset and version of it. This same change has been applied for referenced data transforms.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D52051</span>
              </td>
              <td>
                <span>515375</span>
              </td>
              <td>
                <span>Corrected EditElement disappearing after DDR import</span>
              </td>
              <td>
                <span>After importing a DDR to a 'treatment', the section disappeared. Because the treatment decision data rules are created in the top level SR class, when the treatments are exported from these rules, the pyIssue and the pyGroup classes are empty in the exported CSV. When new treatments were added or existing treatment are modified in the CSV and imported, the pxObjClass for the treatments was set to Data-pxStrategyResult as the pyIssue and pyGroup were empty in the imported CSV. To correct this, pySelectedClass will be set to the propositions instead of pxPage.pxObjClass while importing.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D52723</span>
              </td>
              <td>
                <span>516090</span>
              </td>
              <td>
                <span>Data join conditions representation updated to avoid overwrite</span>
              </td>
              <td>
                <span>After upgrade, a Data join component on the Strategies was not working as expected, especially the ones using the DateTime function. If the data join conditions were swapped, i.e the DateTime function was not the last criteria, the strategy outputs were correct.Investigation showed that the implementation used a map to represent pairs of left and right expressions which caused conditions rows with the same leftExpr to end up overwriting one another. This has been corrected by fixing the representation of conditions of a Data Join to a list of tuples which eliminates the possibility of one condition overwriting a previous one.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D53223</span>
              </td>
              <td>
                <span>516916</span>
              </td>
              <td>
                <span>Predictor handling updated for Versioning Adaptive Model</span>
              </td>
              <td>
                <span>When attempting to update an adaptive model in a branch after it had been versioned, errors were observed on Predictor Type data that had not changed from the previous version. This was traced to an issue in the Adaptive Model rule UI in both Prediction and Dev Studio where if a non-default predictor type is selected, it would show in the UI but not be saved to the database. No error was shown. This silently led to the unexpected and incorrect data being stored with the result that once data had accrued, the rule could not be saved/saved-as due to validation believing the predictor type of a predictor with data was changing. To resolve this, rules have been updated so that the system will no longer override the predictor type of a predictor being edited when it is solely the predictor type that is changing.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D53225</span>
              </td>
              <td>
                <span>516316</span>
              </td>
              <td>
                <span>Rule creation logic updated to include creation branch</span>
              </td>
              <td>
                <span>When trying to create a new adaptive model rule in Prediction Studio, the “Create” button was not activating. The adaptive model rule was being saved in a branch ruleset, and investigation indicated that the deactivated button could be traced to the lack of an open ruleset version available even though the intention was to create it on a branch. This has been resolved by modifying the rule creation logic to incorporate the branch for creation.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D54218</span>
              </td>
              <td>
                <span>518598</span>
              </td>
              <td>
                <span>Deadlock in static Initialization of IntList resolved</span>
              </td>
              <td>
                <span>JVM Deadlock was seen related to the static Initialization of a subclass field in class com.pega.decision.strategy.ssa.runtime.collections.api.IntList . Thread dumps showed threads in RUNNABLE State that were parked to wait for class initialization, and this was traced to a missed sonar alert which failed in multi-threading. To resolve this, the system handling has been updated to prevent potential deadlock.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D54430</span>
              </td>
              <td>
                <span>518290</span>
              </td>
              <td>
                <span>Updated VDB Statistics rendering to compensate for Google Chrome changes</span>
              </td>
              <td>
                <span>The Statistics overlay was not rendering for VBD planner in Google Chrome. Investigation showed that the Google Chrome browser (v.77) was misfiring one of the mouse events due to changes in the browser, and the handling has been updated to resolve this issue.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D54602</span>
              </td>
              <td>
                <span>517307</span>
              </td>
              <td>
                <span>Prconfigs added to support Cassandra Speculative Based Execution</span>
              </td>
              <td>
                <span>In order to achieve high availability for Cassandra, prconfigs have been added to support speculative execution. The available prconfigs will enable it, and set maximum number of executions and delay before the next execution is launched.<br> The prconfigs are:<br> dnode/cassandra_speculative_execution_policy<br> dnode/cassandra_speculative_execution_policy/max_executions<br> dnode/cassandra_speculative_execution_policy/delay</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D57822</span>
              </td>
              <td>
                <span>524198</span>
              </td>
              <td>
                <span>Internal Cassandra memory leak fixed</span>
              </td>
              <td>
                <span>A memory leak was found&nbsp; on internal Cassandra that caused temporary log files to fill up the heap. This has been resolved by updating the system to ignore non-log files and properly increment the index.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D60121</span>
              </td>
              <td>
                <span>525491</span>
              </td>
              <td>
                <span>All interactions visible in "Latest Responses" for ADM</span>
              </td>
              <td>
                <span>Interactions were not visible in the "Latest Responses" section of the Model Management landing page for Adaptive models if the requests were stored on multi-node systems. This was due to the system fetching the Last Responses using a list of server nodes built using a version of deployment.getClusterState(tools) which gave only the ADM nodes list instead of all the ADM nodes both client and server. To resolve this, the system has been updated to use ServiceRegistry to get all of the data flow nodes and get the last responses from each of them.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D60268</span>
              </td>
              <td>
                <span>521464</span>
              </td>
              <td>
                <span>Performance and thread-handling improvements for SSA</span>
              </td>
              <td>
                <span>The SecureRandom class was used internally by SSAExecutionContext indirectly via UUID generation. Because this exhibited performance issues on some Linux environments, UUID has been replaced with static AtomicLong. In addition, a memory leak was observed when the strategy (SSA) execution resulted in an exception, and the strategy template has been modified to gracefully shutdown the VM under all circumstances. Thread-safety measures have also been tuned to be more fine-grained to reduce the potential thread contention that was seen while borrowing the SSAInterpreter object from SSAInterpreterPool.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D66223</span>
              </td>
              <td>
                <span>529994</span>
              </td>
              <td>
                <span>Update Handler will not run during migration</span>
              </td>
              <td>
                <span>Rolling restart of DataFlow, ADM ,VBD, and Util Tiers failed with a PENDING_JOINING error after an in-place upgrade. This was traced to the logic for the update timing:&nbsp; when nodes start after an upgrade from 7.x to 8.x they will migrate data flow runs. Migration happens on only one node, and while it's in progress the other nodes will wait until migration finishes before they come up. At this point the state of the data flow services will be 'PENDING JOINING'. The issue is that while migrating runs, the Data Flow Update Handler was triggered to validate whether there were nodes available on the service the run belongs to. This call can cause the corresponding data flow service to be initialized, but the call will be blocked since all services wait for the migration to end. This resulted in a deadlock which prevented all nodes from coming up successfully. To resolve this, the process has been updated to skip the update handler during migration to avoid triggering the initialization of client services that are waiting on the migration lock.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D66397</span>
              </td>
              <td>
                <span>530331</span>
              </td>
              <td>
                <span>ADM out-of-sync corrected for multi-datacenter Cassandra cluster</span>
              </td>
              <td>
                <span>After setting up the multi-datacenter configuration for a Cassandra cluster that consisted of six nodes in datacenter 1 and three nodes in datacenter 2, failover testing revealed a mismatch in the number of ADM models stored in each datacenter. The mismatch was observed mostly in the number of records present in the "adm_scoringmodel" and "adm_response_commit_log_date_tiered" tables. When Cassandra nodes are down, the other nodes in the cluster will store hints (records to be written) for the down nodes. When these nodes come back online the hints are replayed to those nodes and the data is written. Hints are written for 3 hours, so if a node come back up within 3 hours data is recovered and repairs are not required. The gc_grace_seconds for the above tables that were getting out of sync across the two datacenters was set to zero seconds. The "gc_grace_seconds" attribute is not just used as the time for removal of tombstones, it's also used to set the TTL for records written to the system.hints table. That meant that when the hints were written for the ADM tables for the nodes that were down, they were immediately expired since it was set to 0 and not played back when the terminated nodes restarted and joined the cluster. This has been resolved with this fix for all customers new to this release. Existing customers already on v7.3 or higher will need to complete the local change detailed below:<br> Connect to the Cassandra cluster using cqlsh in the Pega Cassandra distribution and then run<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ALTER TABLE adm_commitlog.adm_response_commit_log_date_tiered WITH gc_grace_seconds = 86400;<br> to change the relevant setting from zero to the equivalent of one day - the same length of time that the data in the table lives for. This will mean that any hints written can still be used to replay data to another node while the data itself is alive. It does also mean, however, that, given a constant load, a day's worth of expired ADM event data in the table will always be present on the disk, as the tombstones can now not be cleaned up for a day.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D68707</span>
              </td>
              <td>
                <span>529869</span>
              </td>
              <td>
                <span>Update Handler will not run during migration</span>
              </td>
              <td>
                <span>Rolling restart of DataFlow, ADM ,VBD, and Util Tiers failed with a PENDING_JOINING error after an in-place upgrade. This was traced to the logic for the update timing:&nbsp; when nodes start after an upgrade from 7.x to 8.x they will migrate data flow runs. Migration happens on only one node, and while it's in progress the other nodes will wait until migration finishes before they come up. At this point the state of the data flow services will be 'PENDING JOINING'. The issue is that while migrating runs, the Data Flow Update Handler was triggered to validate whether there were nodes available on the service the run belongs to. This call can cause the corresponding data flow service to be initialized, but the call will be blocked since all services wait for the migration to end. This resulted in a deadlock which prevented all nodes from coming up successfully. To resolve this, the process has been updated to skip the update handler during migration to avoid triggering the initialization of client services that are waiting on the migration lock.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D69028</span>
              </td>
              <td>
                <span>528972</span>
              </td>
              <td>
                <span>Deadlock in static Initialization of IntList resolved</span>
              </td>
              <td>
                <span>JVM Deadlock was seen related to the static Initialization of a subclass field in class com.pega.decision.strategy.ssa.runtime.collections.api.IntList . Thread dumps showed threads in RUNNABLE State that were parked to wait for class initialization, and this was traced to a missed sonar alert which failed in multi-threading. To resolve this, the system handling has been updated to prevent potential deadlock.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71621</span>
              </td>
              <td>
                <span>533294</span>
              </td>
              <td>
                <span>Real time processing picks up correct datetime for Capture Response records</span>
              </td>
              <td>
                <span>A Realtime Data flow for the Capture Response flow was configured with a strategy shape set to load previous decisions within the past 7 days. Once this Realtime DF was started, attempting to Capture Response for decisions made after that startup timepoint did not work. This was traced to the InteractionID being written with global properties for the datetimes, and has been resolved by making those datetime properties local so the start and end time are not cached and the time range is calculated based on "now”.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D74117</span>
              </td>
              <td>
                <span>539460</span>
              </td>
              <td>
                <span>DDS service will not run Hazelcast check if external Cassandra is configured</span>
              </td>
              <td>
                <span>Services were not responding, and thread dumps seen in the logs indicated that a large number of threads were waiting for one to come back from getting the cluster state for a DSM process. Investigation showed that the threads were waiting for a Hazelcast response about the cluster state.&nbsp; However, since a Hazelcast call is not needed when Pega is configured with external Cassandra, the DDS Service code has been changed to not to check for candidate nodes if configured with external Cassandra cluster.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D74247</span>
              </td>
              <td>
                <span>542915</span>
              </td>
              <td>
                <span>Resolved errors when using Build Model from the Preview Console</span>
              </td>
              <td>
                <span>Using the Web Chatbot interface and trying to perform Build Model action from Preview Console failed with multiple errors, either "This action is not allowed as it is outside the current transaction" or "class &lt;blank&gt; doesn't exist". This was traced to issues with the transaction during model update, and has been resolved by conditionally disabling the show page step of pzGetModelProcessStatus. This step creates a difference in the context of the current transaction and is disabled when called from Update API.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D75519</span>
              </td>
              <td>
                <span>536717</span>
              </td>
              <td>
                <span>Corrected calculating propensities</span>
              </td>
              <td>
                <span>Several PMML models designed to compare the outcomes to a control dataset experienced an issue where the probability scores in Pega did not match the original control dataset.&nbsp; The PMML model was also tested using KNIME; those results matched Pega but not the original control dataset. Investigation showed that the JPMML evaluator contained outdated code, and the incorrect calculations have been resolved.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D78940</span>
              </td>
              <td>
                <span>542925</span>
              </td>
              <td>
                <span>Dataflow monitoring enhanced</span>
              </td>
              <td>
                <span>Enhanced monitoring and healthchecks have been added for dataflow and alerts.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D79145</span>
              </td>
              <td>
                <span>543053</span>
              </td>
              <td>
                <span>Added tokenizer for KeyWord-Based Topic Detection phrases</span>
              </td>
              <td>
                <span>KeyWord-Based Topic Detection was not Working for "Enrollment/Re-Enrollment" as a word, for example a categorization model with the text 'This is an email related to Enrollment/Re-Enrollment'. To facilitate this use, a tokenizer has been added to break should, must, and and words into components for a taxonomy match.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D79909</span>
              </td>
              <td>
                <span>542243</span>
              </td>
              <td>
                <span>DDS added for automated dataflow run cleanup</span>
              </td>
              <td>
                <span>During a recent upgrade it was seen that there were in excess of 20k dataflow runs, some 2 years old, which slowed down the migration significantly. In order to resolve this, an automated process has been added. This clean-up procedure deletes all the single case, batch, and real time runs older than 30 days which are in the final state - Completed, Completed with Failures, or Failed, and batch and real time runs which are in the Stopped state. The DDS Pega-DecisionEngine.dataflow/run/maxDaysToKeepRuns.should be used configure the retention period. Note that the retention period is calculated since the last processed message and not the creation time of the run.</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D82895</span>
              </td>
              <td>
                <span>543605</span>
              </td>
              <td>
                <span>Restart issue on dataflow service nodes resolved</span>
              </td>
              <td>
                <span>A high percentage of rolling restarts were failing for nodes hosting dataflow services due to prolonged restart times. To resolve this, the system has been updated so Cloud services will not try to recover the node state in case of a restart, since nodeIDs are always new and not reused.&nbsp;</span>
              </td>
              <td>
                <span>Decision Management</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D40662</span>
              </td>
              <td>
                <span>511396</span>
              </td>
              <td>
                <span>OpenRuleAdvanced updated</span>
              </td>
              <td>
                <span>After upgrade, the Update Page and Append and Map to step in Data transform was generating the error "No Server connection while giving page name to Target and Source". This was traced to the OpenRuleAdvanced_OverLabel control, and investigation showed that a variable was not being resolved when invoking pzEncryptURLActionString. This has been resolved by updating OpenRuleAdvanced and reimplementing two parameters as well as moving the call of these variables to the beginning of the script. Security has also been improved by moving some of the encryption to SafeUrls.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D41636</span>
              </td>
              <td>
                <span>521731</span>
              </td>
              <td>
                <span>Route to configuration in the approval flow accepts Specific User parameters</span>
              </td>
              <td>
                <span>Route to configuration in the approval flow was not accepting a parameter value/property value when select Specific User option from drop down was chosen.&nbsp; This was traced to unique ID change work done in the 8.2 release: the pzSimpleApproval section has two controls (DropDown for Participant &amp; AutoComplete for Operator) configured on same property pyOperatorToAssign with "run visibility on client configuration), and when the control value was being changed in the AutoComplete control, the empty value of DropDown control was being posted to the clipboard. To correct this, the section Work-.pzSimpleApproval has been modified to remove performing run-visibility conditions at client side. Instead, the system will use the ".pyApproverType Changes" condition to refresh the wrapper DL which contains the routeTo type Operator/WB/Participant property controls.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D42566</span>
              </td>
              <td>
                <span>512871</span>
              </td>
              <td>
                <span>ApplicationInventory function deleted</span>
              </td>
              <td>
                <span>It was possible to call the activity "ApplicationInventory of class Rule-" by appending the activity name in the URL. To improve security, the ApplicationInventory activity and HTML rule have been removed from the system.&nbsp;</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D44942</span>
              </td>
              <td>
                <span>518352</span>
              </td>
              <td>
                <span>Guided tour popups handling added for right-to-left language locales</span>
              </td>
              <td>
                <span>Guided Tour Popups were still appearing in the default EN location after switching to the ar_AR locale. This was traced to a missed use case for locales using a right-to-left mode such as Arabic or Hebrew, and has been resolved by updating the guided tour engine openPopOver function to account for the HTML tag dir attribute for value of "rtl". This will anchor the pop over to rightBottom / and display the arrow on the rightTop instead of leftBottom / leftTop.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D47975</span>
              </td>
              <td>
                <span>514012</span>
              </td>
              <td>
                <span>OpenRuleAdvanced updated</span>
              </td>
              <td>
                <span>After upgrade, the Update Page and Append and Map to step in Data transform was generating the error "No Server connection while giving page name to Target and Source". This was traced to the OpenRuleAdvanced_OverLabel control, and investigation showed that a variable was not being resolved when invoking pzEncryptURLActionString. This has been resolved by updating OpenRuleAdvanced and reimplementing two parameters as well as moving the call of these variables to the beginning of the script. Security has also been improved by moving some of the encryption to SafeUrls.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D48248</span>
              </td>
              <td>
                <span>517237</span>
              </td>
              <td>
                <span>cross-site scripting filtering added to URLs</span>
              </td>
              <td>
                <span>Cross-site scripting filtering has been added to prevent the injection of a script into a URL using ViewXML.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D48751</span>
              </td>
              <td>
                <span>515537</span>
              </td>
              <td>
                <span>Pega unit for case type records user inputs</span>
              </td>
              <td>
                <span>When creating a Pega unit for the case type by selecting Actions -&gt; Record test case for Case, the user inputs were not recorded for embedded page properties.&nbsp; This has been corrected.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D52138</span>
              </td>
              <td>
                <span>537504</span>
              </td>
              <td>
                <span>Property setting corrected for On Join and Exclusion shapes in Expression Builder</span>
              </td>
              <td>
                <span>The properties for the defined page did not appear when using the type-ahead feature to select properties for the On Data Join and Exclusion shapes in Expression Builder. This was an issue related to the property being referenced for setting the context in the expression builder, and has been corrected.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D54984</span>
              </td>
              <td>
                <span>529796</span>
              </td>
              <td>
                <span>Resolved ruleset save issue for Google Chrome/IE</span>
              </td>
              <td>
                <span>When using particular versions of Google Chrome or Microsoft Internet Explorer, the intermittent error "pyComponentInterfaceClass: &lt;user&gt; does not exist or is not a valid entry for this ruleset and its prerequisites" appeared when attempting to validate an application, and the ruleset could not be saved.&nbsp; This was traced to changes made in the browser around password handling, and has been resolved by explicitly clearing out the pyComponentInterfaceClass if that value is not in use.&nbsp;</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D55841</span>
              </td>
              <td>
                <span>522694</span>
              </td>
              <td>
                <span>isAvailable calendar instance will include time zones</span>
              </td>
              <td>
                <span>When using a custom configuration to route assignments, if today was configured as unavailablefrom date, assignments were still routed to the current operator even though they were not available. Analysis showed that the same Calendar was not used to compare date objStartDate, opUnavailableFrom and opUnavailableTo in the function, isAvailable. The isAvailable FUA calculates objStartDate by getting the calendar instance and setting the time by calculating it from the next business day. However, the calendar instance was created from Calendar.getInstance(), which does not use a time zone, and this resulted in a mis-match of time. To resolve this,&nbsp; instead of creating a calendar instance objStartDate will be formatted to YYYYMMDD format and then converted to the requestor time zone timings using Data Time Utils parseDateTimeString.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D60636</span>
              </td>
              <td>
                <span>533046</span>
              </td>
              <td>
                <span>Check added for empty RelevantRecords parameter to improve performance</span>
              </td>
              <td>
                <span>When there were no relevant properties in given class context, i.e the Param.RelevantRecords value was empty at step#3 of the pxLoadPegaExpressFields activity, the pzGetFieldsDetailsForClass RD tried to fetch all the properties available for that particular class and its hierarchy, causing system performance issues. To resolve this, a jump condition has been added at step#4 of the pxLoadPegaExpressFields activity to avoid further processing when there are no relevant properties in given class, and the "Use null if empty" option for filter condition A in pzGetFieldsDetailsForClass is now checked to avoid fetching all results when the RelevantRecords parameter value is empty.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D61681</span>
              </td>
              <td>
                <span>532559</span>
              </td>
              <td>
                <span>Handling added for different access groups updating a case</span>
              </td>
              <td>
                <span>When a parent flow was configured with a Wait shape to wait until any AccessChild case reached Pending-Authentication and then the “Update a case” shape was used to update the case status of child cases using a Data Transform, the Wait shape was being processed successfully but the child cases were not always updated as expected. This issue occurred when the cases were processed by users with different access groups, so the ProcessFlowDependencies agent processed the dependency. In this scenario, findPageByHandle returned an incorrect WorkPage because of the different access groups. To resolve this, pyLoadMyCasesNested Step-5 and pzProcessIndividualDepAssignment Step -13 now make additional checks to verify whether the page found by findPageByHandle API is a valid WorkPage or not.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D63031</span>
              </td>
              <td>
                <span>526587</span>
              </td>
              <td>
                <span>Reusable assets default option populated correctly for new application</span>
              </td>
              <td>
                <span>When creating an application with at least two case types where each case type belonged to different class groups and pointed to different tables but were configured to have only one work pool, operator work pool values for pxThread and pxRequestor did not correctly reflect the different access group settings. This was traced to the inheritance of default values when the portal pyPortal.pyDesktopType was set to Composite, which caused the system to always take the value from the work pools in the application whether or not it was the same value as specified. A check has now been added so that the system will only default to using the value from the work pool if no value has been specified.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D63307</span>
              </td>
              <td>
                <span>542769</span>
              </td>
              <td>
                <span>Unneeded class name filter removed from GetRelevantPropertiesForDataType</span>
              </td>
              <td>
                <span>Given one class with a set of properties and another class inherited from the first class containing a relevant records set for class 2, then a new harness did not show the base class fields. Investigation showed that the fields present in the parent class and marked relevant in the case were not being fetched due to pzGetRelevantPropertiesForDataType having a class name filter along with filter by rule resolution. To resolve this, the class name filter has been removed as it is not required due to the report already filtering by rule resolution and relevant class through a join.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D64528</span>
              </td>
              <td>
                <span>528757</span>
              </td>
              <td>
                <span>Decision table rule scrolling fixed for low resolution screens</span>
              </td>
              <td>
                <span>While scrolling right, the Tool bar in a decision table rule was moving right while the remaining screen moved left. This was traced to the the screen resolution being less than decision table toolbar width, allowing an infinite scroll. To support low resolution screens, the decision table grid has been made scrollable to resolve this.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D65401</span>
              </td>
              <td>
                <span>528957</span>
              </td>
              <td>
                <span>Parameter page retained after strategy test case checkout</span>
              </td>
              <td>
                <span>After a test case for a Strategy was created, it passed in the initial run but then failed after checkout of the test case. This was traced to an issue with the activity pzCheckAndUpdateParameters for strategy, and has been corrected.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D67316</span>
              </td>
              <td>
                <span>541204</span>
              </td>
              <td>
                <span>Cross-site scripting protection for PegaRULESMove_Skimming_Query</span>
              </td>
              <td>
                <span>Cross-site scripting protection has been added for input parameter toRSV of the activity PegaRULESMove_Skimming_Query.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D69927</span>
              </td>
              <td>
                <span>537484</span>
              </td>
              <td>
                <span>Cleanup added for staging directory</span>
              </td>
              <td>
                <span>Temporary files from imports and exports (from DevOps) were filling up the staging area disk space because there was no automatic process for cleaning up these local files.&nbsp; This has been resolved by adding an enhancement that will clear the directory on Engine Startup and any time ParUtils.setStagingDirectory gets called to initialize the staging directory.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71475</span>
              </td>
              <td>
                <span>538720</span>
              </td>
              <td>
                <span>Check added to apply values of newAssignPage.pxFormName</span>
              </td>
              <td>
                <span>After upgrade, trying to open existing assignments resulted in a different harness being opened. This was traced to changes in how the property newAssignPage.pxFormName was used, and has been resolved by checking whether the harnesspurpose is dynamic before setting the pxFormName. If formname is already present, the system will proceed with picking the harness from the shape.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D72672</span>
              </td>
              <td>
                <span>536386</span>
              </td>
              <td>
                <span>Security updated for CreateOperator</span>
              </td>
              <td>
                <span>In order to improve security, CreateOperator in Pega-ProCom will require authentication to run with pxCanManageUsers privilege.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D75469</span>
              </td>
              <td>
                <span>538119</span>
              </td>
              <td>
                <span>Resolved null-pointer exception in Expression Builder launch from activity rule</span>
              </td>
              <td>
                <span>A NullPointerException occurred in SafeURL when trying to launch the Expression Builder from an activity rule.&nbsp; This was trasced to a failure to get a value property in a target field due to the target element and its parent element containing the same value for name attribute. This caused the parent element to be considered instead of the target element. To resolve this, the search for the target element in parent tag will use '$p' along with 'target element name' in query selector.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D75835</span>
              </td>
              <td>
                <span>539301</span>
              </td>
              <td>
                <span>Added handling for Google Chrome drag and drop of Outlook email</span>
              </td>
              <td>
                <span>Attempting to drag and drop an email from Outlook to a case opened in Google Chrome resulted in the email being moved to the Outlook deleted folder. This was traced to Google Chrome defaulting to defining the "dropEffect" attribute as "none" when the expectation is it should be "copy".&nbsp; To resolve this, the recommended handling from Microsoft has been added as an event to make a copy (and not a move) an email from Outlook when dragged and dropped with Google Chrome.</span>
              </td>
              <td>
                <span>Low-code app development</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D17575</span>
              </td>
              <td>
                <span>489953</span>
              </td>
              <td>
                <span>Survey route to work queue option restored for smartshape</span>
              </td>
              <td>
                <span>After upgrade, routing to workqueue was no longer available for the new create survey smart shape. This has been restored.</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D37275</span>
              </td>
              <td>
                <span>519026</span>
              </td>
              <td>
                <span>Enabled PDF attachment for iPad Safari</span>
              </td>
              <td>
                <span>It was not possible to select the PDF option when attempting to attach a file while using iPad Safari. This has been corrected.</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D40605</span>
              </td>
              <td>
                <span>510916</span>
              </td>
              <td>
                <span>Corrected mobile password control behavior on failed validation</span>
              </td>
              <td>
                <span>Given a section on mobile where the out-of-the-box password control was used on a textbox with input field of type Password to set a new password, failed validation on the field caused the cursor on the input field to jump to the left. It was then not possible to delete the text or correct the placement of the cursor. This was traced to a missing type check for password in isTextBox(), and has been corrected.</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D42243</span>
              </td>
              <td>
                <span>525771</span>
              </td>
              <td>
                <span>Added handling for offline mobile attachments using PRFiles and Repositories</span>
              </td>
              <td>
                <span>Attaching a file on mobile and then immediately clicking on it to open it either did not open the attachment or the attachment opened and then the app stopped working with a "Sync Failed" error. Attachments were not synchronized on the server, and when synchronization was re-tried the attachment was duplicated on attachment list. This was traced to the system being configured to use PRFile API for synchronizing attachments along with Repositories to store attachments; when the processing "commitAttachment" action was processed, it called the Work-.AttachFile activity to finalize attachment upload, but the activity was called without the mandatory attachment InputStream required when using PRFile + Repositories. This has been resolved by ensuring there is a call to Work-.AttachFile with InputStream in cases where PRFiles and Repositories are enabled.</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D42437</span>
              </td>
              <td>
                <span>513647</span>
              </td>
              <td>
                <span>Pulse @mention will avoid triggering search request if no suggestion list is available</span>
              </td>
              <td>
                <span>Search threads were causing requestor Lock Exceptions due to poorly optimized queries sent to ElasticSearch when a Pulse mention was attempting to look up a person (e.g. "@"+typing) and the search of case objects to match to that search were performing poorly. To resolve this, an update has been made to avoid triggering requests if the suggestions list is not available for the search query.</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D43272</span>
              </td>
              <td>
                <span>516439</span>
              </td>
              <td>
                <span>Local user lookup modifed to use requestor level data page to improve performance</span>
              </td>
              <td>
                <span>In a system with many users (over 40k), attempting to search for a user to send a private message was taking an excessive amount of time. Analysis found that all of the users were being loaded at once in a page list of type Code-Pega-List. This led to&nbsp; errors indicating the Page List property had more elements than the specified threshold, but pagination could not be added as the activity and RD are final. To improve performance, this process has been modified to use a data page at the requestor level instead.</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D43808</span>
              </td>
              <td>
                <span>512660</span>
              </td>
              <td>
                <span>Resolved loop causing search to fail</span>
              </td>
              <td>
                <span>After upgrade, searching for a case caused node failure. This was traced to a system loop when trying to remove duplicate workpool classes and has been resolved by updating the pyPopulateWorkPoolsAndClassesForTagsSearch activity to remove extra looping on workpool classes in step 3. In addition, a new 'when' rule pyIsTagSearchEnabled has been added: the pySearchWrapper activity will only search tags when this rule is true.&nbsp;</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D50137</span>
              </td>
              <td>
                <span>528823</span>
              </td>
              <td>
                <span>Resolved loop causing search to fail</span>
              </td>
              <td>
                <span>After upgrade, searching for a case caused node failure. This was traced to a system loop when trying to remove duplicate workpool classes and has been resolved by updating the pyPopulateWorkPoolsAndClassesForTagsSearch activity to remove extra looping on workpool classes in step 3. In addition, a new 'when' rule pyIsTagSearchEnabled has been added: the pySearchWrapper activity will only search tags when this rule is true.&nbsp;</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D50584</span>
              </td>
              <td>
                <span>518444</span>
              </td>
              <td>
                <span>Security added to retrieving operator list by URL extension</span>
              </td>
              <td>
                <span>It was possible to append information to the application URL which allowed an unauthenticated user to find a list of operators. This has been corrected, and will now result in the message "There has been an issue; please consult your system administrator."</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D50725</span>
              </td>
              <td>
                <span>516513</span>
              </td>
              <td>
                <span>Page cleanup processes updated to facilitate Pulse Task creation</span>
              </td>
              <td>
                <span>Attempting to create a Pulse Task in an assignment resulted in a "The Operation completed successfully, but returned no content" screen after clicking submit. This was traced to an incorrect usage of createworkpage. To resolve this, the system has been updated so that before calling createworkpage, a page-remove will be done so createworkpage will not clean the assignment page.</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D53266</span>
              </td>
              <td>
                <span>516395</span>
              </td>
              <td>
                <span>Synchronization continuation updated so mobile attachments properly preview</span>
              </td>
              <td>
                <span>Clicking on attachments in mobile would open them if the attachment had just happened, but otherwise would not open them at all.&nbsp; This was traced to an issue with Synchronization continuation: the page was properly loaded from database but its content was not used to fill the named OfflinePackage page (which contains only the search keys). This has been corrected by replacing the empty page with the one loaded from the database.</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D55559</span>
              </td>
              <td>
                <span>520972</span>
              </td>
              <td>
                <span>Setting added to allow commas in bulk upload survey questions</span>
              </td>
              <td>
                <span>Questions uploaded in bulk to Survey Designer were delimited by comma, potentially causing an issue when an option itself contains a comma. Because this is a hard-coded Excel template value, this has been addressed with the addition of an extension where delimiter values can be configured and overridden.</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D67150</span>
              </td>
              <td>
                <span>532022</span>
              </td>
              <td>
                <span>Resolved attachments when using Mobile page message setting</span>
              </td>
              <td>
                <span>When using page-level error messages for a work object, trying to add an attachment to that work object resulted in an error and the attachment failed.&nbsp; This has been resolved by adding an error check in the pzAttachContentFile activity.</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D74839</span>
              </td>
              <td>
                <span>537321</span>
              </td>
              <td>
                <span>Corrected map zoom issue with iOS13</span>
              </td>
              <td>
                <span>After including a map control with markers in an application for iOS13, viewing via a mobile app and zooming introduces a gray bar across the map. This has been resolved by setting transform translateZ to the div of address map</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D76927</span>
              </td>
              <td>
                <span>541421</span>
              </td>
              <td>
                <span>VirusCheck added to all Pulse uploads</span>
              </td>
              <td>
                <span>The upload file activity has been updated to invoke VirusCheckActivity for all Pulse uploads.</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D81859</span>
              </td>
              <td>
                <span>543764</span>
              </td>
              <td>
                <span>Maps and signatures inside layout groups scroll correctly</span>
              </td>
              <td>
                <span>A map configured in the screen was getting grayed out while scrolling horizontally. Analysis showed that when an address map is inside a layout group, the layout group swipe was triggered instead of scrolling. To resolve this, the target parent now has the data attribute "data-nogestures" = true so the layout group swipe will not be triggered. This will also prevent swipe on signature while scrolling horizontally.</span>
              </td>
              <td>
                <span>Mobile</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D37115</span>
              </td>
              <td>
                <span>515838</span>
              </td>
              <td>
                <span>Onclick handler updated to resolve RD UI issue</span>
              </td>
              <td>
                <span>After modifying the function logic in Report Definition, reopening it in the configuration modal dialogue displayed the function multiple times and it was not possible to open/edit the function. This issue was cosmetic and related to the UI representation of functions: the underlying clipboard page had the correct details regarding the custom logic and functioned as expected. Investigation showed the UI error was related to the onclick handler, and this has been resolved so the system correctly removes the onclick handler when required.</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D42095</span>
              </td>
              <td>
                <span>516669</span>
              </td>
              <td>
                <span>Added validation function to 'apply filters' to handle custom filtering</span>
              </td>
              <td>
                <span>A custom filter section with the "Display custom section inline" checkbox checked and required input fields was not firing validation if the input fields were empty. Switching the focus away from the filter section caused validation to appear saying the filter could not be blank, but "Apply filters" (which is missing validation) was still clickable and the report updated. This has been resolved by adding a validateInput function to the "Apply filters" button of the pega_report_events file.</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D48173</span>
              </td>
              <td>
                <span>515338</span>
              </td>
              <td>
                <span>Resolved hang caused by cancelling report calculation</span>
              </td>
              <td>
                <span>When dragging a calculation into the report editor filter area, clicking X on the cancel modal that appeared caused a JavaScript exception to occur. This exception later prevented the ability to click the "done editing" button on the report. This has been resolved by modifying the pzpega_report_rafpopup.sj -- doRefresh API to pass the correct argument to reload the section API.</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D48442</span>
              </td>
              <td>
                <span>514045</span>
              </td>
              <td>
                <span>ExportMode parameter sent&nbsp; to resolve duplicate rows in Export to Excel</span>
              </td>
              <td>
                <span>On performing Export to Excel for a report definition, duplicate rows were being exported for a column which had a TextAreaWithExpandSmall UI Control. Investigation showed that this control was looking for the exportmode parameter, which was not being sent. This parameter is now being sent.</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D50787</span>
              </td>
              <td>
                <span>520483</span>
              </td>
              <td>
                <span>Excel time values will default to server datetime if operator time zone is null</span>
              </td>
              <td>
                <span>After upgrade, a scheduled report that contained a column using pxDateTime that was supposed to use EST instead used GMT when run and exported to Excel. This has been resolved with an update that will default to using the time zone of the server If the time zone of the operator is empty or null.</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D50819</span>
              </td>
              <td>
                <span>519236</span>
              </td>
              <td>
                <span>Eligibility Builder integer sorting revised</span>
              </td>
              <td>
                <span>In 'Offer' on the Eligibility tab, the Builder was sorting integer properties by the value of the integer as a text string rather than the whole number. Example: 1, 10, 12, 13, 100, 2, 20, 29, 299, 3 instead of the expected 1, 2, 3, 10, 11, 12, 20, etc.&nbsp; This was traced to the system sorting the results using tools.sortPageList() in order to sort by localized (string) value, which is not appropriate for values of any type other than string. To resolve this, the system will skip the manual sort step for numeric columns since the values are appropriately sorted by the database.</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D55801</span>
              </td>
              <td>
                <span>524291</span>
              </td>
              <td>
                <span>Corrected HTML error generated on export to PDF</span>
              </td>
              <td>
                <span>After exporting a report to PDF, the PDF could be viewed but repeated instances of the error "&lt;th&gt; missing ‘&gt;’ for end of tag" were logged.&nbsp; This was traced to missing the closing '&gt;' for th in the pzRRDataListHeaderRow HTML rule when "Enable column command menu" is unchecked in ReportViewer options, and has been corrected.</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D64231</span>
              </td>
              <td>
                <span>539233</span>
              </td>
              <td>
                <span>Export to Excel cell style control added</span>
              </td>
              <td>
                <span>If a column was formatted with an auto generated numeric control, a new cell style was generated for every row during the export to Excel process. Since there is a limit on the amount of cell styles, once the number of rows in the file was greater than 64000 an error was generated. To resolve this, the system will disable the creation of a new cell style for every instance when an auto-generated numeric control is used.</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D65256</span>
              </td>
              <td>
                <span>528005</span>
              </td>
              <td>
                <span>DisplayCommandMenu holds value during runtime filter changes</span>
              </td>
              <td>
                <span>In report definition, under report viewer tab, the 'enable column command menu' option was disabled. When the report was launched, the menu was not displayed for each column as expected; after applying the filter changes, the column menu options were unexpectedly displayed. This was traced to previous work done on the implementation of the navigation menu for auto-generated grids. Because pyDisplayCommandMenu is exposed on the ruleform itself, disabling the command menu from the ruleform caused changes to the filter to reset and pyDisplayCommandMenu was set back to true regardless of what was configured on the ruleform. To correct this, updates have been made to ensure that pyDisplayCommandMenu is not overwritten when there are changes to a filter during runtime.</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D65327</span>
              </td>
              <td>
                <span>534569</span>
              </td>
              <td>
                <span>Backspace keydown handler updated for all textinput modes</span>
              </td>
              <td>
                <span>Attempting to use the Backspace key to remove input from a number cell (either Integer or Decimal) did not work. When the action was performed by a Manager, the Backspace key works as expected. Investigation showed the logic in the keydown handler for the backspace key in pega_report_events.js was only ignoring the e.preventDefault() call when the textinput node type was text, not number or other input types. To correct this, the keydown handler has been updated so the backspace key in pega_report_events.js maintains the default backspace functionality for all textinput modes, not just those of type 'text'.&nbsp;</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D69098</span>
              </td>
              <td>
                <span>534041</span>
              </td>
              <td>
                <span>Export to Excel works for for report definition with duplicate columns</span>
              </td>
              <td>
                <span>After adding a date column to a report definition (2nd column in the report), the data displayed correctly in the UI but Export to Excel failed with the error "Section 'pzRDExportWrapper' execution error on page '' of&nbsp; class 'Rule-Obj-Report-Definition'. : The Reference .pyDateValue(2) is not valid."&nbsp; This was traced to an out of bounds exception thrown if there were two or more columns with the same calculation. When preparing for export, the column with the duplicate calculation would not get added to the map of report UI fields. To resolve this, the system has been updated to allow report definition columns with the same calculation to be properly mapped to a UI field.</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D69108</span>
              </td>
              <td>
                <span>543845</span>
              </td>
              <td>
                <span>Handling added for drag-and-drop with deleted report templates</span>
              </td>
              <td>
                <span>After adding a new report, an error appeared when trying to use drag-and-drop to add a column (Page List) from the Data Explorer in the report browser. This was traced to refactor work done to use the Record API throughout reporting: the ruleset on new reports was not being reset from a Pega- ruleset to an application ruleset, causing columns the referenced properties defined outside the platform to be rejected. This use case was missed because case types define their own report templates on creation, but in this scenario those had been deleted.&nbsp; To resolve this, the system has been updated to call pxChooseBestRuleset from pxShowReport in order to enable the use of properties defined in the application prior to saving the report.</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D69935</span>
              </td>
              <td>
                <span>534021</span>
              </td>
              <td>
                <span>Filtered By Label read by JAWS in report browser</span>
              </td>
              <td>
                <span>When using Firefox, any FilteredBy text in the Report Browser was not being read by JAWS. This was traced to Firefox interpreting the filters in the Report Viewer as not having any distinguishing accessibility label, and has been resolved by adding aria roles to the filters in the Report Viewer.</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71408</span>
              </td>
              <td>
                <span>534931</span>
              </td>
              <td>
                <span>DIrty check flag triggered by adding columns and filters</span>
              </td>
              <td>
                <span>If a report was edited and closed without saving, the dirty check worked as expected. However, if new columns or filters were added and the report closed without saving, the dirty check did not appear. This has been resolved by updating the check logic.&nbsp;</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D73777</span>
              </td>
              <td>
                <span>539968</span>
              </td>
              <td>
                <span>Logic added for client-side Somaria decoding</span>
              </td>
              <td>
                <span>When Somaria (an Advanced Data Visualization control) was used with Predictor Performance, the special characters were displayed as ASCII values instead of the actual values in the label. This was traced to Somaria encoding special characters of the visualization data into HTML entities on the server in order to protect against cross-site scripting attacks, but these entities were not being decoded on the client side. To resolve this, logic has been added to decode HTML entities in Somaria data on the client.&nbsp;</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D75097</span>
              </td>
              <td>
                <span>542359</span>
              </td>
              <td>
                <span>DSS added to allow disabling Excel cell export security</span>
              </td>
              <td>
                <span>In order to avoid calculation injection during Export to Excel, an apostrophe character was added to the cell on export to close a vulnerability. However, sites using an external tool to consume the Excel document needed a workaround for this security feature. The resolution for this issue adds a DSS setting "TurnOffSecurityForExportToExcel" which can now be used to turn on/off the security feature that adds char " ' " in front of the cell value. Further refinements to this work will be included in a future release.</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D75757</span>
              </td>
              <td>
                <span>540638</span>
              </td>
              <td>
                <span>ReportBrowser script updated to ensure older version refreshes on creation</span>
              </td>
              <td>
                <span>When using the old version of the Report Browser, the count at the report category did not update after being saved into a category until logout and login back to the portal. This was a missed use case for the old browser during updates to the UIKit and has been resolved by including the reportbrowser script in the header section pyCMReportBrowserHeader to ensure a refresh.</span>
              </td>
              <td>
                <span>Reporting</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D31734</span>
              </td>
              <td>
                <span>515655</span>
              </td>
              <td>
                <span>Cross-site scripting protection added for parameter page properties</span>
              </td>
              <td>
                <span>An cross-site scripting vulnerability was seen with the Edge browser when run on visibility on client check was enabled with dynamic layouts and some properties were accessed from parameter page. Because run on visibility on client check is not required in this scenario, is has been removed and the values will be accessed from the server instead.</span>
              </td>
              <td>
                <span>Security</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D33214</span>
              </td>
              <td>
                <span>514022</span>
              </td>
              <td>
                <span>Added safeURL encoding for Japanese characters in attached filenames</span>
              </td>
              <td>
                <span>It was not possible to preview a Japanese-titled PDF file attached on a work object. Investigation showed that in case of Japanese characters, file names were not being correctly encoded during the fetch request when JBoss was used. The retrieval worked correctly under Tomcat. In order to ensure consistent encoding, the safeURL API will be used for constructing the URL and for the activities DisplayAttachFile and pzDownloadFromRepository which add the ContentDisposition header.</span>
              </td>
              <td>
                <span>Security</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D67321</span>
              </td>
              <td>
                <span>532627</span>
              </td>
              <td>
                <span>ShowXML activity deprecated</span>
              </td>
              <td>
                <span>The activity @baseclass.ShowXML has been blocked for security reasons. If the functionality is needed, a a single line step of "Show-Applet-Data" may be used.</span>
              </td>
              <td>
                <span>Security</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>C93602</span>
              </td>
              <td>
                <span>485517</span>
              </td>
              <td>
                <span>White list filter added for&nbsp; X-Forward-Host value security</span>
              </td>
              <td>
                <span>In order to improve security, a validation for X-Forward-Host value has been added which will be read from a local configuration. This is in the form of a white list regex filter for the host/XFHost header to ensure the URL's actions cannot be redirected.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D37894</span>
              </td>
              <td>
                <span>505974</span>
              </td>
              <td>
                <span>Query parameters will be cleared after redirection from authentication</span>
              </td>
              <td>
                <span>When using the /PRAuth Servlet, running a snapstart URL generated from a secondary application correctly executed SAML Authentication and Pega processing, but a second URL generated with different parameters ran with the parameters from the first request.&nbsp; The third and subsequent requests processed as expected with the parameters sent in with the request. Investigation showed that the previous parameters were picked due to the query string parameters not being cleared after redirection, and this issue has been resolved by updating the system so it will clear the parameters after issuing a redirect from the authentication policy engine.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D41454</span>
              </td>
              <td>
                <span>506535</span>
              </td>
              <td>
                <span>Updated HotFix Manager for use in older versions</span>
              </td>
              <td>
                <span>The DL logic in Hotfix Manager was changed in 8.3 to include the catalog of all framework changes.&nbsp; This had the unintended side effect of preventing DLs from being installed in Pega 7.3.1 and lower versions as the versions included in the catalog are not present on those systems and the validation failed. This has been resolved by revising the DL update so the system will only add all apps to the catalog for platform 7.4+ DLs.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D46133</span>
              </td>
              <td>
                <span>534649</span>
              </td>
              <td>
                <span>Colon in folder or file name will be replaced with underscore during unzip</span>
              </td>
              <td>
                <span>After creating a product file (zip), attempting to import the same file into an updated system resulted in an exception. Investigation showed that in this case the zip file was a Product rule form which had applications packaged with a colon(:) in the name of the application, a format that was allowed in 6.x versions. Because Windows machines restrict creating creating any folder or file with : in its name, the zip file could not be inflated as part of the import process. To resolve this, the system has been updated so that a colon(:) will be replaced by underscore(_) during inflate operations.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D46536</span>
              </td>
              <td>
                <span>515792</span>
              </td>
              <td>
                <span>Custom agent next run time will be rescheduled if the run failed</span>
              </td>
              <td>
                <span>If a customized agent that was set to run every day encountered an exception and failed to run, restarting the agent did not update it to the next run time; it still returned the passed trigger time as its next execution time. This has been resolved with an update that will reschedule the run if the next run time is in the past.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D46681</span>
              </td>
              <td>
                <span>514432</span>
              </td>
              <td>
                <span>SnapStart supports SAML2 Authentication</span>
              </td>
              <td>
                <span>When using an HTTP Post to SnapStart into Pega using PRCustom style or PRAuth style SAML authentication, the login was looping back to the login request. Investigation showed that the Pega ACS was posting data properly back to the RelayState URL, however the login activity was not getting the SAMLResponse and simply sent a SAML Login Request again. This has been fixed by updating reqContextURI in case of SAML2 Authentication service so pyActivity=value will be passed.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D47685</span>
              </td>
              <td>
                <span>514645</span>
              </td>
              <td>
                <span>Cookie logging restored</span>
              </td>
              <td>
                <span>As part of security updates, Cookies were restricted from being logged. However, this caused some business use cases such as a custom function call to obtain the list of cookies that are present in the application to stop working. To resolve this, the cookie logging restriction has been reverted.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D48433</span>
              </td>
              <td>
                <span>529854</span>
              </td>
              <td>
                <span>Exception handling added for Redirect URL fetched from GRS</span>
              </td>
              <td>
                <span>When the application definition under “integration and security" tab was configured to use "Store in web storage provider" to allow choosing the storage name and the authentication profile, configuring the authentication profile to use an OpenID connect provider with the pyEndpointURL property given as a global resource setting such as (=D_SharepointDetails.url) was not working as expected. Clicking browse in the application definition sent the request to the OpenID connect provider and was returned with the error "The reference =D_SharepointDetails.url is not valid. Reason: Page name (D_SharepointDetails) from indirect reference was not found."&nbsp; This was traced to&nbsp; the Redirect URL (fetched from GRS) throwing an unhandled exception, and has been resolved.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D48762</span>
              </td>
              <td>
                <span>518296</span>
              </td>
              <td>
                <span>Enhancement added to support DB2 CREATE OR REPLACE view syntax</span>
              </td>
              <td>
                <br><br><span>After creating the product, attempting to import it on another environment failed due to incompatibilities with the syntax. In SQLGeneratorDb2.getViewSourceStatement(), when the View definition is fetched there is a check whether the view starts with "CREATE VIEW". Since the customer view of "CREATE OR REPLACE" was not supported in Db2LUW, it didn't match and appended the "CREATE VIEW" statement again. This happened only when using DB2, and has been resolved by updating the logic in SQLGeneratorDb2.getViewSourceStatement() to support CREATE OR REPLACE VIEW statements.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D49804</span>
              </td>
              <td>
                <span>518225</span>
              </td>
              <td>
                <span>Hierarchical view support added for moving packages</span>
              </td>
              <td>
                <span>After exporting a package from a DEV environment, attempting to import it to a TEST environment resulted in the query becoming corrupted and the process failing. This was traced to the regex used to fetch the select statement table name not supporting hierarchical views, and has been resolved by adding that support.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D50539</span>
              </td>
              <td>
                <span>521149</span>
              </td>
              <td>
                <span>DB locking improved for login performance</span>
              </td>
              <td>
                <span>A slowness issue seen when trying to login to my.pega.com was traced to numerous DB locks occurring on the pr_data_saml_authreqcontext table during the SAML flow. Analysis showed that while running Obj-Save on AuthRequestContext with 'OnlyIfNew' as false, the check caused a select query to run on the table to determine if the context was already there and insert it if it was not.&nbsp; To resolve this, the onlyIfNew check will default to true to avoid running the query; if the context is already present it will be overridden. Duplicate key exception handling has also been added to avoid any issues if a resave is done with same key.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D51324</span>
              </td>
              <td>
                <span>523433</span>
              </td>
              <td>
                <span>Authentication state refreshed after failure in mobile</span>
              </td>
              <td>
                <span>When using the mobile app, if the log in was started and incorrect credentials or empty fields were submitted and then the credentials screen was X-ed out or canceled, attempting to log in again using the correct information still received the&nbsp; "Authentication failed" error.&nbsp; A subsequent attempt with the correct credentials would then work. This was traced to the server persisting the state from the first request (per browser session), and has been resolved.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D52785</span>
              </td>
              <td>
                <span>518408</span>
              </td>
              <td>
                <span>Cross-site scripting protection added to layout runtime java and whitelist validation available for host/XFHost</span>
              </td>
              <td>
                <span>In order to protect against Cross-site scripting issues, filtering has been added to the RepeatDynamicIndex parameter value in layout runtime java. In addition, a validation for X-Forward-Host value has been added which will be read from a local configuration. This is in the form of a white list regex filter for the host/XFHost header to ensure the URL's actions cannot be redirected.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D52969</span>
              </td>
              <td>
                <span>514702</span>
              </td>
              <td>
                <span>Column population honors thread count of 1</span>
              </td>
              <td>
                <span>The thread count parameter in the column population activity was not being honored, causing repeated deadlocks when trying to populate columns. Investigation showed that the ExposeCols process did not honor the thread count when it was 1 (the default is 4), and this has been fixed by adding the necessary code so that if the thread count is 1, it will not run in multhreaded mode.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D53838</span>
              </td>
              <td>
                <span>521478</span>
              </td>
              <td>
                <span>Run Ruleset Cleanup defaults to true</span>
              </td>
              <td>
                <span>After upgrade, the rule categories and rules were not showing correctly in the App view of the Dev Portal. Many warning messages were also logged related to the Decisioning DM Sample application. This was traced to the rules cleanup script not running properly. While there was a workaround of applying the ruleset cleanup scripts manually after removing the queries that reference the pr_engineclasses table, the cleanup will now be set to run by default (run.ruleset.cleanup=true). In addition, the logic to determine which RuleSets to include has been simplified and most of the pr4_rule_vw deletions have been combined.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D54319</span>
              </td>
              <td>
                <span>532526</span>
              </td>
              <td>
                <span>API added to sync presence with requestor to clear inactive operator sessions</span>
              </td>
              <td>
                <span>An intermittent error message was seen indicating the maximum number of active sessions for the current operator had been reached even though there were not multiple logins and there was no requestor displayed in the requestor management landing page. This was traced to sessions that were not properly closed and cleared, and has been resolved by exposing an API that will sync the presence record with the requestor state so inactive sessions will be cleared.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D54628</span>
              </td>
              <td>
                <span>524567</span>
              </td>
              <td>
                <span>jFreeChart upgraded</span>
              </td>
              <td>
                <span>Chart generation activities have been updated to use JFreeChart v1.0.19.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D55160</span>
              </td>
              <td>
                <span>520354</span>
              </td>
              <td>
                <span>Namibia and Botswana added to Currency Symbol values</span>
              </td>
              <td>
                <span>Support has been added for the Namibia (en_NA) and Botswana (en_BW) locales in the default Currency Symbol values.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D55449</span>
              </td>
              <td>
                <span>523501</span>
              </td>
              <td>
                <span>Cross-site scripting protection added to layout runtime java and whitelist validation available for host/XFHost</span>
              </td>
              <td>
                <span>In order to protect against Cross-site scripting issues, filtering has been added to the RepeatDynamicIndex parameter value in layout runtime java. In addition, a validation for X-Forward-Host value has been added which will be read from a local configuration. This is in the form of a white list regex filter for the host/XFHost header to ensure the URL's actions cannot be redirected.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D55508</span>
              </td>
              <td>
                <span>521859</span>
              </td>
              <td>
                <span>CSRF and Fingerprint token handling added to custom URL generation</span>
              </td>
              <td>
                <span>An error screen appeared with the message "Server response error, no update data returned" while doing a check out and check in of the offer rule. This was traced to CSRF token validation: in this scenario, a custom URL was being framed and the corresponding request did not have a valid CSRF/ Fingerprint token, which can occur when there are custom AJAX/Non-ajax URLs constructed manually in the non-autogenerated/HTML streams. To address this, handling has been added for CSRF and fingerprint tokens as part of the custom URL generation.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D56063</span>
              </td>
              <td>
                <span>522857</span>
              </td>
              <td>
                <span>Hazelcast upgraded to resolve node startup issue</span>
              </td>
              <td>
                <span>Post data upgrade, the ADM tier failed to start and the error "java.lang.IllegalStateException: Node failed to start!" appeared. This was traced to a dormant bug in Hazelcast 3.11 that caused starting nodes to fail when the Hazelcast master node was shutting down, which was exposed by recent Pega changes made to enable parallel restarts of nodes in Cloud environments. Hazelcast delivered a fix for the parallel restart problem and the hotfixed jar has been merged into the platform. In addition, previous logic for loading Admin Studio waited 30 seconds before timing out when fetching information for each node. This caused issues with large clusters and Admin Studio not loading. The logic has been updated in the Admin Studio UI to load the page despite delays/issues waiting for nodes to respond to the gathering of cluster data, and the algorithm to detect remote-call timeout has been updated and is applicable to batch operation.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D56409</span>
              </td>
              <td>
                <span>520742</span>
              </td>
              <td>
                <span>URL Encryption and Obfuscation made compatible with site-minder</span>
              </td>
              <td>
                <span>Attempting to install a DL using Hfix Manager worked when not going through SSO but failed when using SSO. Investigation showed that this was due to the use of URLEncryption: URLEncryption uses a Pega-supplied base64 to encode the cipher text with MIME type encoding by default, which adds newline character after every 72 characters. This is not compatible with site-minder. which has policies to restrict<br> newline characters in the URL. As a result, none of the encrypted requests were being processed. To resolve this, post-processing logic has been added to remove newline characters from encoded text. This change has also been applied top URLObfuscation.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D56527</span>
              </td>
              <td>
                <span>538301</span>
              </td>
              <td>
                <span>DSS PegaAESREmote*ResetTableStats set to false</span>
              </td>
              <td>
                <span>In order to prevent an issue with resetting table stats that potentially impacts postgres in an unintended fashion, the DSS PegaAESREmote*ResetTableStats has been set to false.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D57038</span>
              </td>
              <td>
                <span>519379</span>
              </td>
              <td>
                <span>JobScheduler DST handling updated</span>
              </td>
              <td>
                <span>When the locale being used changed out of Daylight Savings Time, scheduled jobs did run at the same local time as before but instead ran an hour earlier than expected.&nbsp; Investigation showed that jobscheduler calculated the next runtime based on the time difference from the cluster reference time and current time in milliseconds, and this offset in milliseconds was added to next run time. Since the cluster was started in DST, the job was running on same time due to the time difference. To resolve this, the system will use a calculation offset and set hours/minutes to nextRunTime object so that calendar lib handles daylight savings.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D57444</span>
              </td>
              <td>
                <span>519166</span>
              </td>
              <td>
                <span>Scripts provided to remove unneeded TenantID for Cloud upgrade</span>
              </td>
              <td>
                <span>Cloud upgrade from 8.3 to 8.3.1 was failing in a multi-tenant environment during creation of the Data-MigrationPoint instance. This was traced to pzTenantId not being included in the insert statement when the table included the pzTenantId column. As the column is unnecessary and was only included in the table for completeness, scripts have been provided to remove the pzTenantId column from the table for 8.3.0 and 8.3.1 MT deployments and remove pzTenantId from table in pegarules-master.xml to resolve this issue.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D58702</span>
              </td>
              <td>
                <span>519241</span>
              </td>
              <td>
                <span>Updated HotFix Manager for use in older versions</span>
              </td>
              <td>
                <span>The DL logic in Hotfix Manager was changed in 8.3 to include the catalog of all framework changes. This had the unintended side effect of preventing DLs from being installed in Pega 7.3.1 and lower versions as the versions included in the catalog are not present on those systems and the validation failed. This has been resolved by revising the DL update so the system will only add all apps to the catalog for platform 7.4+ DLs.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D58927</span>
              </td>
              <td>
                <span>522288</span>
              </td>
              <td>
                <span>Added expiration for orphaned tracers</span>
              </td>
              <td>
                <span>After tracing a REST service, the tracer was persisting but not showing in the requestor list from Admin studio. The operator shown in the error did not have access to the system anymore, and other users were not able to trace the service rule. Trying to clear the requestors in all the nodes using API POST /nodes/{nodeID}/pools/requestor/clear also did not resolve the issue. To address this, a distributed rule watch expiration has been added.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D59262</span>
              </td>
              <td>
                <span>523615</span>
              </td>
              <td>
                <span>Cleanup added for staging directory</span>
              </td>
              <td>
                <span>Temporary files from imports and exports (from DevOps) were filling up the staging area disk space because there was no automatic process for cleaning up these local files.&nbsp; This has been resolved by adding an enhancement that will clear the directory on Engine Startup and any time ParUtils.setStagingDirectory gets called to initialize the staging directory.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D61967</span>
              </td>
              <td>
                <span>528215</span>
              </td>
              <td>
                <span>Updated key handling for ProcessJWT</span>
              </td>
              <td>
                <span>After configuring an authentication service which used the ProcessJWT activity to validate the token received, the error "Unable to process the Json Web Token " was seen. Analysis showed the error was caused by a duplicate Key Id in JWK Endpoint Response: the system removed keys after processing, and in the case of duplicate keys the system was throwing null pointer exception because the key had already been removed. To resolve this, the system has been updated to not remove the keys from the map as part of this process.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D63232</span>
              </td>
              <td>
                <span>524294</span>
              </td>
              <td>
                <span>Support added for Authentication service rule attributes in embedded pages</span>
              </td>
              <td>
                <span>SSO login was not working, giving the error "Unable to process the SAML WebSSO request : No value specified for Attribute in SAML assertion". Investigation showed the Authentication service rule could only map attributes that are on the top level page and did not consider embedded page values. To resolve this, tools.getProperty will be used to fetch the property reference value instead of find Page and getString.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D63668</span>
              </td>
              <td>
                <span>525478</span>
              </td>
              <td>
                <span>Access Control Policy updated to handle NotEqual with valuelist</span>
              </td>
              <td>
                <span>When editing the Access Control Policy Condition rule in Designer Studio and setting condition to 'is not equal', comparing it to a list generated the error "function not found".&nbsp; The same configuration worked as expected for the 'is equal' condition. This has been resolved by updating policycondition to handle a not equal scenario combined with a valueList property.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D63681</span>
              </td>
              <td>
                <span>527382</span>
              </td>
              <td>
                <span>Localization added to login page messages</span>
              </td>
              <td>
                <span>Localization has been added to the messages that appear on the login and forgot password screens.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D63727</span>
              </td>
              <td>
                <span>531723</span>
              </td>
              <td>
                <span>Authorization header base 64 format error recategorized as debug logging</span>
              </td>
              <td>
                <span>Numerous messages were generated indicating that the Authorization Header format was invalid when using the format " : " (Base64 Og==) . As this is the default behavior for a particular class of proxy servers, the error statement has been updated to be logged as a debug statement and will be visible only when that logging is enabled.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D64408</span>
              </td>
              <td>
                <span>530280</span>
              </td>
              <td>
                <span>Stacktrace will be generated for oLog errors</span>
              </td>
              <td>
                <span>In order to provide improved diagnostics, oLog errors will print stacktraces.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D66222</span>
              </td>
              <td>
                <span>529634</span>
              </td>
              <td>
                <span>Tracer expiration set for five minutes</span>
              </td>
              <td>
                <span>Tracer was not terminating on tracer window closure. On the next attempt to open a trace, a message appeared stating "Cannot Launch Multiple Tracer Sessions for a requestor. This requestor is being traced by operator".&nbsp; Tracer session termination was dependent on the browser executing code on window close. Because this event may not be triggered for number of reasons, updates have been made to set tracer session expiration at 5 minutes. In addition, the system will clean up expired sessions before checking for existing sessions.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D66521</span>
              </td>
              <td>
                <span>536138</span>
              </td>
              <td>
                <span>Logout Redirect updated to handle special characters in IDP parameters</span>
              </td>
              <td>
                <span>When using "HTTP Redirect" in Authentication Service, the Logout Redirect service was failing due to the query parameter name containing "_" (underscore). This was traced to IDP sending parameters to assertion consumer service or logout request endpoint with names which contained any special characters, as the system was trying to put those key values on the parameter page for additional processing. To resolve this, the system has been updated to suppress exceptions when the parameters from IDP includes special characters.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D67945</span>
              </td>
              <td>
                <span>529718</span>
              </td>
              <td>
                <span>PDC JMS Listener accesses conversion of tenant hash to tenant name</span>
              </td>
              <td>
                <span>A new API method has been added for the PDC JMS listener to access getTenantNameFromTenantHash().</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D70569</span>
              </td>
              <td>
                <span>538507</span>
              </td>
              <td>
                <span>Tracer retains modified user settings</span>
              </td>
              <td>
                <span>User settings in tracer were not shown when the settings window was closed and reopened. Investigation showed that settings are filtered based on watchInsKey, but this parameter was passed as "null" for global tracer because of a missing condition to check the session type. This has been resolved by adding a check so the WatchInsKey parameter is passed if the session type is rule watch.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71378</span>
              </td>
              <td>
                <span>533280</span>
              </td>
              <td>
                <span>Authorization header base 64 format error recategorized as debug logging</span>
              </td>
              <td>
                <span>Numerous messages were generated indicating that the Authorization Header format was invalid when using the format " : " (Base64 Og==) . As this is the default behavior for a particular class of proxy servers, the error statement has been updated to be logged as a debug statement and will be visible only when that logging is enabled.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D72636</span>
              </td>
              <td>
                <span>536087</span>
              </td>
              <td>
                <span>Added handling for Authorization Server login loop</span>
              </td>
              <td>
                <span>When the Authorization server returned an error, it was redirecting back with error, error_description, and parameters. The system then tried to start the login process again, the same error parameters were returned again, and it continued to loop this way. To resolve this issue, handling has been added for this error scenario from the Authorization Server.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D73002</span>
              </td>
              <td>
                <span>535256</span>
              </td>
              <td>
                <span>URL Encryption and Obfuscation made compatible with site-minder</span>
              </td>
              <td>
                <span>Attempting to download a Mobile App from the Build Server resulted in an error. This was traced to Cipher text using URLEncryption: URLEncryption uses a Pega-supplied base64 to encode the cipher text with MIME type encoding by default, which adds newline character after every 72 characters. This is not compatible with site-minder. which has policies to restrict newline characters in the URL. As a result, none of the encrypted requests were being processed. To resolve this, post-processing logic has been added to remove newline characters from encoded text. This change has also been applied top URLObfuscation.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D74620</span>
              </td>
              <td>
                <span>537490</span>
              </td>
              <td>
                <span>Dependent role check added to HaveRole</span>
              </td>
              <td>
                <span>The HaveRole function was not checking the dependent role. This has been corrected.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D74848</span>
              </td>
              <td>
                <span>536997</span>
              </td>
              <td>
                <span>Updated key handling for ProcessJWT</span>
              </td>
              <td>
                <span>After configuring an authentication service which used the ProcessJWT activity to validate the token received, the error "Unable to process the Json Web Token " was seen. Analysis showed the error was caused by a duplicate Key Id in JWK Endpoint Response: the system removed keys after processing, and in the case of duplicate keys the system was throwing null pointer exception because the key had already been removed. To resolve this, the system has been updated to not remove the keys from the map as part of this process.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D75053</span>
              </td>
              <td>
                <span>540911</span>
              </td>
              <td>
                <span>Corrected Agent schedule time conversion</span>
              </td>
              <td>
                <span>After upgrade, a mismatch between the agent configuration and schedule was seen, causing an agent scheduled at 6PM Europe/London time to execute at 6AM Europe/London instead. Analysis of the Agent schedule rule showed that if the pyStartAmPm property was empty, the internal code miscalculated the AM_PM string as AM. That meant that if an agent was configured with 24 hour clock format and was set to run at 18:00 hrs, it executed at 6AM. The workaround for this issue involved resaving the agent, triggering the data transform pzSetStartAmPm to correct the field pyStartAmPm, but the issue has been corrected by adding handling for the pyStartAmPm == "" corner case.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D75665</span>
              </td>
              <td>
                <span>538640</span>
              </td>
              <td>
                <span>Corrected double-encoded URL</span>
              </td>
              <td>
                <span>A "bad request" error when trying to launch a remote trace was found to be caused by a double-encoded URL. This has been resolved by correcting the URL composition.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D76409</span>
              </td>
              <td>
                <span>540298</span>
              </td>
              <td>
                <span>Cleanup added for staging directory</span>
              </td>
              <td>
                <span>Temporary files from imports and exports (from DevOps) were filling up the staging area disk space because there was no automatic process for cleaning up these local files.&nbsp; This has been resolved by adding an enhancement that will clear the directory on Engine Startup and any time ParUtils.setStagingDirectory gets called to initialize the staging directory.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D76415</span>
              </td>
              <td>
                <span>540319</span>
              </td>
              <td>
                <span>Cleanup added for staging directory</span>
              </td>
              <td>
                <span>Temporary files from imports and exports (from DevOps) were filling up the staging area disk space because there was no automatic process for cleaning up these local files.&nbsp; This has been resolved by adding an enhancement that will clear the directory on Engine Startup and any time ParUtils.setStagingDirectory gets called to initialize the staging directory.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D77004</span>
              </td>
              <td>
                <span>542347</span>
              </td>
              <td>
                <span>View Full History will not include private edits</span>
              </td>
              <td>
                <span>After upgrade, clicking 'View Full History' and then 'History of All Versions', showed the history of discarded private edits of other users. This was an inadvertent side effect of work done to improve the support for rollback and migration, and has been resolved by updating the system to not save the history when in a personal ruleset (checkouts/private edits). The help documentation has also been updated to note there is no history available for checkouts/private edits.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D78045</span>
              </td>
              <td>
                <span>539890</span>
              </td>
              <td>
                <span>Cleanup added for staging directory</span>
              </td>
              <td>
                <span>Temporary files from imports and exports (from DevOps) were filling up the staging area disk space because there was no automatic process for cleaning up these local files.&nbsp; This has been resolved by adding an enhancement that will clear the directory on Engine Startup and any time ParUtils.setStagingDirectory gets called to initialize the staging directory.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D79178</span>
              </td>
              <td>
                <span>543310</span>
              </td>
              <td>
                <span>SameSite cookie setting added for Mashup support in Google Chrome v80+&nbsp;</span>
              </td>
              <td>
                <span>The Google Chrome browser version 80 and above now treats SameSite with a blank value as "Lax" by default, causing mashup scenarios to break.&nbsp; In order to compensate for this change, support has been added for setting SameSite=None in Cookie Settings in the CSRF LP (DevStudio-&gt; System-&gt; Setting-&gt; CrossSiteRequestForgery) which will enforce HTTPS&nbsp; for the Pega server and mashup. Note: The SameSite cookie may be set to None/Lax/Strict, based on the requirement. For mashups to work, SameSite should be set as None. To follow proper security standards, it should be set as Strict.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D83053</span>
              </td>
              <td>
                <span>544267</span>
              </td>
              <td>
                <span>SameSite cookie setting added for Mashup support in Google Chrome v80+&nbsp;</span>
              </td>
              <td>
                <span>The Google Chrome browser version 80 and above now treats SameSite with a blank value as "Lax" by default, causing mashup scenarios to break.&nbsp; In order to compensate for this change, support has been added for setting SameSite=None in Cookie Settings in the CSRF LP (DevStudio-&gt; System-&gt; Setting-&gt; CrossSiteRequestForgery) which will enforce HTTPS&nbsp; for the Pega server and mashup. Note: The SameSite cookie may be set to None/Lax/Strict, based on the requirement. For mashups to work, SameSite should be set as None. To follow proper security standards, it should be set as Strict.</span>
              </td>
              <td>
                <span>System Administration</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D15231</span>
              </td>
              <td>
                <span>484813</span>
              </td>
              <td>
                <span>Resolved Java code compilation issue due to localized field value</span>
              </td>
              <td>
                <span>After installing the French language pack, a java compilation error occurred due to the dynamic parameters being localized, causing a mismatch for the field values. For example, the Field value pyFactory was translated from "com.pega.dsm.dnode.impl.dataset.cassandra.CassandraDataSetFactory" to "Ensemble de données Usine com.pega.dsm.dnode.impl.dataset.cassandra.Cassandra" in all Data-Admin classes and was being interpreted in the generated java. This has been corrected.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D32528</span>
              </td>
              <td>
                <span>502216</span>
              </td>
              <td>
                <span>Reduced triggering for checkbox click calling resize</span>
              </td>
              <td>
                <span>When using Microsoft Internet Explorer, checkboxes were slow to respond. For example, when clicking two checkboxes in succession, the second checkbox did not change. This was traced to the Layout Resize function getting called numerous times by the _toDisableSlideOnTabsClick and _resizeActions functions during onload refresh. This has been resolved by updating the system so that an LG header cell item checkbox click&nbsp; will not trigger the resize.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D35956</span>
              </td>
              <td>
                <span>521641</span>
              </td>
              <td>
                <span>Handling enhanced for invalid date values in date/time</span>
              </td>
              <td>
                <span>Refreshing a section or entering an invalid date was causing the date/time to be reset to the current date. This has been resolved by modifying the logic and adding conditional checks in 'pzpega_ui_formatDateTime.js'.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D37348</span>
              </td>
              <td>
                <span>514838</span>
              </td>
              <td>
                <span>Added handling for placeholder in Multi-Select List Control</span>
              </td>
              <td>
                <span>After adding a placeholder in Multi-Select dropdown properties to hold the default value as 'please specify' by way of a refresh section on the action tab of multi-select property, the multi-select drop was showing the 'please specify' placeholder after refreshing the section even though there was value in it. This has been resolved by adding handling to make the placeholder empty when there are values.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D40778</span>
              </td>
              <td>
                <span>512974</span>
              </td>
              <td>
                <span>Asterisk symbol displayed for radio button set to required always</span>
              </td>
              <td>
                <span>When marked as required, the "Asterisk" symbol did not show up on the radio button label. This was traced to an XML cleanup issue with the pyReqRunOnClient property when required was configured as 'always' and has been corrected.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D40803</span>
              </td>
              <td>
                <span>511591</span>
              </td>
              <td>
                <span>JSON parsing error on export resolved by ensuring parameter encoding</span>
              </td>
              <td>
                <span>Menu items like "PDF" and "Excel" were not loading on click of the "Export" Button, and an "Exception in parsing JSON" message was logged. The export worked as expected when the menu rule actions of each menu item were modified to remove the openurlinwindow actions. This was traced to the Response JSON being broken due to a invalid format created when the "propositionName" was passed as an unencoded parameter when the report was exported. This has been resolved by ensuring the input parameters are encoded before creating the URL.&nbsp;</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D40938</span>
              </td>
              <td>
                <span>509684</span>
              </td>
              <td>
                <span>Free form layout controls will be converted to dynamic layout</span>
              </td>
              <td>
                <span>After upgrade, a a pzActionDropdown control that was inside a pyActionDropdownSection was not visible anymore. Using the pzActionDropdown&nbsp; control directly worked as expected. Investigation showed that pyActionDropdownSection was using Freeform layout instead of the upgraded Dynamic Layout, and that the custom control was failing to generate the markup whenever drag/copy-paste was used for the control in any layout. To resolve this, the system has been updated so it will remove the control from a free form layout and use dynamic layout instead.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D40941</span>
              </td>
              <td>
                <span>512591</span>
              </td>
              <td>
                <span>Identifier property added for worklist with filter by format</span>
              </td>
              <td>
                <span>After configuring a Grid layout which displayed a users worklist, one of the properties representing the column in Grid had the property type as boolean. The property was derived from another report definition in the main report and a join was performed to display the property. Investigation showed that the filter for Boolean column did not show any filter values like ( [No Value, Y,N ) when run through a case Manager Portal, however the Boolean Column filter worked when run through Report Definition. Other properties from the same class that were not boolean worked with the filter. This was traced to the WorkListWidgetGridsAuto being set to Optimize code, causing filter by format to not be visible in the column properties of pxPages. To resolve this, code has been added for the identifier property</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D41035</span>
              </td>
              <td>
                <span>513204</span>
              </td>
              <td>
                <span>Handlign added for OpenAssignment triggered from confirm harness</span>
              </td>
              <td>
                <span>Triggering openAssignment from the confirm harness was replacing the whole Ajax container DIV, leading to 'submit' no longer working. This has been corrected by adding additional handling for this usage.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D41114</span>
              </td>
              <td>
                <span>508943</span>
              </td>
              <td>
                <span>Localization added for 'NoResultys Found"</span>
              </td>
              <td>
                <span>It was not possible to translate/localize the message 'No Results Found' (autocomplete) to Spanish due to auto complete not containing any property or field value corresponding to this message. This has been corrected by adding the field value and corresponding code handling needed.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D41130</span>
              </td>
              <td>
                <span>510078</span>
              </td>
              <td>
                <span>Handling added for precision decimals in cascading dropdown on mobile&nbsp;</span>
              </td>
              <td>
                <span>A cascading dropdown with a parameterized datapage configuration containing decimal values with precision (such as 22.3,20.000) showed the values as expected on desktop, but the values were empty on mobile. The values did show on mobile as well if precision was not used. This has been resolved by updating templateengine_context so that decimal values will not be treated as a property reference.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D42583</span>
              </td>
              <td>
                <span>514485</span>
              </td>
              <td>
                <span>Label of a field is correctly rendered when a section is re-used with a visiblity condition</span>
              </td>
              <td>
                <span>The label of a field was not being rendered/visible when a section with a 'visible when' condition was re-used in different Page Contexts. The label was displayed correctly if 'Run visibility condition on client' was checked. As part of performance improvements made in a previous version, label generation was moved under the dlcellvisibility flag. Because of this, if a section was re-used at multiple places with different contexts and one place had visibility false and another had visibility true, the labels were not getting generated for the visible section. To resolve this, Label Generation has been moved out of dlcellVisibility to ensure label metadata will always be generated. Updated performance improvements have been made instead by way of a DSS setting (generateCellMetadata) so that when generateCellMetadata is true, the label generation will honor dlcellvisibility to generate the label metadata.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D43740</span>
              </td>
              <td>
                <span>512181</span>
              </td>
              <td>
                <span>Added support for Helper Text Question Mark with visibility condition</span>
              </td>
              <td>
                <span>The Helper Text Question Mark was not displaying if the control was configured with "Help icon with overlay on hover" combined with a visibility condition. This was a missed use case, and the expression visibility support for controls.changes have now been added in the pzpega_ui_DLCellTemplate.js file.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D44769</span>
              </td>
              <td>
                <span>531439</span>
              </td>
              <td>
                <span>Resolved non-template harness stale reference for navigation menu</span>
              </td>
              <td>
                <span>Post upgrade, the navigation menu was initially present but disappeared on click of a menu item. This issue was seen only when the harness was non-template and SPA was enabled on the dynamic container: when launch harness was done on the same harness, change tracker created a new thread object but the client cache was holding the stale reference.&nbsp; When using template harness, mergeBigData adds all the new details into the stale object, preventing this issue. To resolve this issue for non-template harnesses, initChangeTracker in pzpega_ui_doc_lifecycle file has been updated.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D44943</span>
              </td>
              <td>
                <span>527919</span>
              </td>
              <td>
                <span>Handling added for mousdown triggers in Firefox dropdown and sutocomplete controls</span>
              </td>
              <td>
                <span>After recording a test case that includes entering data into an autocomplete, the data was not actually entered into the autocomplete when the test was executed but the test step was marked as successfully executed.&nbsp; Other tests for other similar autocompletes appeared to execute as expected. This was due to a mismatch between the sequences of events that are fired in the Google Chrome and Firefox browsers: the system is listening for a mousedown event to record a new step, but the browser-specific behavior is different.<br><br> Google Chrome:<br> mousedown<br> focus<br> click<br> change<br><br> Firefox:<br> mousedown<br> focus<br> mousedown<br> change<br><br> As this difference in events order is browser behavior, code has been added that will handle the specific Firefox case where mousedown triggers on invalid target elements related to dropdown and autocomplete controls.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D45101</span>
              </td>
              <td>
                <span>512527</span>
              </td>
              <td>
                <span>Added support for Helper Text Question Mark with visibility condition</span>
              </td>
              <td>
                <span>The Helper Text Question Mark was not displaying if the control was configured with "Help icon with overlay on hover" combined with a visibility condition. This was a missed use case, and the expression visibility support for controls.changes have now been added in the pzpega_ui_DLCellTemplate.js file.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D45736</span>
              </td>
              <td>
                <span>512895</span>
              </td>
              <td>
                <span>Parameter field value correctly resolved for radio button rendering</span>
              </td>
              <td>
                <span>After creating a section that held a Radio button field that used the field label as a parameter from another section, at run time the radio button displayed the parameter name on the screen rather than its value and the radio buttons did not appear. Investigation showed that when rendering the section, the param.property was not resolved and the control was not rendering. To resolve this, the DLCellTemplate.js has been updated to display the&nbsp; localized value in the Label, and DLCellTemplateMetadata and RunTimeUtil have been modified to include the parameter reference in the current context.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D45828</span>
              </td>
              <td>
                <span>519351</span>
              </td>
              <td>
                <span>Added variable null check to resolve refresh condition on dynamic layout not working</span>
              </td>
              <td>
                <span>Given a setup where a parent section had several section includes, one of which had a property that was set to refresh and disable another section when the property changed, on change<br> the refresh action was not working and hence the disabling did not work. Refreshing the browser corrected the behavior. Javascript errors were noted on the console. This has been resolved<br> by adding a null check on the variable to avoid exceptions.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D45848</span>
              </td>
              <td>
                <span>515523</span>
              </td>
              <td>
                <span>Added toggle to hold radio button value during multiple service case creation</span>
              </td>
              <td>
                <span>When a field was implemented with a radio button control in the service case screen, starting two cases of the same or different case type (with the same property and control) resulted in the selected value not sticking in the first case when selections were made for the second case. This was traced to multiple radio buttons with the same name in the dom for different AJAX containers: as per radio buttons behavior, only one could be selected if they have the same name. To correct this issue, updates have been made to change the name on radio buttons which are inside the hidden AJAX container and toggle the changes when the buttons should be shown.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D46543</span>
              </td>
              <td>
                <span>516181</span>
              </td>
              <td>
                <span>Error messages made more accessible</span>
              </td>
              <td>
                <span>In order to improve the accessibility of error messages, an aria-describedby attribute will be placed on the input that will link to the error message. To further support screen reader users, the focus will be moved to the first input field with an error after the user clicks submit.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D47344</span>
              </td>
              <td>
                <span>519890</span>
              </td>
              <td>
                <span>Single quotes escaped in RTE title field value</span>
              </td>
              <td>
                <span>A JSON parse error was caused by single quotes not being escaped in the RTE title field value. This has been corrected.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D47401</span>
              </td>
              <td>
                <span>512616</span>
              </td>
              <td>
                <span>Corrected multiplying errors on dirty flag</span>
              </td>
              <td>
                <span>The error message "Value cannot be blank" was appended on the screen every time the browser gave a dirty flag and OK was clicked. This was due to the context for the error message not being set correctly after toggleErrorMessage, and has been corrected. In addition, due to Context being incorrect when there was a check on the errors on the element, further work has been added to set the correct context before checking if errors exist.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D47583</span>
              </td>
              <td>
                <span>518039</span>
              </td>
              <td>
                <span>IsMobile 'when' configurations are properly displayed in mashup preview</span>
              </td>
              <td>
                <br><span>Given two layouts configured based on the 'when' rule pyIsMobile, the mashup preview did not work in the mobile form factor. This was only an issue with App Studio preview of a mashup and did not have an impact on the enduser use of the mashup, and the same mashup code viewed on mobile/desktop worked as expected.&nbsp; Investigation showed that the 'when' rule was evaluated correctly for the application level, but in mashup it was evaluated to false even when opened in mobile view from App studio. The Rule-Utility-Function checks to see if an overridden useragent has been specified and if it has, then it uses it for the preview in App Studio, however in mashup the userAgentDetails did not contain any of the satisfying conditions under which the condition might be returned as false. The issue in this case was traced to the Rule-Utility-Function needing to handle the scenario of Mashup Preview by checking if the thread was from the mashup preview, and that has been implemented.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D47886</span>
              </td>
              <td>
                <span>514778</span>
              </td>
              <td>
                <span>Home icon retains correct color after refresh</span>
              </td>
              <td>
                <span>By default, the home icon is a svg tag with dark or white filling (based whether it is selected or not), however if another tab was selected and the page refreshed, the icon went black and became a svg img tag. This has been corrected.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D48046</span>
              </td>
              <td>
                <span>512589</span>
              </td>
              <td>
                <span>Left panel content visible after window resize</span>
              </td>
              <td>
                <span>After maximizing or resizing the window, the left pane on Designer Studio or User Portal either did not show the left panel or did not show the panel separator and did not display any content after clicking on separator navigation icon. It was also not possible to expand the Explorers again. This has been corrected.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D49182</span>
              </td>
              <td>
                <span>513736</span>
              </td>
              <td>
                <span>Check added for special characters in parameter for table source</span>
              </td>
              <td>
                <span>A table with a literal string that included the @ symbol for a parameter to its data page source was unable to load the section if it had the optimize code checkbox enabled. This has been resolved with the addition of a check for special characters.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D49305</span>
              </td>
              <td>
                <span>519363</span>
              </td>
              <td>
                <span>Tab layout group handling improved</span>
              </td>
              <td>
                <span>A difference in scrolling speeds between left and right arrows and an issue with the cursor correctly being redirected to mandatory fields were traced to errors in the tab layout group handling. The right scrolling issue was due to the calculation for right tab movement being incorrect in certain resolutions with relatively positioned elements, and has been corrected. The cursor redirect was caused by an error in the layoutgroup focus when used inside a screen flow where the first focus goes to the screenflow navigation on load, and has been resolved by adding a try catch for an invalid selector in case of a div error.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D49468</span>
              </td>
              <td>
                <span>516323</span>
              </td>
              <td>
                <span>Parent harness context passed for reference properties in Ajax containers</span>
              </td>
              <td>
                <span>Attempting to save values failed for any property which was mapped to a parent property that was also a reference property. This was traced to an issue with the harness-level templating status: for the lazy loaded sections of a harness, the harness's template status was being passed instead of the parent harness template status when using an Ajax container. To resolve this, logic has been added to pzpega_ui_doc_serverProxy js for the invokeHandler function to add parameters based on the parent harness context to the safeURL object before invoking the post request.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D49527</span>
              </td>
              <td>
                <span>516296</span>
              </td>
              <td>
                <span>Cross-site scripting security added to CKEditor in Richtext Editor</span>
              </td>
              <td>
                <span>A scenario where HTML objects could be copied and pasted into CKEditor and the click action modified to perform different actions was traced to Pega event attributes present in the RTE content. This has been corrected by blacklisting Pega event attributes like data-click, etc.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D50208</span>
              </td>
              <td>
                <span>517231</span>
              </td>
              <td>
                <span>Corrected layout of sort and filter icons for grid tables</span>
              </td>
              <td>
                <span>The sort and filter icons in a table grid were almost overlapping, and in some cases the sort icon was so small that it was almost not visible unless the width of the specific text was enlarged to see it. This was traced to a CSS snippet present in one of the override files that forced the width of the name column grid header to 100%, and has been corrected by ensuring the sort column is left aligned next to the column header.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D50621</span>
              </td>
              <td>
                <span>519298</span>
              </td>
              <td>
                <span>Handling added for Pagelist with brackets in rendering RDL</span>
              </td>
              <td>
                <span>After configuring four nested embedded sections where the last section included a repeating dynamic layout, the RDL showed up in the included section as raw HTML markup in the UI at runtime. Analysis showed that when rendering the RDL on the last item of the Pagelist which contained PAGE_LIST_NAME&lt;LAST&gt;, the angular brackets were treated as HTML entities that caused the attribute page-context to break. This was a missed use case for First and Last pagelist items that caused an error in appending the page context to attribute, and has been resolved by encoding the HTML for the page context attribute before appending it to the DOM.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D51330</span>
              </td>
              <td>
                <span>515245</span>
              </td>
              <td>
                <span>Added toggle to hold radio button value during multiple service case creation</span>
              </td>
              <td>
                <span>When a field was implemented with a radio button control in the service case screen, starting two cases of the same or different case type (with the same property and control) resulted in the selected value not sticking in the first case when selections were made for the second case. This was traced to multiple radio buttons with the same name in the dom for different AJAX containers: as per radio buttons behavior, only one could be selected if they have the same name. To correct this issue, updates have been made to change the name on radio buttons which are inside the hidden AJAX container and toggle the changes when the buttons should be shown.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D51555</span>
              </td>
              <td>
                <span>516493</span>
              </td>
              <td>
                <span>Resolved system hang after changing input field value post note</span>
              </td>
              <td>
                <span>After upgrade, a session was hanging in a Non-Member Search Phone interaction after navigating back from "Add or edit attachments" window. The same code worked as expected in the Member Search Phone interaction. Investigation showed that changed values (transaction ID, pzFromFrame) were being sent to the client twice, once in the popup window after attaching the note and again to the parent window.&nbsp; When the changed values were consumed and used in next actions, a mismatch resulted in pzFromFrame. To resolve this, the system has been updated so the Client will not consume the pxThread.pxClientExchange value if pxThread.pxClientFrame is different from what the current tracker is using.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D51601</span>
              </td>
              <td>
                <span>516702</span>
              </td>
              <td>
                <span>Hover logic updated</span>
              </td>
              <td>
                <span>When using a dropdown in a grid layout configured with a smartInfo to be displayed on Hover, the smart tip was sometimes not displayed when the hover moved from the top to point to the dropdown. If the hover was done quickly, it was displayed. Previously, the hover was calculated only by cursor x, y positions and elements boundaries: to resolve this issue, the logic has been updated to also consider cases where the element is still hovered without meeting these conditions.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D51776</span>
              </td>
              <td>
                <span>531983</span>
              </td>
              <td>
                <span>Check added to resolve Ajax Container instantiation error in log</span>
              </td>
              <td>
                <span>When using the Microsoft Internet Explorer or Edge browsers, manually launching a Service Intent and clicking the F5 refresh button properly refreshed the screen, but the PegaRULES log file contained the error "(DynamicContainerDataModel) Error occurred while instantiating tab for the thread index." This issue / exception was observed only when pzCustomDCTabHeader was configured (pyEnableCustomTabHeaders) and when there was a AjaxContainer configured in the document. Because the CustomTabHeader recreation (DynamicContainerDataModel.updateCustomTabHeader) should be skipped for AjaxContainer, as CustomTabHeader is applicable only to the top level DC document and not to the AjaxContainer document, a check has been added to resolve this issue.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D52144</span>
              </td>
              <td>
                <span>515670</span>
              </td>
              <td>
                <span>When no active document is available on login, first document will be marked active</span>
              </td>
              <td>
                <span>After logging into the user portal, attempting to perform operations like (opening a case/work object, opening reports etc.) caused the browser request to spin or freeze. The only way to recover was to close and re-launch the browser window/session and re-login. This issue occurred when there was an active reportdefinition document before the browser/node crash in the tabless dynamic container(DC) portal. After recovery, the dynamic container did not recreate the report definition document but instead tried to activate the first document in the portal, which in this case was the default harness configured in the Dynamic Container. As it was not yet loaded, exceptions were thrown. To resolve this, when no active document is available, the first document will be marked as the active document.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D52630</span>
              </td>
              <td>
                <span>519228</span>
              </td>
              <td>
                <span>Ad hoc task time validation done on correct thread</span>
              </td>
              <td>
                <span>The validation on a time value was not working correctly when two cases of the same type were open at the same time.&nbsp; For every ad hoc task, there is some validation on the time property. After submitting a value in a second ad hoc task, the validation was triggered but used the property from the first ad hoc task and showed the error in the second ad hoc task tab. This was traced to the datepicker taking the reference from the previous MDC when it needs to take it from the active MDC.&nbsp; To correct this, the control_datepicker has been upadted to use pega.ctx.getElemById.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D52665</span>
              </td>
              <td>
                <span>518263</span>
              </td>
              <td>
                <span>Corrected error when using CharCounter in non-template mode</span>
              </td>
              <td>
                <span>An error message was generated when trying to save a section with the TextArea's Display CharCounter set to True. This was traced to an error in the remaining character count span generation for non template mode and has been corrected.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D52695</span>
              </td>
              <td>
                <span>515971</span>
              </td>
              <td>
                <span>Pagination context switch handling updated for mouse scroll</span>
              </td>
              <td>
                <span>When using various tables in the client application that have the Pagination mode set to 'Progressive' and that contain hyperlinked elements on which an 'Open Work by Handle' action has been defined, clicking an element that was loaded progressively intermittently generated an alert with the message 'Empty work item handle'. Investigation showed that dragging the scroll bar to access the latest cases worked, but using the mouse to scroll and select replicated the issue immediately. This was caused by context not being properly switched to the current harness while scrolling due to missing context switch handlers. To resolve this, code changes have been made to set the correct context before sending the request.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D52785</span>
              </td>
              <td>
                <span>518649</span>
              </td>
              <td>
                <span>Cross-site scripting protection added to layout runtime java and whitelist validation available for host/XFHost</span>
              </td>
              <td>
                <span>In order to protect against Cross-site scripting issues, filtering has been added to the RepeatDynamicIndex parameter value in layout runtime java. In addition, a validation for X-Forward-Host value has been added which will be read from a local configuration. This is in the form of a white list regex filter for the host/XFHost header to ensure the URL's actions cannot be redirected.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D53260</span>
              </td>
              <td>
                <span>524750</span>
              </td>
              <td>
                <span>Added check for section refresh when files are attached offline</span>
              </td>
              <td>
                <span>After attaching files in offline mode, the files intermittently did not show up in the "recent attachments" list when performing any action on the attachments section. This was traced to the asynchronous reload of sections, and has been resolved by adding a condition in the sectionRefreshCallback() to check if the response matches with the correct reload element.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D53488</span>
              </td>
              <td>
                <span>520013</span>
              </td>
              <td>
                <span>Tab layout group handling improved</span>
              </td>
              <td>
                <span>A difference in scrolling speeds between left and right arrows and an issue with the cursor correctly being redirected to mandatory fields were traced to errors in the tab layout group handling. The right scrolling issue was due to the calculation for right tab movement being incorrect in certain resolutions with relatively positioned elements, and has been corrected. The cursor redirect was caused by an error in the layoutgroup focus when used inside a screen flow where the first focus goes to the screenflow navigation on load, and has been resolved by adding a try catch for an invalid selector in case of a div error.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D53568</span>
              </td>
              <td>
                <span>521144</span>
              </td>
              <td>
                <span>Improved post-upgrade compatibility for custom tabbed screen flows</span>
              </td>
              <td>
                <span>After upgrade, a screen flow with a customized harness saved-as from a TabbedScreenFlow harness and configured with client side validation disabled was displaying a blank white screen if validations failed when moving from one tab to another tab. When a tabbed screen flow has errors the necessary script bundles should be added, but this configuration was created prior to the introduction of templated controls and non-templated controls don't need script files. Because the ‘doesStreamMatchInputProperties’ method sets ‘researchmode’ to true, the ‘doOnlyOnce’ method evaluated to false and script files related to templating controls were not getting appended.&nbsp; For greater backwards compatibility, 'mResearchMode’ will be set to ‘true’ to make stream processing light weight. In addition, the researchmode check will be removed when adding scripts.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D54068</span>
              </td>
              <td>
                <span>518159</span>
              </td>
              <td>
                <span>Calendar edit properly disabled when set to no text entry</span>
              </td>
              <td>
                <span>Clicking the input box of a date control used as Date+calendar popped up the calendar even when the calendar control was disabled&nbsp; and "Allow text entry" was set to No. If "Allow text entry" was set to yes, the entire calendar was disabled. To resolve this, the system has been updated to disable calendar control when 'Allow text entry' is selected to No in the presentation tab.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D54594</span>
              </td>
              <td>
                <span>521632</span>
              </td>
              <td>
                <span>Enhancement added to customize the clearing of error messages when performing modal actions</span>
              </td>
              <td>
                <span>Opening any modal dialog, for example adding a row in Table/Grid layout, cleared any existing validation error messages on UI screen. In order to make this behavior customizable, a flag has been introduced to control the clearing of error messages from primary pages on grid actions. Updates have been made in the ui_grid, ui_grid_dragdrop and ui_repeatlayout JS files to include this flag in activity parameters and the pzdoGridAction activity has been modified to consider the flag.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D54785</span>
              </td>
              <td>
                <span>524801</span>
              </td>
              <td>
                <span>Corrected grey area seen when dragging tabbed layout Smartinfo scroll</span>
              </td>
              <td>
                <span>When using Show Smartinfo in a tabbed layout group, a grey area was seen in the harness while scrolling. Scrolling up so that Smartinfo was out of view port caused another scroll bar to seen: one scrollbar was attached to the workarea div and the other to the body, and the gray area issue was only reproducible when explicitly dragging the (second) scrollbar attached to the body. To resolve this, if the popup is below the viewport using Smartinfo and the height calculated is negative, then the popup's height will be set to 0px.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D54920</span>
              </td>
              <td>
                <span>518271</span>
              </td>
              <td>
                <span>Extra checks added for pasting Excel content to RTE</span>
              </td>
              <td>
                <span>Copying content from Excel into RTE pasted an image of the content either instead of the actual content or in addition to the actual content. This was traced to the handling of the isHTML flag: the flag should be set to true when there is HTML content in the datatransfer item or while pasting images (!isHTML is the condition in if). However, the sequence of the data items in the datatransfer can change depending on the browser/OS, causing isHTML to sometimes not be set to true before it is used in the condition while pasting images. To resolve this, changes have been made to the pasteHandler in the pzpega_ckeditor_extras file so proper checks are made to figure out the type of data from the clipboard that is being pasted.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D55972</span>
              </td>
              <td>
                <span>518643</span>
              </td>
              <td>
                <span>SmartInfo disappears if cell clicked</span>
              </td>
              <td>
                <span>After configuring a smart info on a table cell on hover where the table cell was also clickable to open a case, the smart info remained on the screen when the cell was clicked until the mouse was moved. This was opposite of the expectation that the smart info would disappear on click in this scenario. Analysis showed that the overlay event was not being dismissed if its associated element was removed/hidden, and this has been corrected.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D56038</span>
              </td>
              <td>
                <span>518031</span>
              </td>
              <td>
                <span>Corrected top row focus on scroll up for paginated table</span>
              </td>
              <td>
                <span>When loading results in a table with progressive pagination, scrolling down and waiting for data to load and then scrolling back up resulted in the focus being set on the second row instead of the first as expected. This was due to an incorrect calculation for Scrolltop, which has been corrected.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D56723</span>
              </td>
              <td>
                <span>523836</span>
              </td>
              <td>
                <span>Added check to resolve blank screen for embedded Ajax container with tabs</span>
              </td>
              <td>
                <span>When an Ajax container was within another section with a tab group, trying to open a perform harness resulted in a blank screen. This has been resolved by adding a check to ensure this.headers[this._active] exists before trying to retrieve variables from it.&nbsp;</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D57278</span>
              </td>
              <td>
                <span>519460</span>
              </td>
              <td>
                <span>Padding added to keep sort icon always visible in Google Chrome</span>
              </td>
              <td>
                <span>When sorting a grid column on Google Chrome, the sort icon was missing if the header label was large. This was traced to the Sort icon being handled as a background image of 12px in width inside 'display:table-cell' which was forced to shrink by the resize. To resolve this, 'padding: 0 6px;' has been added to each side to keep the space intact for the sort icon to always be visible.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D57629</span>
              </td>
              <td>
                <span>521727</span>
              </td>
              <td>
                <span>Navigation sub menu shows all options</span>
              </td>
              <td>
                <span>The switch app menu was running off the bottom of the screen, and using arrow keys to navigate it caused the whole portal to jump up. This was traced to the sub-menu style attribute 'top' being changed to '0' if it was given a negative value. To resolve this, a condition was added to check whether the rendering sub-menu height is greater than viewport, and adjust the top attribute value accordingly.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D57928</span>
              </td>
              <td>
                <span>526006</span>
              </td>
              <td>
                <span>Special characters in field value display as expected</span>
              </td>
              <td>
                <span>After configuring a text input with a helper text (Help Icon with overlay on hover) that pointed to a Field Value, and the Field Value pointed to a property from the clipboard {.HelperText1} that had a value like (Some text here), in runtime the text in helper was printed with the HTML ASCII number and the text instead of the parentheses around the text. This has been resolved by escaping the special characters so they are displayed as expected.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D58868</span>
              </td>
              <td>
                <span>531797</span>
              </td>
              <td>
                <span>Check added for unicode calendar values</span>
              </td>
              <td>
                <span>After creating a repeating grid section for work report definition with enabled filter option, running the section and giving the filter value in unicode calendar form such as <span>２０１９／１１／１２</span></span><span> did not pass validation. This has been resolved by adding a check for unicode values</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D59003</span>
              </td>
              <td>
                <span>522035</span>
              </td>
              <td>
                <span>Cross-site scripting security added to RWClasses</span>
              </td>
              <td>
                <span>Cross-site scripting protections have been added to the RWClasses parameter.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D60367</span>
              </td>
              <td>
                <span>534851</span>
              </td>
              <td>
                <span>StretchTabsWidth performance improvements</span>
              </td>
              <td>
                <span>Slowness was seen when a new intent task was created through an interaction. To improve performance, some of the unnecessary calls to the Layout Group _updateStretchTabsWidth() function have been eliminated, and the function code has been updated to use native javascript performant helper functions so it starts rendering sooner. A flag has also been added to disable addnewtab and resizeactions: these need to be enabled through pega.u.d.DISABLE_LG_RESIZE and pega.u.d.DISABLE_ADDNEWTAB.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D61122</span>
              </td>
              <td>
                <span>522496</span>
              </td>
              <td>
                <span>Multi-select in drop down displays subset of a value</span>
              </td>
              <td>
                <span>In a multi-select drop down, choosing a value (say EMEA-Interior) and then choosing a subset of that value as the second choice (ex, Interior), the second value was not getting selected. If the selection was performed the other way around (Interior first and then EMEA-Interior), it worked as expected.&nbsp; Analysis showed that patterns with similar names did not have the necessary differentiation in the system, and a comma has been added to the generated ID to identify similar values in multiselect capsules.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D62361</span>
              </td>
              <td>
                <span>534808</span>
              </td>
              <td>
                <span>Read-Only harness takes precedence over editable section with when condition</span>
              </td>
              <td>
                <span>Given a harness which was marked as Read Only and contained sections which were configured as editable based on some conditions, when the condition became true, the section became editable and ignored the read only conditions applied on the harness. Investigation showed that when a read-only 'when' rule evaluated to false, it rendered the layout in Edit mode instead of falling back to the read-only status of parent. This has been corrected by ensuring that when read-only evaluates to false, the system will fall back to the parent read-only status.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D62436</span>
              </td>
              <td>
                <span>527200</span>
              </td>
              <td>
                <span>Datetime control with Display details readonly works with Edit input</span>
              </td>
              <td>
                <span>After upgrade, a date time control was being reformatted incorrectly when it was set with Display details as read-only with an Edit input rule configured on the property to convert the date entered (ex, 112019 to 01/01/2019). To resolve this, a data-editinput attribute has been added in the control markup to support this configuration.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D64244</span>
              </td>
              <td>
                <span>532980</span>
              </td>
              <td>
                <span>Support added for recording with sIngle-option radio button inside a repeating grid</span>
              </td>
              <td>
                <span>Recording a test case was not working when a single option radio button (i.e., radio button control with property of type boolean) was configured inside a repeating grid. In this case, it was found that the Radio button markup did not have a data-test-id attribute for non-template single option; this has been added.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D64667</span>
              </td>
              <td>
                <span>531804</span>
              </td>
              <td>
                <span>Cursor issue resolved for tab within expandable row</span>
              </td>
              <td>
                <span>When pressing the “Tab” key on an expanded row, the cursor was not moving inside the expanded part. This has been fixed by adding a check to get the correct first focusable element.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D64694</span>
              </td>
              <td>
                <span>533960</span>
              </td>
              <td>
                <span>Check added for Turkish locale in Firefox</span>
              </td>
              <td>
                <span>When using Firefox in the Turkish locale, attempting to open worklist subsets or edit tables in a modal dialogue caused the browser to hang. This was traced to the character conversion process in the browser and has been resolved with the addition of a check.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D64945</span>
              </td>
              <td>
                <span>534321</span>
              </td>
              <td>
                <span>Accessibility enhanced for multiselect</span>
              </td>
              <td>
                <span>Aria attributes for multiselect items and container have been added to enhance accessibility.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D66095</span>
              </td>
              <td>
                <span>529705</span>
              </td>
              <td>
                <span>Cross-site scripting security added to Richtext Editor</span>
              </td>
              <td>
                <span>A scenario where HTML objects could be copied and pasted into CKEditor and the click action modified to perform different actions was traced to Pega event attributes present in the Rich Text Editor content. This has been corrected by blacklisting Pega event attributes like data-click, etc. In&nbsp;</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D66387</span>
              </td>
              <td>
                <span>530841</span>
              </td>
              <td>
                <span>ReloadSectionsCache handling improved</span>
              </td>
              <td>
                <span>Change Tracker was reporting changes properly and ExpressionEvaluator logic identified the correct DOM element related to layout refresh, but the refresh was not getting triggered due to _isInvalidRefresh logic. This was traced to reloadSectionsCache not being optimally maintained, and has been resolved by updating reloadSetionCache to avoid unnecessary reloads and only update the cache after a reload section is completed.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D66436</span>
              </td>
              <td>
                <span>529670</span>
              </td>
              <td>
                <span>Correct Value shown for Helper Text controls with labels</span>
              </td>
              <td>
                <span>Helper Text sourced from a field value was displaying the field value's 'Translate From' value rather than the 'Translate to' value. Analysis showed that the 'title' attribute of the corresponding icon on the DOM was being populated differently depending on whether it was a control with labels (not working) or a caption on a checkbox control (worked as expected). To address this, a check has been added for datetime and checkbox controls to send fieldname as pyCaption and pyActionPrompt respectively instead of pyTooltip to resolve the value.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D67674</span>
              </td>
              <td>
                <span>537587</span>
              </td>
              <td>
                <span>Check added to skip validationtype for disabled controls with Accessibility</span>
              </td>
              <td>
                <span>On enabling Accessibility, a disabled DateTime control was throwing a 'required' error. This was due to the dropdown markup having the validationType="required" attribute set if the control was configured with a required 'when' expression. Even though the expression evaluated as false, validationType="required" was still set. This issue was seen only in non-template datetime control, and has been corrected with a check to skip adding a validationType attribute for a disabled control in Accessibility mode.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D68277</span>
              </td>
              <td>
                <span>541814</span>
              </td>
              <td>
                <span>Added logoff check for requestors</span>
              </td>
              <td>
                <span>After upgrade, the error "java.lang.InterruptedException. Requester has been destroyed" was appearing in the logs. Investigation showed this was related to unregister requests being submitted after logoff, and has been resolved by updating the system to check for logout before sending unregister requests.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D68311</span>
              </td>
              <td>
                <span>535984</span>
              </td>
              <td>
                <span>Corrected table row highlighting on iPad</span>
              </td>
              <td>
                <span>A table row was highlighted when clicked on an iPad in landscape view, but when the device was rotated to portrait view the row was not highlighted. This was traced to the background CSS overriding the selected style, and has been corrected by modifying py-responsive-overrides.css.&nbsp;</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D68721</span>
              </td>
              <td>
                <span>532594</span>
              </td>
              <td>
                <span>Corrected span tags in non-templated Autocomplete</span>
              </td>
              <td>
                <span>Span tags were seen in the auto complete list when Results display was selected as "In a list". This appeared only in non-template mode, and was traced to the application of a crossScriptingFilter after adding span.match element to the value. To correct this, the crossScriptingFilter will be applied before adding the span.match markup to the value.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D69452</span>
              </td>
              <td>
                <span>536399</span>
              </td>
              <td>
                <span>Layout management corrected for nested gadget sections</span>
              </td>
              <td>
                <span>Post-upgrade, some buttons were missing or mis-aligned, specifically the 'Reopen' and 'Cancel this Assignment' buttons were missing, and if 'Cancel this Assignment' was clicked, the Back button was missing. Investigation showed that when using nested gadget section includes, the necessary stack management to pop previous gadget parameters was not present. This has been resolved by adding a check for template rendering, as there is separate handling for template rendering to manage the stack.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D70064</span>
              </td>
              <td>
                <span>541961</span>
              </td>
              <td>
                <span>Case UI correct following multiple approval levels</span>
              </td>
              <td>
                <span>After proceeding through different levels of approvals, the UI of the case was incorrect on the final approval submit. This was traced to the forceSkinGeneration parameter, which was set to true, being used by a workformstyles fragment. This has been resolved by changing pzUsePreferenceSkin to "once" and setting the parameter forceSkinGeneration to false after the pyAttachAsPDF activity call.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D70310</span>
              </td>
              <td>
                <span>537139</span>
              </td>
              <td>
                <span>Window type check added for icon display logic</span>
              </td>
              <td>
                <span>When a Role had privileges to use Live UI, Agile WorkBench and Scenario Testing, the Scenario Testing tool icon intermittently did not show. This was traced to an incorrect condition used to check whether current window was of type desktop (portal) window, and has been resolved by adding a check that will also ensure consistency with Agile Studio icon display logic.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71105</span>
              </td>
              <td>
                <span>532188</span>
              </td>
              <td>
                <span>Corrected error when using CharCounter in non-template mode</span>
              </td>
              <td>
                <span>An error message was generated when trying to save a section with the TextArea's Display CharCounter set to True. This was traced to an error in the remaining character count span generation for non template mode and has been corrected.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71202</span>
              </td>
              <td>
                <span>535407</span>
              </td>
              <td>
                <span>Corrected autocomplete results for parameterized Report Definition in grid</span>
              </td>
              <td>
                <span>An autocomplete included in a grid and configured with results display as 'List' where the source for the autocomplete was a parameterized report definition and the Report Definition parameter was an associated property of autocomplete did not show any results.&nbsp; If the results display was changed from 'List' to 'Grid', it worked as expected. This has been resolved by adding a null check on rowdetail in the "replaceParamsTokens" method for autocomplete.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71355</span>
              </td>
              <td>
                <span>537006</span>
              </td>
              <td>
                <span>Support added for dynamic CSS class reference in optimized grid</span>
              </td>
              <td>
                <span>When using the property pyStatusWork in an optimized grid, it was not possible to set a color code for different work statuses. This worked on an unoptimized grid. This has been resolved with the introduction of a dynamic CSS feature. This control can be changed to an autogenerated control like "Formatted text" and apply color coding through classes. To use this, a property value must be specified in cell classes in the presentation tab of the table cell, and then populate each result of a data page with that property which contains some class value appropriate for status value. CSS must be written for the different classes (class name is stamped on &lt;td&gt; in markup).</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71402</span>
              </td>
              <td>
                <span>532330</span>
              </td>
              <td>
                <span>Localization added for Pega Call Login screen</span>
              </td>
              <td>
                <span>Localization has been added to the label "Value can not be blank" on the Pega Call Login screen.&nbsp;</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71522</span>
              </td>
              <td>
                <span>539321</span>
              </td>
              <td>
                <span>Radio button error resolved for scenario testing</span>
              </td>
              <td>
                <span>When creating a scenario test case that selected a radio button and navigated the screen, it worked to complete a case and save the scenario test case in a rule set. However, attempting to then run the scenario test case stopped with the error message "Value cannot be blank" for the radio button even though the value "No" was captured for the button. This was traced to the firing of the change event, and the system has been updated so 'pega.u.d.setProperty' will only fire a click event on a selected radio button option.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71756</span>
              </td>
              <td>
                <span>533548</span>
              </td>
              <td>
                <span>Thread Cleanup error resolved</span>
              </td>
              <td>
                <span>After upgrade, intermittent exception errors were being generated by the FreeClipboard activity when switching between applications. This was traced to specific use-case issues with Thread Cleanup, and has been resolved.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D71944</span>
              </td>
              <td>
                <span>543729</span>
              </td>
              <td>
                <span>Resolved data page loop in templatized UI</span>
              </td>
              <td>
                <span>A Layout Group was configured with six dropdowns sourced to Parameterized datapages with "disable automatic refresh" unchecked; every next dropdown depended upon the previous property, and the previous property was sourced as parameter, and so on until last dropdown. When the value in the dropdowns changed, the section kept refreshing and the portal became unresponsive. This was traced to the combination of a Datapage as the source to the dropdown with "disable automatic refresh" unchecked and expression evaluation as well.<br> Templatized UI has 'visible when' expressions for all the properties inside the top level page. Changing the first one fired refresh on the next one, and the next one's refresh fired the other drop down refresh until it became recursive. This did not occur in non-templatized UI as it does not have expression IDs and there are no recursive calls. This issue has been corrected by modifying how the temporary mapping is populated by the reloadCells API in Expression Evaluator to prevent unwanted cell refreshes.&nbsp;</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D72121</span>
              </td>
              <td>
                <span>536408</span>
              </td>
              <td>
                <span>Currency Control accepts value on PostValue action set</span>
              </td>
              <td>
                <span>Currency control in the section was sourced by a decimal property. Irrespective of the value entered, the validation triggered the message "entered value is not a decimal value" and did not allow user to proceed. Investigation showed than on getting the server response for post value action, the target element was updated with the response value when it should be skipped for currency control. To resolve this, an additional check for attribute: data-formatting has been added to the textInput control so when action PostValue is configured on Currency control and there is a change of value, the system will skip replacing the value with formatted value.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D73260</span>
              </td>
              <td>
                <span>536888</span>
              </td>
              <td>
                <span>Multiselect control support for offline-enabled iOS app</span>
              </td>
              <td>
                <span>After a custom mobile application for iOS was built and was running on iPad for an offline-enabled user adding a multiselect control into a section as part a flow caused the screen to hang when a save or submit was performed. This has been resolved by enhancing support for offline multiselect submit with the addition of pzpega_ui_template_multiselect_capsule to offline static bundle.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D73510</span>
              </td>
              <td>
                <span>538662</span>
              </td>
              <td>
                <span>Cross-site scripting filtering for ActionStringID</span>
              </td>
              <td>
                <span>Cross-site scripting filter logic has been added to the ActionStringID function.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D73847</span>
              </td>
              <td>
                <span>536161</span>
              </td>
              <td>
                <span>Added exception handler for URL decode error</span>
              </td>
              <td>
                <span>After logging in to Pega Deployment Manager, clicking Users -&gt; People in the left navigation panel resulted ArrayIndexOutOfBoundsException. This was traced to an incomplete trailing escape (%) pattern and has been resolved by adding checks and exception handling for incomplete data from the browser.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D74008</span>
              </td>
              <td>
                <span>537289</span>
              </td>
              <td>
                <span>AAAFilter on the grid shows value for a second click</span>
              </td>
              <td>
                <span>A Filter on the grid was not showing any record value for a second click. This was traced to a conflict in considering column headers caused by the Filter Icon delegating two Grids, leading the process to take the context of the other Grid instead of the one which had been clicked. To resolve this, a check for the right context of the Grid has been added to the filterOnProperEvent method.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D74057</span>
              </td>
              <td>
                <span>540058</span>
              </td>
              <td>
                <span>Updated aria handling for Dynamic Layout Group 'Accordion'&nbsp;</span>
              </td>
              <td>
                <span>The Dynamic Layout Group display type 'Accordion'&nbsp; was not getting initialized properly on the browser developer inspector. This was traced to the aria-selected attribute set to always be true, and has been resolved by adding logic to set and unset aria- selected only on the active tab. When the tab is not active, then aria-selected will be false.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D74165</span>
              </td>
              <td>
                <span>537512</span>
              </td>
              <td>
                <span>DateRange clear button localized</span>
              </td>
              <td>
                <span>Localization has been added to the 'clear' button in DateRange.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D74704</span>
              </td>
              <td>
                <span>535940</span>
              </td>
              <td>
                <span>Section and navigation rule localization added</span>
              </td>
              <td>
                <span>Localization has been added for sections and navigation rules that include some of the out-of-the-box rules like Locked and Get help.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D75205</span>
              </td>
              <td>
                <span>543565</span>
              </td>
              <td>
                <span>Refresh with DT or pre-activity added to dirty pop up check&nbsp;</span>
              </td>
              <td>
                <span>Given a button which when clicked launched a data transform to set a few properties on the UI followed by a section refresh, a dirty warning popup did not appear when closing the work object even though the property changed via the refresh section. This has been resolved with an additional condition in the dirty pop up check to handle a refresh section using a DT or pre-activity.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D75966</span>
              </td>
              <td>
                <span>537944</span>
              </td>
              <td>
                <span>Check added so DT parameters passed when using anchor tag</span>
              </td>
              <td>
                <span>When using a link control configured such that the value of the text in the link control refers to an anchor tag such as &lt;a href="<a href="http://www.google.com" target="_blank" rel="noopener">http://www.google.com</a>"&gt;Text&lt;/a&gt;, clicking the link to launch a harness and call a DT with passed parameters was not working. Investigation showed that when the link had an anchor tag, pyDataTransformDynamicParams was not getting passed as query string parameter. In pega.desktop.showHarness function, there is a If condition which checks whether any "=" is present in preDataTransformName variable and if there is any, it does not add pyDataTransformDynamicParams. This was not an issue with anchor tag itself, but rather a generic issue: any value with "=" would behave in the same way. To resolve this, the pega.desktop.showHarness API has been updated to check against the proper value (pyDataTransform=) instead of just = to identify old modal parameters.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D76178</span>
              </td>
              <td>
                <span>538600</span>
              </td>
              <td>
                <span>Corrected Cosmos dropdown positioning in right-to-left locales</span>
              </td>
              <td>
                <span>When using the Arabic locale with the Cosmos UI, the dropdown was located on the right side of the field instead of the left side. This has been corrected.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D76348</span>
              </td>
              <td>
                <span>538607</span>
              </td>
              <td>
                <span>Right-to-left styling added to Cosmos localization</span>
              </td>
              <td>
                <span>When using Cosmos, the Preview Screen was displayed in the middle of the screen when using a locale that reads right to left, such as Arabic or Hebrew. This has been resolved by updating the styling to handle right-to-left scenarios.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D76826</span>
              </td>
              <td>
                <span>543094</span>
              </td>
              <td>
                <span>Corrected SmartInfo header text overlap with close icon</span>
              </td>
              <td>
                <span>SmartInfo header text was not consistent in being wrapped to the next line, and when it did not wrap it was overlapping with the close icon. This was traced to the method used for applying the inline style to SmartInfo's header div by getting the body div's offsetWidth. In working scenarios, the body div's width has fractional portion (ex. 368.188px) and offsetWidth returns a rounded number like 368px in this case. This resulted in the header content not fitting in single line because it exceeded the space it was given, and wrapping resulted. In the non-working scenario, the body div's width did not have a fractional portion and therefore matched offsetWidth, meaning the header content fit to single line and overlapped the close icon. To resolve this, SmartInfo Header Div has been updated to be always be slightly less than the SmartInfo Body div.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D77268</span>
              </td>
              <td>
                <span>540565</span>
              </td>
              <td>
                <span>Added handling for iOS13 webView scrolling</span>
              </td>
              <td>
                <span>When using iOS13 both in Native Client and in Safari Browser with the Pega app loaded into webView, there was no ability to scroll it down in order to perform the pull to refresh gesture which reloaded the web view contents. To resolve this, "overflow:auto" has been added to the body tag in the mobile_hybrid.js file for use with iOS13.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D77359</span>
              </td>
              <td>
                <span>542136</span>
              </td>
              <td>
                <span>AAAFilter on the grid shows value for a second click</span>
              </td>
              <td>
                <span>A Filter on the grid was not showing any record value for a second click. This was traced to a conflict in considering column headers caused by the Filter Icon delegating two Grids, leading the process to take the context of the other Grid instead of the one which had been clicked. To resolve this, a check for the right context of the Grid has been added to the filterOnProperEvent method.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D77658</span>
              </td>
              <td>
                <span>542844</span>
              </td>
              <td>
                <span>Updated backwards compatibility for custom date/time with extra text</span>
              </td>
              <td>
                <span>After upgrade, migrated extra text in the custom date format was causing confusion. The previous support of additional text on earlier versions was not intentional, but was allowed by the previous default of non-template mode. In template mode, when custom datetime format includes plain text in single quotes, pega.ui.Formatter.formatDateTime processes the entire format string instead of only the datetime formats. To avoid confusion, updates have been made so if a custom format has plain text in quotes, the system will separate the formats and resolve them.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D78019</span>
              </td>
              <td>
                <span>541192</span>
              </td>
              <td>
                <span>Thread Cleanup error resolved</span>
              </td>
              <td>
                <span>After upgrade, intermittent exception errors were being generated by the FreeClipboard activity when switching between applications. This was traced to specific use-case issues with Thread Cleanup, and has been resolved.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D78562</span>
              </td>
              <td>
                <span>543529</span>
              </td>
              <td>
                <span>Calendar Mode accessibility enhanced</span>
              </td>
              <td>
                <span>Accessibility has been added for datetime control's calendar mode by adding alternative text and an aria-label for the image icon with a value from fieldvalue "Choose from calendar".</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D79103</span>
              </td>
              <td>
                <span>543136</span>
              </td>
              <td>
                <span>Corrected Finish Assignment error</span>
              </td>
              <td>
                <span>When trying to open a resolved case using the "open assignment" action in a button by passing an assignment key, finish assignment was not working. This was traced to context not being correctly set before querying for the errorDiv for removal, and has been resolved by explicitly setting the current context before removing the errordiv.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D79777</span>
              </td>
              <td>
                <span>542046</span>
              </td>
              <td>
                <span>Corrected top navigation rendering for Robot Manager harness with parameters</span>
              </td>
              <td>
                <span>When using "Robot Manager", a Single Doc, top navigation enabled portal, with pre DTs or Activities provided to launch a new harness on click of links from multiple places, an invalid data error appeared when a new Harness was rendered as part of some button or link click. If the the tab was closed and the Robot Manager portal was initiated from Dev studio, invalid data was loaded. This was traced to a missing use case for loading the portal center-panel harness when it was configured with preactivity and preDT with parameters. To resolve this, the showdesktop activity has been updated to handle preDT and preactivity parameters of the launch harness action.&nbsp;</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D80223</span>
              </td>
              <td>
                <span>542921</span>
              </td>
              <td>
                <span>Cross-site scripting filtering for ActionStringID</span>
              </td>
              <td>
                <span>Cross-site scripting filter logic has been added to the ActionStringID function.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D81779</span>
              </td>
              <td>
                <span>543855</span>
              </td>
              <td>
                <span>Logic added to prevent refresh on enter when no action is configured</span>
              </td>
              <td>
                <span>After configuring a text input followed by an icon with display SmartInfo for click action, switching focus to the text input again after displaying the SmartInfo and hitting enter invoked the refresh harness even though no action was configured for the text input. This has been resolved by updating 'pzpega_ui_events.js' -&gt; keyDownHandler() with logic to call preventDefault() based on certain conditions.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
            <tr>
              <td>
                <span>D81900</span>
              </td>
              <td>
                <span>544327</span>
              </td>
              <td>
                <span>Thread Cleanup error resolved</span>
              </td>
              <td>
                <span>After upgrade, intermittent exception errors were being generated by the FreeClipboard activity when switching between applications. This was traced to specific use-case issues with Thread Cleanup, and has been resolved.</span>
              </td>
              <td>
                <span>User Interface</span>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    {% endset %}

    {% include '@bolt-elements-wrapper/wrapper.twig' with {
      attributes: {
        'style': 'max-width: 916px;'
      },
      content: table
    } only %}
  </bolt-stack>
{% endset %}

{% include '@bolt-layouts-site/site.twig' with {
  main: {
    content: main_content,
  }
} only %}
