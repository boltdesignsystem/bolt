{% set schema = bolt.data.components['@bolt-components-modal'].schema %}

<bolt-text>The modal container's coloring theme can be adjusted by the <code>theme</code> prop. The default is set to <code>xlight</code>.</bolt-text>

<bolt-text headline font-size="xlarge">Theme Options</bolt-text>

<bolt-table>
  <table>
    <tbody>
      {% for theme in schema.properties.theme.enum %}
        <tr>
          <th>
            {% set text = 'This is a modal set to ' ~ theme ~ ' theme.' %}
            {% if theme == 'none' %}
              {% set modal_content = '<mark>' ~ text ~ '</mark>' %}
            {% else %}
              {% set modal_content = text %}
            {% endif %}
            {% include '@bolt-elements-button/button.twig' with {
              content: theme|capitalize,
              size: 'small',
              display: 'block',
              attributes: {
                type: 'button',
                "data-bolt-modal-target": ".js-bolt-modal--theme-" ~ theme,
              }
            } only %}
            {% include '@bolt-components-modal/modal.twig' with {
              content: modal_content,
              theme: theme,
              attributes: {
                class: "js-bolt-modal--theme-" ~ theme,
              },
            } only %}
          </th>
          <td>
            {% if theme == 'none' %}
              This makes the modal container transparent.
            {% else %}
              This sets the {{ theme }} theme on the modal container.
            {% endif %}
          </td>
        </tr>
      {% endfor %}
    </tbody>
    <tfoot>
      <tr>
        <th colspan="2">Additional Notes: this prop only applies to viewports equal to or above the small breakpoint (~600px).</th>
      </tr>
    </tfoot>
  </table>
</bolt-table>
